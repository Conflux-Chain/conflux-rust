[package]
description = "Conflux core library"
homepage = "https://www.confluxnetwork.org"
license = "GPL-3.0"
name = "cfxcore"
version = { workspace = true }
edition = "2021"

[dependencies]
bit-set = "0.4"
substrate-bn = { workspace = true, default-features = false }
byteorder = { workspace = true }
cfxkey = { workspace = true }
cfx-addr = { workspace = true }
cfx-bytes = { workspace = true }
cfx-math = { workspace = true }
cfx-internal-common = { workspace = true }
cfx-parameters = { workspace = true }
cfx-statedb = { workspace = true }
cfx-storage = { workspace = true }
cfx-vm-tracer-derive = { workspace = true }
cfx-types = { workspace = true }
cfx-vm-types = { workspace = true }
cfx-vm-interpreter = { workspace = true }
cfx-executor = { workspace = true }
cfx-execute-helper = { workspace = true }
channel = { path = "src/pos/common/channel" }
clap = { workspace = true }
dag = { workspace = true }
derivative = "2.0.2"
db = { workspace = true }
either = "1.5.3"
fallible-iterator = "0.2"
fs_extra = "1.1.0"
futures = { workspace = true, features = ["compat"]}
hashbrown = "0.7.1"
hibitset = { workspace = true }
itertools = { workspace = true }
io = { workspace = true }
jsonrpc-core = { workspace = true }
keccak-hash = { workspace = true }
kvdb = "0.4"
kvdb-rocksdb = { workspace = true }
lazy_static = { workspace = true }
link-cut-tree = { workspace = true }
log = { workspace = true }
log4rs = { workspace = true, features = ["background_rotation", "gzip"] }
lru_time_cache = "0.9.0"
malloc_size_of = { workspace = true }
malloc_size_of_derive = { workspace = true }
memmap = "0.6"
memoffset = "0.5.1"
memory-cache = { workspace = true }
metrics = { workspace = true }
network = { workspace = true }
num = "0.2"
num-traits = { version = "0.2.8", default-features = false }
parity-crypto = { workspace = true }
parking_lot = { workspace = true }
primal = "0.2.3"
primitives = { workspace = true }
priority-send-queue = { workspace = true }
prometheus = { version = "0.7.0", default-features = false }
rand = { workspace = true }
rand_08 = {package = "rand", version = "0.8"}
rand_xorshift="0.2"
rangetools = "0.1.4"
random-crash = { workspace = true }
rayon = { workspace = true }
rlp = { workspace = true }
rlp_derive = { workspace = true }
rustc-hex = { workspace = true }
secret-store = { workspace = true }
serde = { version = "1.0", features = ["rc"] }
serde_derive = { workspace = true }
serde_json = { workspace = true }
siphasher = "0.3"
slab = "0.4"
solidity-abi = { workspace = true }
solidity-abi-derive = { workspace = true }
sha3-macro = { workspace = true }
sqlite = "0.25"
sqlite3-sys = "0.12"
static_assertions = "1.1.0"
strfmt = "0.1"
tempdir = "0.3"
threadpool = "1.0"
throttling = { workspace = true }
toml = "0.5.8"
tokio = { workspace = true, features = ["full"] }
tokio-timer = { workspace = true }
tokio-stream = { workspace = true }
unexpected = { workspace = true }
strum = { workspace = true }
strum_macros = { workspace = true }
smart-default = "0.6.0"
bls-signatures = { workspace = true }
tiny-keccak = { workspace = true,  features = ["keccak"]}
bcs = "0.1.2"
async-trait = { workspace = true }
num-derive = { version = "0.3.3", default-features = false }
thiserror = { workspace = true }
fallible = { path = "src/pos/common/fallible" }
mirai-annotations = { version = "1.10.1", default-features = false }
bounded-executor = { path = "src/pos/common/bounded-executor" }
diem-config = { path = "src/pos/config" }
diem-crypto = { path = "src/pos/crypto/crypto" }
diem-infallible = { path = "src/pos/common/infallible" }
diem-logger = { path = "src/pos/common/logger" }
diem-metrics = { path = "src/pos/common/metrics" }
diem-secure-storage = { path = "src/pos/secure/storage" }
diem-types = { path = "src/pos/types" }
executor-types = { path = "src/pos/types/executor-types" }
executor = {path = "src/pos/consensus/executor" }
consensus-types = { path = "src/pos/consensus/consensus-types" }
safety-rules = { path = "src/pos/consensus/safety-rules" }
pos-ledger-db = { path = "src/pos/storage/pos-ledger-db" }
cached-pos-ledger-db = { path = "src/pos/storage/cached-pos-ledger-db" }
schemadb = { path = "src/pos/storage/schemadb" }
storage-interface = { path = "src/pos/storage/storage-interface" }
short-hex-str = { path = "src/pos/common/short-hex-str" }
subscription-service = { path = "src/pos/common/subscription-service" }
fail = { workspace = true }
anyhow = { workspace = true }
once_cell = { workspace = true }
move-core-types = { path = "src/pos/types/move-core-types" }
pow-types = {path = "src/pos/types/pow-types" }
async-oneshot = { workspace = true }
proptest = { version = "1.0.0", optional = true }
proptest-derive = { version = "0.3.0", optional = true }
diem-temppath = { path = "src/pos/common/temppath" }
crash-handler = { path = "src/pos/common/crash-handler" }
heap-map = { workspace = true }
impl-trait-for-tuples = "^0.2"
impl-tools = "^0.10"
treap-map = { workspace = true }
cfx-packing-pool = { workspace = true }
alloy-rpc-types-trace = { workspace = true }
geth-tracer = { workspace = true }
cfx-rpc-cfx-types = { workspace = true }
cfx-rpc-eth-types = { workspace = true }
jsonrpsee = { workspace = true, features = ["jsonrpsee-types"] }
cfx-rpc-utils = { workspace = true }
cfx-util-macros = { workspace = true }
parity-util-mem = { workspace = true, default-features = false }

[dev-dependencies]
criterion = "0.3"
cfx-storage = { workspace = true, features = ["testonly_code"] }
cfx-vm-types = { workspace = true, features = ["testonly_code"] }
proptest = "1.0.0"
proptest-derive = "0.3.0"
consensus-types = { path = "src/pos/consensus/consensus-types", features = ["fuzzing"] }

[features]
default = []
# Unfortunately cfg test attributes doesn't work across crates,
# we have to define a feature for test code.
# https://users.rust-lang.org/t/cfg-test-doesnt-propagate-to-external-crates/13046
testonly_code = []
fuzzing = ["proptest", "proptest-derive"]