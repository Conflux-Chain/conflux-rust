[package]
description = "Conflux core library"
homepage = "https://www.confluxnetwork.org"
license = "GPL-3.0"
name = "cfxcore"
version = { workspace = true }
edition = "2021"

[dependencies]
byteorder = { workspace = true }
cfxkey = { workspace = true }
cfx-addr = { workspace = true }
cfx-bytes = { workspace = true }
cfx-internal-common = { workspace = true }
cfx-parameters = { workspace = true }
cfx-statedb = { workspace = true }
cfx-storage = { workspace = true }
cfx-types = { workspace = true }
cfx-vm-types = { workspace = true }
cfx-executor = { workspace = true }
cfx-execute-helper = { workspace = true }
channel = { workspace = true }
clap = { workspace = true }
dag = { workspace = true }
db = { workspace = true }
either = { workspace = true }
fallible-iterator = { workspace = true }
futures = { workspace = true, features = ["compat"] }
hashbrown = { workspace = true }
hibitset = { workspace = true }
itertools = { workspace = true }
io = { workspace = true }
jsonrpc-core = { workspace = true }
keccak-hash = { workspace = true }
kvdb = { workspace = true }
lazy_static = { workspace = true }
link-cut-tree = { workspace = true }
log = { workspace = true }
log4rs = { workspace = true, features = ["background_rotation", "gzip"] }
lru_time_cache = { workspace = true }
malloc_size_of = { workspace = true }
malloc_size_of_derive = { workspace = true }
metrics = { workspace = true }
network = { workspace = true }
num = { workspace = true }
num-traits = { workspace = true, default-features = false }
parking_lot = { workspace = true }
primal = { workspace = true }
primitives = { workspace = true }
priority-send-queue = { workspace = true }
rand = { workspace = true }
rand_08 = { workspace = true }
rand_xorshift = { workspace = true }
rangetools = { workspace = true }
rayon = { workspace = true }
rlp = { workspace = true }
rlp_derive = { workspace = true }
rustc-hex = { workspace = true }
secret-store = { workspace = true }
serde = { workspace = true, features = ["rc"] }
serde_derive = { workspace = true }
serde_json = { workspace = true }
siphasher = { workspace = true }
slab = { workspace = true }
solidity-abi = { workspace = true }
static_assertions = { workspace = true }
threadpool = { workspace = true }
throttling = { workspace = true }
toml = { workspace = true }
tokio = { workspace = true, features = ["full"] }
tokio-stream = { workspace = true }
unexpected = { workspace = true }
strum = { workspace = true }
strum_macros = { workspace = true }
smart-default = { workspace = true }
bls-signatures = { workspace = true }
tiny-keccak = { workspace = true, features = ["keccak"] }
bcs = { workspace = true }
async-trait = { workspace = true }
num-derive = { workspace = true }
thiserror = { workspace = true }
fallible = { workspace = true }
mirai-annotations = { workspace = true, default-features = false }
bounded-executor = { workspace = true }
diem-config = { workspace = true }
diem-crypto = { workspace = true }
diem-infallible = { workspace = true }
diem-logger = { workspace = true }
diem-metrics = { workspace = true }
diem-types = { workspace = true }
executor-types = { workspace = true }
executor = { workspace = true }
consensus-types = { workspace = true }
safety-rules = { workspace = true }
pos-ledger-db = { workspace = true }
cached-pos-ledger-db = { workspace = true }
schemadb = { workspace = true }
storage-interface = { workspace = true }
short-hex-str = { workspace = true }
subscription-service = { workspace = true }
fail = { workspace = true }
anyhow = { workspace = true }
once_cell = { workspace = true }
move-core-types = { workspace = true }
pow-types = { workspace = true }
proptest = { workspace = true, optional = true }
proptest-derive = { workspace = true, optional = true }
diem-temppath = { workspace = true }
crash-handler = { workspace = true }
heap-map = { workspace = true }
treap-map = { workspace = true }
cfx-packing-pool = { workspace = true }
alloy-rpc-types-trace = { workspace = true }
geth-tracer = { workspace = true }
cfx-rpc-cfx-types = { workspace = true }
cfx-rpc-eth-types = { workspace = true }
jsonrpsee = { workspace = true, features = ["jsonrpsee-types"] }
cfx-rpc-utils = { workspace = true }
cfx-util-macros = { workspace = true }

[dev-dependencies]
cfx-storage = { workspace = true, features = ["testonly_code"] }
cfx-vm-types = { workspace = true, features = ["testonly_code"] }
proptest = { workspace = true }
proptest-derive = { workspace = true }
consensus-types = { workspace = true, features = ["fuzzing"] }

[features]
default = []
# Unfortunately cfg test attributes doesn't work across crates,
# we have to define a feature for test code.
# https://users.rust-lang.org/t/cfg-test-doesnt-propagate-to-external-crates/13046
testonly_code = []
consensus_bench = []
fuzzing = ["proptest", "proptest-derive"]

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(mirai)'] }