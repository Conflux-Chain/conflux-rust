[package]
name = "cfx-mallocator-utils"
version.workspace = true
authors.workspace = true
description.workspace = true
documentation.workspace = true
homepage.workspace = true
keywords.workspace = true
repository.workspace = true
license-file.workspace = true
edition.workspace = true

[dependencies]
chrono = { workspace = true }
jemalloc_pprof = { workspace = true }
pprof = { workspace = true }
log = { workspace = true }
tokio = { workspace = true }
axum = { workspace = true }
cfg-if = { workspace = true }
tracy-client = { workspace = true, optional = true, features = ["demangle"] }

[target.'cfg(unix)'.dependencies]
tikv-jemallocator = { workspace = true, optional = true }
snmalloc-rs = { workspace = true, optional = true }
libc = "0.2"

[features]
jemalloc = ["dep:tikv-jemallocator"]

# Enables jemalloc profiling features
jemalloc-prof = ["jemalloc", "tikv-jemallocator?/profiling"]

# Wraps the selected allocator in the tracy profiling allocator
tracy-allocator = ["dep:tracy-client"]

snmalloc = ["dep:snmalloc-rs"]

# Enables the snmalloc-rs `native-cpu` feature, which optimizes snmalloc for the
# native CPU of the host machine. Not sure why this feature is not derived from
# RUSTFLAGS or enabled when `target-cpu=native`.
snmalloc-native = ["snmalloc", "snmalloc-rs/native-cpu"]