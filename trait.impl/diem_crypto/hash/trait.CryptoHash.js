(function() {var implementors = {
"consensus_types":[["impl <a class=\"trait\" href=\"diem_crypto/hash/trait.CryptoHash.html\" title=\"trait diem_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"consensus_types/block_data/struct.BlockData.html\" title=\"struct consensus_types::block_data::BlockData\">BlockData</a>"],["impl <a class=\"trait\" href=\"diem_crypto/hash/trait.CryptoHash.html\" title=\"trait diem_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"consensus_types/timeout/struct.Timeout.html\" title=\"struct consensus_types::timeout::Timeout\">Timeout</a>"],["impl <a class=\"trait\" href=\"diem_crypto/hash/trait.CryptoHash.html\" title=\"trait diem_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"consensus_types/vote_data/struct.VoteData.html\" title=\"struct consensus_types::vote_data::VoteData\">VoteData</a>"],["impl <a class=\"trait\" href=\"diem_crypto/hash/trait.CryptoHash.html\" title=\"trait diem_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"consensus_types/vote_proposal/struct.VoteProposal.html\" title=\"struct consensus_types::vote_proposal::VoteProposal\">VoteProposal</a>"]],
"diem_types":[["impl <a class=\"trait\" href=\"diem_crypto/hash/trait.CryptoHash.html\" title=\"trait diem_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"enum\" href=\"diem_types/contract_event/enum.ContractEvent.html\" title=\"enum diem_types::contract_event::ContractEvent\">ContractEvent</a>"],["impl <a class=\"trait\" href=\"diem_crypto/hash/trait.CryptoHash.html\" title=\"trait diem_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"enum\" href=\"diem_types/transaction/enum.Transaction.html\" title=\"enum diem_types::transaction::Transaction\">Transaction</a>"],["impl <a class=\"trait\" href=\"diem_crypto/hash/trait.CryptoHash.html\" title=\"trait diem_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"diem_types/account_state_blob/struct.AccountStateBlob.html\" title=\"struct diem_types::account_state_blob::AccountStateBlob\">AccountStateBlob</a>"],["impl <a class=\"trait\" href=\"diem_crypto/hash/trait.CryptoHash.html\" title=\"trait diem_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"diem_types/block_info/struct.PivotBlockDecision.html\" title=\"struct diem_types::block_info::PivotBlockDecision\">PivotBlockDecision</a>"],["impl <a class=\"trait\" href=\"diem_crypto/hash/trait.CryptoHash.html\" title=\"trait diem_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"diem_types/ledger_info/struct.LedgerInfo.html\" title=\"struct diem_types::ledger_info::LedgerInfo\">LedgerInfo</a>"],["impl <a class=\"trait\" href=\"diem_crypto/hash/trait.CryptoHash.html\" title=\"trait diem_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"diem_types/proof/struct.SparseMerkleLeafNode.html\" title=\"struct diem_types::proof::SparseMerkleLeafNode\">SparseMerkleLeafNode</a>"],["impl <a class=\"trait\" href=\"diem_crypto/hash/trait.CryptoHash.html\" title=\"trait diem_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"diem_types/transaction/struct.RawTransaction.html\" title=\"struct diem_types::transaction::RawTransaction\">RawTransaction</a>"],["impl <a class=\"trait\" href=\"diem_crypto/hash/trait.CryptoHash.html\" title=\"trait diem_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"diem_types/transaction/struct.TransactionInfo.html\" title=\"struct diem_types::transaction::TransactionInfo\">TransactionInfo</a>"],["impl&lt;H: <a class=\"trait\" href=\"diem_crypto/hash/trait.CryptoHasher.html\" title=\"trait diem_crypto::hash::CryptoHasher\">CryptoHasher</a>&gt; <a class=\"trait\" href=\"diem_crypto/hash/trait.CryptoHash.html\" title=\"trait diem_crypto::hash::CryptoHash\">CryptoHash</a> for <a class=\"struct\" href=\"diem_types/proof/struct.MerkleTreeInternalNode.html\" title=\"struct diem_types::proof::MerkleTreeInternalNode\">MerkleTreeInternalNode</a>&lt;H&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()