(function() {var type_impls = {
"cfx_storage":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NodeMerkleProof\" class=\"impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/node_merkle_proof.rs.html#14-145\">source</a><a href=\"#impl-NodeMerkleProof\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"cfx_storage/struct.NodeMerkleProof.html\" title=\"struct cfx_storage::NodeMerkleProof\">NodeMerkleProof</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.with_delta\" class=\"method\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/node_merkle_proof.rs.html#15-20\">source</a><h4 class=\"code-header\">pub fn <a href=\"cfx_storage/struct.NodeMerkleProof.html#tymethod.with_delta\" class=\"fn\">with_delta</a>(&amp;mut self, maybe_delta_proof: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"cfx_storage/struct.TrieProof.html\" title=\"struct cfx_storage::TrieProof\">TrieProof</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a></h4></section><section id=\"method.with_intermediate\" class=\"method\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/node_merkle_proof.rs.html#22-27\">source</a><h4 class=\"code-header\">pub fn <a href=\"cfx_storage/struct.NodeMerkleProof.html#tymethod.with_intermediate\" class=\"fn\">with_intermediate</a>(\n    &amp;mut self,\n    maybe_intermediate_proof: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"cfx_storage/struct.TrieProof.html\" title=\"struct cfx_storage::TrieProof\">TrieProof</a>&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a></h4></section><section id=\"method.with_snapshot\" class=\"method\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/node_merkle_proof.rs.html#29-34\">source</a><h4 class=\"code-header\">pub fn <a href=\"cfx_storage/struct.NodeMerkleProof.html#tymethod.with_snapshot\" class=\"fn\">with_snapshot</a>(\n    &amp;mut self,\n    maybe_snapshot_proof: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"cfx_storage/struct.TrieProof.html\" title=\"struct cfx_storage::TrieProof\">TrieProof</a>&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a></h4></section><section id=\"method.is_valid\" class=\"method\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/node_merkle_proof.rs.html#36-144\">source</a><h4 class=\"code-header\">pub fn <a href=\"cfx_storage/struct.NodeMerkleProof.html#tymethod.is_valid\" class=\"fn\">is_valid</a>(\n    &amp;self,\n    key: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    storage_root: &amp;<a class=\"type\" href=\"primitives/storage/type.StorageRoot.html\" title=\"type primitives::storage::StorageRoot\">StorageRoot</a>,\n    state_root: <a class=\"struct\" href=\"primitives/state_root/struct.StateRoot.html\" title=\"struct primitives::state_root::StateRoot\">StateRoot</a>,\n    maybe_intermediate_padding: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"primitives/storage_key/struct.DeltaMptKeyPadding.html\" title=\"struct primitives::storage_key::DeltaMptKeyPadding\">DeltaMptKeyPadding</a>&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></div></details>",0,"cfx_storage::impls::node_merkle_proof::StorageRootProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NodeMerkleProof\" class=\"impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/node_merkle_proof.rs.html#5\">source</a><a href=\"#impl-Clone-for-NodeMerkleProof\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"cfx_storage/struct.NodeMerkleProof.html\" title=\"struct cfx_storage::NodeMerkleProof\">NodeMerkleProof</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/node_merkle_proof.rs.html#5\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"cfx_storage/struct.NodeMerkleProof.html\" title=\"struct cfx_storage::NodeMerkleProof\">NodeMerkleProof</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","cfx_storage::impls::node_merkle_proof::StorageRootProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-NodeMerkleProof\" class=\"impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/node_merkle_proof.rs.html#5\">source</a><a href=\"#impl-PartialEq-for-NodeMerkleProof\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"cfx_storage/struct.NodeMerkleProof.html\" title=\"struct cfx_storage::NodeMerkleProof\">NodeMerkleProof</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/node_merkle_proof.rs.html#5\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"cfx_storage/struct.NodeMerkleProof.html\" title=\"struct cfx_storage::NodeMerkleProof\">NodeMerkleProof</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","cfx_storage::impls::node_merkle_proof::StorageRootProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-NodeMerkleProof\" class=\"impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/node_merkle_proof.rs.html#5\">source</a><a href=\"#impl-Default-for-NodeMerkleProof\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"cfx_storage/struct.NodeMerkleProof.html\" title=\"struct cfx_storage::NodeMerkleProof\">NodeMerkleProof</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/node_merkle_proof.rs.html#5\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"cfx_storage/struct.NodeMerkleProof.html\" title=\"struct cfx_storage::NodeMerkleProof\">NodeMerkleProof</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","cfx_storage::impls::node_merkle_proof::StorageRootProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NodeMerkleProof\" class=\"impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/node_merkle_proof.rs.html#5\">source</a><a href=\"#impl-Debug-for-NodeMerkleProof\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"cfx_storage/struct.NodeMerkleProof.html\" title=\"struct cfx_storage::NodeMerkleProof\">NodeMerkleProof</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/node_merkle_proof.rs.html#5\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","cfx_storage::impls::node_merkle_proof::StorageRootProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-NodeMerkleProof\" class=\"impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/node_merkle_proof.rs.html#5\">source</a><a href=\"#impl-Decodable-for-NodeMerkleProof\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for <a class=\"struct\" href=\"cfx_storage/struct.NodeMerkleProof.html\" title=\"struct cfx_storage::NodeMerkleProof\">NodeMerkleProof</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/node_merkle_proof.rs.html#5\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","cfx_storage::impls::node_merkle_proof::StorageRootProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-NodeMerkleProof\" class=\"impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/node_merkle_proof.rs.html#5\">source</a><a href=\"#impl-Encodable-for-NodeMerkleProof\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for <a class=\"struct\" href=\"cfx_storage/struct.NodeMerkleProof.html\" title=\"struct cfx_storage::NodeMerkleProof\">NodeMerkleProof</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/node_merkle_proof.rs.html#5\">source</a><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, stream: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","cfx_storage::impls::node_merkle_proof::StorageRootProof"],["<section id=\"impl-StructuralPartialEq-for-NodeMerkleProof\" class=\"impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/node_merkle_proof.rs.html#5\">source</a><a href=\"#impl-StructuralPartialEq-for-NodeMerkleProof\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"cfx_storage/struct.NodeMerkleProof.html\" title=\"struct cfx_storage::NodeMerkleProof\">NodeMerkleProof</a></h3></section>","StructuralPartialEq","cfx_storage::impls::node_merkle_proof::StorageRootProof"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()