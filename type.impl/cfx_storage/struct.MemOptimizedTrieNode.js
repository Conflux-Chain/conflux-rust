(function() {var type_impls = {
"cfx_storage":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-MemOptimizedTrieNode%3CCacheAlgoDataT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#139-150\">source</a><a href=\"#impl-Clone-for-MemOptimizedTrieNode%3CCacheAlgoDataT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;CacheAlgoDataT: CacheAlgoDataTrait&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"cfx_storage/struct.MemOptimizedTrieNode.html\" title=\"struct cfx_storage::MemOptimizedTrieNode\">MemOptimizedTrieNode</a>&lt;CacheAlgoDataT&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#142-149\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","cfx_storage::impls::delta_mpt::node_memory_manager::TrieNodeDeltaMpt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-MemOptimizedTrieNode%3CCacheAlgoDataT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#621-630\">source</a><a href=\"#impl-Debug-for-MemOptimizedTrieNode%3CCacheAlgoDataT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;CacheAlgoDataT: CacheAlgoDataTrait&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"cfx_storage/struct.MemOptimizedTrieNode.html\" title=\"struct cfx_storage::MemOptimizedTrieNode\">MemOptimizedTrieNode</a>&lt;CacheAlgoDataT&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#624-629\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","cfx_storage::impls::delta_mpt::node_memory_manager::TrieNodeDeltaMpt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-MemOptimizedTrieNode%3CCacheAlgoDataT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#590-608\">source</a><a href=\"#impl-Decodable-for-MemOptimizedTrieNode%3CCacheAlgoDataT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;CacheAlgoDataT: CacheAlgoDataTrait&gt; Decodable for <a class=\"struct\" href=\"cfx_storage/struct.MemOptimizedTrieNode.html\" title=\"struct cfx_storage::MemOptimizedTrieNode\">MemOptimizedTrieNode</a>&lt;CacheAlgoDataT&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#593-607\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","cfx_storage::impls::delta_mpt::node_memory_manager::TrieNodeDeltaMpt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-MemOptimizedTrieNode%3CCacheAlgoDataT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#8\">source</a><a href=\"#impl-Default-for-MemOptimizedTrieNode%3CCacheAlgoDataT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;CacheAlgoDataT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + CacheAlgoDataTrait&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"cfx_storage/struct.MemOptimizedTrieNode.html\" title=\"struct cfx_storage::MemOptimizedTrieNode\">MemOptimizedTrieNode</a>&lt;CacheAlgoDataT&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#8\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"cfx_storage/struct.MemOptimizedTrieNode.html\" title=\"struct cfx_storage::MemOptimizedTrieNode\">MemOptimizedTrieNode</a>&lt;CacheAlgoDataT&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","cfx_storage::impls::delta_mpt::node_memory_manager::TrieNodeDeltaMpt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-MemOptimizedTrieNode%3CCacheAlgoDataT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#572-588\">source</a><a href=\"#impl-Encodable-for-MemOptimizedTrieNode%3CCacheAlgoDataT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;CacheAlgoDataT: CacheAlgoDataTrait&gt; Encodable for <a class=\"struct\" href=\"cfx_storage/struct.MemOptimizedTrieNode.html\" title=\"struct cfx_storage::MemOptimizedTrieNode\">MemOptimizedTrieNode</a>&lt;CacheAlgoDataT&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#575-587\">source</a><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","cfx_storage::impls::delta_mpt::node_memory_manager::TrieNodeDeltaMpt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MallocSizeOf-for-MemOptimizedTrieNode%3CCacheAlgoDataT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#77-100\">source</a><a href=\"#impl-MallocSizeOf-for-MemOptimizedTrieNode%3CCacheAlgoDataT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;CacheAlgoDataT: CacheAlgoDataTrait&gt; MallocSizeOf for <a class=\"struct\" href=\"cfx_storage/struct.MemOptimizedTrieNode.html\" title=\"struct cfx_storage::MemOptimizedTrieNode\">MemOptimizedTrieNode</a>&lt;CacheAlgoDataT&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#80-99\">source</a><a href=\"#method.size_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_of</a>(&amp;self, ops: &amp;mut MallocSizeOfOps) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Measure the heap usage of all descendant heap-allocated structures, but\nnot the space taken up by the value itself.</div></details></div></details>","MallocSizeOf","cfx_storage::impls::delta_mpt::node_memory_manager::TrieNodeDeltaMpt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MemOptimizedTrieNode%3CCacheAlgoDataT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#197-276\">source</a><a href=\"#impl-MemOptimizedTrieNode%3CCacheAlgoDataT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;CacheAlgoDataT: CacheAlgoDataTrait&gt; <a class=\"struct\" href=\"cfx_storage/struct.MemOptimizedTrieNode.html\" title=\"struct cfx_storage::MemOptimizedTrieNode\">MemOptimizedTrieNode</a>&lt;CacheAlgoDataT&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.get_compressed_path_size\" class=\"method\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#198\">source</a><h4 class=\"code-header\">pub fn <a href=\"cfx_storage/struct.MemOptimizedTrieNode.html#tymethod.get_compressed_path_size\" class=\"fn\">get_compressed_path_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a></h4></section><section id=\"method.copy_compressed_path\" class=\"method\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#200-212\">source</a><h4 class=\"code-header\">pub fn <a href=\"cfx_storage/struct.MemOptimizedTrieNode.html#tymethod.copy_compressed_path\" class=\"fn\">copy_compressed_path</a>&lt;CompressedPath: CompressedPathTrait&gt;(\n    &amp;mut self,\n    new_path: CompressedPath\n)</h4></section><section id=\"method.value_clone\" class=\"method\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#214-223\">source</a><h4 class=\"code-header\">pub fn <a href=\"cfx_storage/struct.MemOptimizedTrieNode.html#tymethod.value_clone\" class=\"fn\">value_clone</a>(&amp;self) -&gt; MptValue&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;&gt;</h4></section><section id=\"method.check_value_size\" class=\"method\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#245-257\">source</a><h4 class=\"code-header\">pub fn <a href=\"cfx_storage/struct.MemOptimizedTrieNode.html#tymethod.check_value_size\" class=\"fn\">check_value_size</a>(value: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"type\" href=\"cfx_storage/type.Result.html\" title=\"type cfx_storage::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section><section id=\"method.check_key_size\" class=\"method\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#259-275\">source</a><h4 class=\"code-header\">pub fn <a href=\"cfx_storage/struct.MemOptimizedTrieNode.html#tymethod.check_key_size\" class=\"fn\">check_key_size</a>(access_key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"type\" href=\"cfx_storage/type.Result.html\" title=\"type cfx_storage::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></div></details>",0,"cfx_storage::impls::delta_mpt::node_memory_manager::TrieNodeDeltaMpt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MemOptimizedTrieNode%3CCacheAlgoDataT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#391-522\">source</a><a href=\"#impl-MemOptimizedTrieNode%3CCacheAlgoDataT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;CacheAlgoDataT: CacheAlgoDataTrait&gt; <a class=\"struct\" href=\"cfx_storage/struct.MemOptimizedTrieNode.html\" title=\"struct cfx_storage::MemOptimizedTrieNode\">MemOptimizedTrieNode</a>&lt;CacheAlgoDataT&gt;</h3></section></summary><div class=\"docblock\"><p>The actual TrieNode type used in DeltaMpt.\nWe’d like to keep as many of them as possible in memory.</p>\n</div><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#392-409\">source</a><h4 class=\"code-header\">pub fn <a href=\"cfx_storage/struct.MemOptimizedTrieNode.html#tymethod.new\" class=\"fn\">new</a>(\n    merkle: MerkleHash,\n    children_table: <a class=\"type\" href=\"cfx_storage/type.ChildrenTableDeltaMpt.html\" title=\"type cfx_storage::ChildrenTableDeltaMpt\">ChildrenTableDeltaMpt</a>,\n    maybe_value: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;&gt;,\n    compressed_path: <a class=\"struct\" href=\"cfx_storage/struct.CompressedPathRaw.html\" title=\"struct cfx_storage::CompressedPathRaw\">CompressedPathRaw</a>\n) -&gt; <a class=\"struct\" href=\"cfx_storage/struct.MemOptimizedTrieNode.html\" title=\"struct cfx_storage::MemOptimizedTrieNode\">MemOptimizedTrieNode</a>&lt;CacheAlgoDataT&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.copy_and_replace_fields\" class=\"method\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#418-453\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"cfx_storage/struct.MemOptimizedTrieNode.html#tymethod.copy_and_replace_fields\" class=\"fn\">copy_and_replace_fields</a>(\n    &amp;self,\n    new_value: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;&gt;&gt;,\n    new_path: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"cfx_storage/struct.CompressedPathRaw.html\" title=\"struct cfx_storage::CompressedPathRaw\">CompressedPathRaw</a>&gt;,\n    children_table: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"type\" href=\"cfx_storage/type.ChildrenTableDeltaMpt.html\" title=\"type cfx_storage::ChildrenTableDeltaMpt\">ChildrenTableDeltaMpt</a>&gt;\n) -&gt; <a class=\"struct\" href=\"cfx_storage/struct.MemOptimizedTrieNode.html\" title=\"struct cfx_storage::MemOptimizedTrieNode\">MemOptimizedTrieNode</a>&lt;CacheAlgoDataT&gt;</h4></section></summary><div class=\"docblock\"><p>new_value can only be set according to the situation.\nchildren_table can only be replaced when there is no children in both\nold and new table.</p>\n<p>unsafe because:</p>\n<ol>\n<li>precondition on children_table;</li>\n<li>delete value assumes that self contains some value.</li>\n</ol>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_delete_value\" class=\"method\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#456-466\">source</a><h4 class=\"code-header\">pub fn <a href=\"cfx_storage/struct.MemOptimizedTrieNode.html#tymethod.check_delete_value\" class=\"fn\">check_delete_value</a>(&amp;self) -&gt; <a class=\"type\" href=\"cfx_storage/type.Result.html\" title=\"type cfx_storage::Result\">Result</a>&lt;TrieNodeAction&gt;</h4></section></summary><div class=\"docblock\"><p>Returns: old_value, is_self_about_to_delete, replacement_node_for_self</p>\n</div></details><section id=\"method.set_first_child_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#494-499\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"cfx_storage/struct.MemOptimizedTrieNode.html#tymethod.set_first_child_unchecked\" class=\"fn\">set_first_child_unchecked</a>(\n    &amp;mut self,\n    child_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>,\n    child: <a class=\"struct\" href=\"cfx_storage/struct.NodeRefDeltaMptCompact.html\" title=\"struct cfx_storage::NodeRefDeltaMptCompact\">NodeRefDeltaMptCompact</a>\n)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_replace_or_delete_child_action\" class=\"method\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#502-515\">source</a><h4 class=\"code-header\">pub fn <a href=\"cfx_storage/struct.MemOptimizedTrieNode.html#tymethod.check_replace_or_delete_child_action\" class=\"fn\">check_replace_or_delete_child_action</a>(\n    &amp;self,\n    child_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>,\n    new_child_node: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"cfx_storage/struct.NodeRefDeltaMptCompact.html\" title=\"struct cfx_storage::NodeRefDeltaMptCompact\">NodeRefDeltaMptCompact</a>&gt;\n) -&gt; TrieNodeAction</h4></section></summary><div class=\"docblock\"><p>Returns old_child, is_self_about_to_delete, replacement_node_for_self</p>\n</div></details><section id=\"method.get_merkle\" class=\"method\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#517\">source</a><h4 class=\"code-header\">pub fn <a href=\"cfx_storage/struct.MemOptimizedTrieNode.html#tymethod.get_merkle\" class=\"fn\">get_merkle</a>(&amp;self) -&gt; &amp;MerkleHash</h4></section><section id=\"method.set_merkle\" class=\"method\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#519-521\">source</a><h4 class=\"code-header\">pub fn <a href=\"cfx_storage/struct.MemOptimizedTrieNode.html#tymethod.set_merkle\" class=\"fn\">set_merkle</a>(&amp;mut self, merkle: &amp;MerkleHash)</h4></section></div></details>",0,"cfx_storage::impls::delta_mpt::node_memory_manager::TrieNodeDeltaMpt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-MemOptimizedTrieNode%3CCacheAlgoDataT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#610-619\">source</a><a href=\"#impl-PartialEq-for-MemOptimizedTrieNode%3CCacheAlgoDataT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;CacheAlgoDataT: CacheAlgoDataTrait&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"cfx_storage/struct.MemOptimizedTrieNode.html\" title=\"struct cfx_storage::MemOptimizedTrieNode\">MemOptimizedTrieNode</a>&lt;CacheAlgoDataT&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#613-618\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","cfx_storage::impls::delta_mpt::node_memory_manager::TrieNodeDeltaMpt"],["<section id=\"impl-Send-for-MemOptimizedTrieNode%3CCacheAlgoDataT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#155-158\">source</a><a href=\"#impl-Send-for-MemOptimizedTrieNode%3CCacheAlgoDataT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;CacheAlgoDataT: CacheAlgoDataTrait&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"cfx_storage/struct.MemOptimizedTrieNode.html\" title=\"struct cfx_storage::MemOptimizedTrieNode\">MemOptimizedTrieNode</a>&lt;CacheAlgoDataT&gt;</h3></section><div class=\"docblock\"><p>Compiler is not sure about the pointer in MaybeInPlaceByteArray fields.\nIt’s Send because TrieNode is move only and it’s impossible to change any\npart of it without &amp;mut.</p>\n</div>","Send","cfx_storage::impls::delta_mpt::node_memory_manager::TrieNodeDeltaMpt"],["<section id=\"impl-Sync-for-MemOptimizedTrieNode%3CCacheAlgoDataT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cfx_storage/impls/delta_mpt/mem_optimized_trie_node.rs.html#162-165\">source</a><a href=\"#impl-Sync-for-MemOptimizedTrieNode%3CCacheAlgoDataT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;CacheAlgoDataT: CacheAlgoDataTrait&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"cfx_storage/struct.MemOptimizedTrieNode.html\" title=\"struct cfx_storage::MemOptimizedTrieNode\">MemOptimizedTrieNode</a>&lt;CacheAlgoDataT&gt;</h3></section><div class=\"docblock\"><p>Compiler is not sure about the pointer in MaybeInPlaceByteArray fields.\nWe do not allow a &amp;TrieNode to be able to change anything the pointer\nis pointing to, therefore TrieNode is Sync.</p>\n</div>","Sync","cfx_storage::impls::delta_mpt::node_memory_manager::TrieNodeDeltaMpt"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()