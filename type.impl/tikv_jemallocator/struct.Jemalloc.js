(function() {
    var type_impls = Object.fromEntries([["cfx_mallocator_utils",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Jemalloc\" class=\"impl\"><a href=\"#impl-Clone-for-Jemalloc\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Jemalloc</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Jemalloc</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","cfx_mallocator_utils::allocator::Allocator"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Jemalloc\" class=\"impl\"><a href=\"#impl-Debug-for-Jemalloc\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Jemalloc</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","cfx_mallocator_utils::allocator::Allocator"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Jemalloc\" class=\"impl\"><a href=\"#impl-Default-for-Jemalloc\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for Jemalloc</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Jemalloc</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","cfx_mallocator_utils::allocator::Allocator"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GlobalAlloc-for-Jemalloc\" class=\"impl\"><a href=\"#impl-GlobalAlloc-for-Jemalloc\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/global/trait.GlobalAlloc.html\" title=\"trait core::alloc::global::GlobalAlloc\">GlobalAlloc</a> for Jemalloc</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.alloc\" class=\"method trait-impl\"><a href=\"#method.alloc\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/nightly/core/alloc/global/trait.GlobalAlloc.html#tymethod.alloc\" class=\"fn\">alloc</a>(&amp;self, layout: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/layout/struct.Layout.html\" title=\"struct core::alloc::layout::Layout\">Layout</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Allocates memory as described by the given <code>layout</code>. <a href=\"https://doc.rust-lang.org/nightly/core/alloc/global/trait.GlobalAlloc.html#tymethod.alloc\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.alloc_zeroed\" class=\"method trait-impl\"><a href=\"#method.alloc_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/nightly/core/alloc/global/trait.GlobalAlloc.html#method.alloc_zeroed\" class=\"fn\">alloc_zeroed</a>(&amp;self, layout: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/layout/struct.Layout.html\" title=\"struct core::alloc::layout::Layout\">Layout</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Behaves like <code>alloc</code>, but also ensures that the contents\nare set to zero before being returned. <a href=\"https://doc.rust-lang.org/nightly/core/alloc/global/trait.GlobalAlloc.html#method.alloc_zeroed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dealloc\" class=\"method trait-impl\"><a href=\"#method.dealloc\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/nightly/core/alloc/global/trait.GlobalAlloc.html#tymethod.dealloc\" class=\"fn\">dealloc</a>(&amp;self, ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, layout: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/layout/struct.Layout.html\" title=\"struct core::alloc::layout::Layout\">Layout</a>)</h4></section></summary><div class='docblock'>Deallocates the block of memory at the given <code>ptr</code> pointer with the given <code>layout</code>. <a href=\"https://doc.rust-lang.org/nightly/core/alloc/global/trait.GlobalAlloc.html#tymethod.dealloc\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.realloc\" class=\"method trait-impl\"><a href=\"#method.realloc\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/nightly/core/alloc/global/trait.GlobalAlloc.html#method.realloc\" class=\"fn\">realloc</a>(\n    &amp;self,\n    ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>,\n    layout: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/layout/struct.Layout.html\" title=\"struct core::alloc::layout::Layout\">Layout</a>,\n    new_size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Shrinks or grows a block of memory to the given <code>new_size</code> in bytes.\nThe block is described by the given <code>ptr</code> pointer and <code>layout</code>. <a href=\"https://doc.rust-lang.org/nightly/core/alloc/global/trait.GlobalAlloc.html#method.realloc\">Read more</a></div></details></div></details>","GlobalAlloc","cfx_mallocator_utils::allocator::Allocator"],["<section id=\"impl-Copy-for-Jemalloc\" class=\"impl\"><a href=\"#impl-Copy-for-Jemalloc\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for Jemalloc</h3></section>","Copy","cfx_mallocator_utils::allocator::Allocator"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[9605]}