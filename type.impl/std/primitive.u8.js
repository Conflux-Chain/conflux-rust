(function() {var type_impls = {
"network":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsciiExt-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/ascii.rs.html#183\">source</a></span><a href=\"#impl-AsciiExt-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/ascii/trait.AsciiExt.html\" title=\"trait std::ascii::AsciiExt\">AsciiExt</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Owned\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Owned\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/std/ascii/trait.AsciiExt.html#associatedtype.Owned\" class=\"associatedtype\">Owned</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.26.0: use inherent methods instead</span></div></span><div class='docblock'>Container type for copied ASCII characters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_ascii\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/ascii.rs.html#186\">source</a><a href=\"#method.is_ascii\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/ascii/trait.AsciiExt.html#tymethod.is_ascii\" class=\"fn\">is_ascii</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.26.0: use inherent methods instead</span></div></span><div class='docblock'>Checks if the value is within the ASCII range. <a href=\"https://doc.rust-lang.org/nightly/std/ascii/trait.AsciiExt.html#tymethod.is_ascii\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ascii_uppercase\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/ascii.rs.html#186\">source</a><a href=\"#method.to_ascii_uppercase\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/ascii/trait.AsciiExt.html#tymethod.to_ascii_uppercase\" class=\"fn\">to_ascii_uppercase</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/ascii/trait.AsciiExt.html\" title=\"trait std::ascii::AsciiExt\">AsciiExt</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/std/ascii/trait.AsciiExt.html#associatedtype.Owned\" title=\"type std::ascii::AsciiExt::Owned\">Owned</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.26.0: use inherent methods instead</span></div></span><div class='docblock'>Makes a copy of the value in its ASCII upper case equivalent. <a href=\"https://doc.rust-lang.org/nightly/std/ascii/trait.AsciiExt.html#tymethod.to_ascii_uppercase\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ascii_lowercase\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/ascii.rs.html#186\">source</a><a href=\"#method.to_ascii_lowercase\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/ascii/trait.AsciiExt.html#tymethod.to_ascii_lowercase\" class=\"fn\">to_ascii_lowercase</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/ascii/trait.AsciiExt.html\" title=\"trait std::ascii::AsciiExt\">AsciiExt</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/std/ascii/trait.AsciiExt.html#associatedtype.Owned\" title=\"type std::ascii::AsciiExt::Owned\">Owned</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.26.0: use inherent methods instead</span></div></span><div class='docblock'>Makes a copy of the value in its ASCII lower case equivalent. <a href=\"https://doc.rust-lang.org/nightly/std/ascii/trait.AsciiExt.html#tymethod.to_ascii_lowercase\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq_ignore_ascii_case\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/ascii.rs.html#186\">source</a><a href=\"#method.eq_ignore_ascii_case\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/ascii/trait.AsciiExt.html#tymethod.eq_ignore_ascii_case\" class=\"fn\">eq_ignore_ascii_case</a>(&amp;self, o: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.26.0: use inherent methods instead</span></div></span><div class='docblock'>Checks that two values are an ASCII case-insensitive match. <a href=\"https://doc.rust-lang.org/nightly/std/ascii/trait.AsciiExt.html#tymethod.eq_ignore_ascii_case\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.make_ascii_uppercase\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/ascii.rs.html#186\">source</a><a href=\"#method.make_ascii_uppercase\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/ascii/trait.AsciiExt.html#tymethod.make_ascii_uppercase\" class=\"fn\">make_ascii_uppercase</a>(&amp;mut self)</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.26.0: use inherent methods instead</span></div></span><div class='docblock'>Converts this type to its ASCII upper case equivalent in-place. <a href=\"https://doc.rust-lang.org/nightly/std/ascii/trait.AsciiExt.html#tymethod.make_ascii_uppercase\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.make_ascii_lowercase\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/ascii.rs.html#186\">source</a><a href=\"#method.make_ascii_lowercase\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/ascii/trait.AsciiExt.html#tymethod.make_ascii_lowercase\" class=\"fn\">make_ascii_lowercase</a>(&amp;mut self)</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.26.0: use inherent methods instead</span></div></span><div class='docblock'>Converts this type to its ASCII lower case equivalent in-place. <a href=\"https://doc.rust-lang.org/nightly/std/ascii/trait.AsciiExt.html#tymethod.make_ascii_lowercase\">Read more</a></div></details></div></details>","AsciiExt","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1573\">source</a></span><a href=\"#impl-PartialOrd-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1573\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1573\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1573\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1573\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1573\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details></div></details>","PartialOrd","network::HandlerWorkType"],["<section id=\"impl-TrustedStep-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/range.rs.html#19\">source</a><a href=\"#impl-TrustedStep-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/marker/trait.TrustedStep.html\" title=\"trait core::iter::traits::marker::TrustedStep\">TrustedStep</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","TrustedStep","network::HandlerWorkType"],["<section id=\"impl-ConstParamTy-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/marker.rs.html#1068-1079\">source</a><a href=\"#impl-ConstParamTy-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.ConstParamTy.html\" title=\"trait core::marker::ConstParamTy\">ConstParamTy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","ConstParamTy","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#378\">source</a></span><a href=\"#impl-BitXor-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#378\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3C%26u8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#378\">source</a></span><a href=\"#impl-BitXor%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#378\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<&u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#488-491\">source</a></span><a href=\"#impl-Div-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"docblock\"><p>This operation rounds towards zero, truncating any\nfractional part of the exact result.</p>\n<h4 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h4>\n<p>This operation will panic if <code>other == 0</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#488-491\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26u8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#488-491\">source</a></span><a href=\"#impl-Div%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#488-491\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CNonZero%3Cu8%3E%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><a href=\"#impl-Div%3CNonZero%3Cu8%3E%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>This operation rounds towards zero,\ntruncating any fractional part of the exact result, and cannot panic.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details></div></details>","Div<NonZero<u8>>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#823-836\">source</a></span><a href=\"#impl-Hash-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#823-836\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#823-836\">source</a><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26u8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#219\">source</a></span><a href=\"#impl-Sub%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#219\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#219\">source</a></span><a href=\"#impl-Sub-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#219\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#227-232\">source</a></span><a href=\"#impl-Clone-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#227-232\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26u8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#110\">source</a></span><a href=\"#impl-Add%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#110\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#110\">source</a></span><a href=\"#impl-Add-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#110\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26u8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#891\">source</a></span><a href=\"#impl-MulAssign%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#891\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#891\">source</a></span><a href=\"#impl-MulAssign-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#891\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerExp-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.42.0\">1.42.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#475-478\">source</a></span><a href=\"#impl-LowerExp-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.LowerExp.html\" title=\"trait core::fmt::LowerExp\">LowerExp</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#475-478\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.LowerExp.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerExp","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#471-474\">source</a></span><a href=\"#impl-Display-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#471-474\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CNonZero%3Cu8%3E%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><a href=\"#impl-BitOr%3CNonZero%3Cu8%3E%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<NonZero<u8>>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3C%26u8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#278\">source</a></span><a href=\"#impl-BitOr%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#278\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<&u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#278\">source</a></span><a href=\"#impl-BitOr-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#278\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CNonZero%3Cu8%3E%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><a href=\"#impl-Rem%3CNonZero%3Cu8%3E%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>This operation satisfies <code>n % d == n - (n / d) * d</code>, and cannot panic.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details></div></details>","Rem<NonZero<u8>>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#590-593\">source</a></span><a href=\"#impl-Rem-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"docblock\"><p>This operation satisfies <code>n % d == n - (n / d) * d</code>. The\nresult has the same sign as the left operand.</p>\n<h4 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h4>\n<p>This operation will panic if <code>other == 0</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#590-593\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26u8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#590-593\">source</a></span><a href=\"#impl-Rem%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#590-593\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<&u8>","network::HandlerWorkType"],["<section id=\"impl-StructuralPartialEq-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/marker.rs.html#214-226\">source</a><a href=\"#impl-StructuralPartialEq-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","StructuralPartialEq","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#201-204\">source</a></span><a href=\"#impl-Debug-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#201-204\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SimdElement-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/portable-simd/crates/core_simd/src/vector.rs.html#878\">source</a><a href=\"#impl-SimdElement-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/vector/trait.SimdElement.html\" title=\"trait core::core_simd::vector::SimdElement\">SimdElement</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Mask\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Mask\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/core_simd/vector/trait.SimdElement.html#associatedtype.Mask\" class=\"associatedtype\">Mask</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>portable_simd</code>)</span></div></span><div class='docblock'>The mask element type corresponding to this element type.</div></details></div></details>","SimdElement","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperExp-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.42.0\">1.42.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#475-478\">source</a></span><a href=\"#impl-UpperExp-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.UpperExp.html\" title=\"trait core::fmt::UpperExp\">UpperExp</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#475-478\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.UpperExp.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperExp","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a></span><a href=\"#impl-Octal-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Octal.html\" title=\"trait core::fmt::Octal\">Octal</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","network::HandlerWorkType"],["<section id=\"impl-Eq-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1455\">source</a></span><a href=\"#impl-Eq-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","Eq","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#149\">source</a></span><a href=\"#impl-Sum-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#149\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26u8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#149\">source</a></span><a href=\"#impl-Sum%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#149\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum<&'a u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1573\">source</a></span><a href=\"#impl-Ord-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1573\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#830-832\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#850-852\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#875-878\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26u8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#726\">source</a></span><a href=\"#impl-BitAndAssign%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#726\">source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#726\">source</a></span><a href=\"#impl-BitAndAssign-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#726\">source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#797\">source</a></span><a href=\"#impl-BitOrAssign-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#797\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26u8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#797\">source</a></span><a href=\"#impl-BitOrAssign%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#797\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Step-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#impl-Step-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/range/trait.Step.html\" title=\"trait core::iter::range::Step\">Step</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.forward_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#method.forward_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/range/trait.Step.html#method.forward_unchecked\" class=\"fn\">forward_unchecked</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>successor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/nightly/core/iter/range/trait.Step.html#method.forward_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.backward_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#method.backward_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/range/trait.Step.html#method.backward_unchecked\" class=\"fn\">backward_unchecked</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>predecessor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/nightly/core/iter/range/trait.Step.html#method.backward_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.forward\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#method.forward\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/range/trait.Step.html#method.forward\" class=\"fn\">forward</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>successor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/nightly/core/iter/range/trait.Step.html#method.forward\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.backward\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#method.backward\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/range/trait.Step.html#method.backward\" class=\"fn\">backward</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>predecessor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/nightly/core/iter/range/trait.Step.html#method.backward\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.steps_between\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#method.steps_between\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/range/trait.Step.html#tymethod.steps_between\" class=\"fn\">steps_between</a>(start: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, end: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the number of <em>successor</em> steps required to get from <code>start</code> to <code>end</code>. <a href=\"https://doc.rust-lang.org/nightly/core/iter/range/trait.Step.html#tymethod.steps_between\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.forward_checked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#method.forward_checked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/range/trait.Step.html#tymethod.forward_checked\" class=\"fn\">forward_checked</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>successor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/nightly/core/iter/range/trait.Step.html#tymethod.forward_checked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.backward_checked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/range.rs.html#393-396\">source</a><a href=\"#method.backward_checked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/range/trait.Step.html#tymethod.backward_checked\" class=\"fn\">backward_checked</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>predecessor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/nightly/core/iter/range/trait.Step.html#tymethod.backward_checked\">Read more</a></div></details></div></details>","Step","network::HandlerWorkType"],["<section id=\"impl-Copy-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/marker.rs.html#491-501\">source</a></span><a href=\"#impl-Copy-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","Copy","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i64%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26i64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci32%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Ci32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci64%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Ci64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u32%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26u32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cusize%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Cusize%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<usize>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cisize%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Cisize%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<isize>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u64%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26u64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu16%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Cu16%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u16>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26i8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26usize%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26usize%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&usize>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci16%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Ci16%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i16>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci128%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Ci128%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i128>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u16%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26u16%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u16>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26isize%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26isize%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&isize>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i16%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26i16%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i16>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu64%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Cu64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i128%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26i128%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i128>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i32%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26i32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u128%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3C%26u128%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u128>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu128%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Cu128%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u128>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu32%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Cu32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a></span><a href=\"#impl-ShrAssign%3Ci8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#1032\">source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i8>","network::HandlerWorkType"],["<section id=\"impl-ZeroablePrimitive-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#55\">source</a><a href=\"#impl-ZeroablePrimitive-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","ZeroablePrimitive","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1444-1446\">source</a></span><a href=\"#impl-PartialEq-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1444-1446\">source</a></span><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1444-1446\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#868\">source</a></span><a href=\"#impl-BitXorAssign-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#868\">source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26u8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#868\">source</a></span><a href=\"#impl-BitXorAssign%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#868\">source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#766\">source</a></span><a href=\"#impl-AddAssign-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#766\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26u8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#766\">source</a></span><a href=\"#impl-AddAssign%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#766\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<&u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26u8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#948\">source</a></span><a href=\"#impl-DivAssign%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#948\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#948\">source</a></span><a href=\"#impl-DivAssign-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#948\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u16%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26u16%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u16>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu64%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Cu64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26usize%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26usize%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&usize>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci32%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Ci32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26isize%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26isize%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&isize>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i32%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26i32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cisize%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Cisize%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<isize>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i64%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26i64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci128%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Ci128%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i128>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci16%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Ci16%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i16>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26i8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i128%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26i128%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i128>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci64%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Ci64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cusize%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Cusize%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<usize>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u64%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26u64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u32%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26u32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu16%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Cu16%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u16>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u128%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26u128%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u128>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Ci8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i16%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3C%26i16%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i16>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu32%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Cu32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu128%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a></span><a href=\"#impl-ShlAssign%3Cu128%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#950\">source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u128>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu64%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Cu64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u16%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26u16%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u16>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i16%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26i16%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i16>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26i8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci16%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Ci16%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i16>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26usize%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26usize%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&usize>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i32%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26i32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i64%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26i64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci32%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Ci32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cusize%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Cusize%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<usize>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu128%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Cu128%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u128>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26isize%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26isize%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&isize>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u128%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26u128%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u128>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i128%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26i128%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i128>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci128%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Ci128%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i128>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Ci8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cisize%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Cisize%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<isize>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci64%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Ci64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u64%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26u64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu32%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Cu32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu16%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3Cu16%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u16>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u32%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a></span><a href=\"#impl-Shr%3C%26u32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#614\">source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a></span><a href=\"#impl-Binary-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3C%26u8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#178\">source</a></span><a href=\"#impl-BitAnd%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#178\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<&u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#178\">source</a></span><a href=\"#impl-BitAnd-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#178\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu128%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Cu128%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u128>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i32%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26i32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu16%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Cu16%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u16>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u128%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26u128%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u128>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26i8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Ci8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26isize%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26isize%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&isize>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cisize%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Cisize%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<isize>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci16%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Ci16%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i16>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci32%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Ci32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cusize%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Cusize%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<usize>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u32%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26u32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu64%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Cu64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i64%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26i64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i128%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26i128%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i128>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci64%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Ci64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u64%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26u64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i16%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26i16%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i16>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26usize%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26usize%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&usize>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci128%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Ci128%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i128>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu32%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3Cu32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u16%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a></span><a href=\"#impl-Shl%3C%26u16%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#496\">source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u16>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a></span><a href=\"#impl-LowerHex-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","network::HandlerWorkType"],["<section id=\"impl-SimdCast-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/portable-simd/crates/core_simd/src/cast.rs.html#33\">source</a><a href=\"#impl-SimdCast-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/core_simd/cast/trait.SimdCast.html\" title=\"trait core::core_simd::cast::SimdCast\">SimdCast</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","SimdCast","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#68\">source</a></span><a href=\"#impl-Not-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Not.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/bit.rs.html#68\">source</a><a href=\"#method.not\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Not.html#tymethod.not\" class=\"fn\">not</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the unary <code>!</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Not.html#tymethod.not\">Read more</a></div></details></div></details>","Not","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#149\">source</a></span><a href=\"#impl-Product-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#149\">source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\nmultiplying the items.</div></details></div></details>","Product","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product%3C%26u8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#149\">source</a></span><a href=\"#impl-Product%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/accum.rs.html#149\">source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\nmultiplying the items.</div></details></div></details>","Product<&'a u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#1411\">source</a></span><a href=\"#impl-FromStr-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#1411\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu8%3E%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.31.0\">1.31.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu8%3E%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(nonzero: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Converts a <code>NonZeroU8</code> into an <code>u8</code></p>\n</div></details></div></details>","From<NonZero<u8>>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChar%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ascii/ascii_char.rs.html#554\">source</a><a href=\"#impl-From%3CChar%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ascii/ascii_char/enum.AsciiChar.html\" title=\"enum core::ascii::ascii_char::AsciiChar\">AsciiChar</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ascii/ascii_char.rs.html#554\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(chr: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ascii/ascii_char/enum.AsciiChar.html\" title=\"enum core::ascii::ascii_char::AsciiChar\">AsciiChar</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<AsciiChar>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cbool%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#85\">source</a></span><a href=\"#impl-From%3Cbool%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#85\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Converts a <code>bool</code> to a <code>u8</code>. The resulting value is <code>0</code> for <code>false</code> and <code>1</code> for <code>true</code>\nvalues.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u8::from(<span class=\"bool-val\">true</span>), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(u8::from(<span class=\"bool-val\">false</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details></div></details>","From<bool>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#349\">source</a></span><a href=\"#impl-Mul-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#349\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26u8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#349\">source</a></span><a href=\"#impl-Mul%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#349\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3C%26u8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#833\">source</a></span><a href=\"#impl-SubAssign%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#833\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<&u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#833\">source</a></span><a href=\"#impl-SubAssign-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#833\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#1009\">source</a></span><a href=\"#impl-RemAssign-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#1009\">source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3C%26u8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#1009\">source</a></span><a href=\"#impl-RemAssign%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/ops/arith.rs.html#1009\">source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<&u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci128%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#329\">source</a></span><a href=\"#impl-TryFrom%3Ci128%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#329\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i128>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci64%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#328\">source</a></span><a href=\"#impl-TryFrom%3Ci64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#328\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu64%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#305\">source</a></span><a href=\"#impl-TryFrom%3Cu64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#305\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<u64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cusize%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#389\">source</a></span><a href=\"#impl-TryFrom%3Cusize%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#389\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<usize>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci32%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#327\">source</a></span><a href=\"#impl-TryFrom%3Ci32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#327\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu128%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#306\">source</a></span><a href=\"#impl-TryFrom%3Cu128%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#306\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<u128>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci8%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#321\">source</a></span><a href=\"#impl-TryFrom%3Ci8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#321\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci16%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#326\">source</a></span><a href=\"#impl-TryFrom%3Ci16%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#326\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i16>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu32%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#304\">source</a></span><a href=\"#impl-TryFrom%3Cu32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#304\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<u32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cchar%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.59.0\">1.59.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/char/convert.rs.html#102\">source</a></span><a href=\"#impl-TryFrom%3Cchar%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"docblock\"><p>Maps a <code>char</code> with code point in U+0000..=U+00FF to a byte in 0x00..=0xFF with same value,\nfailing if the code point is greater than U+00FF.</p>\n<p>See <a href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html#impl-From%3Cu8%3E-for-char\" title=\"primitive char\"><code>impl From&lt;u8&gt; for char</code></a> for details on the encoding.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/char/convert.rs.html#116\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(c: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Tries to convert a <a href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\" title=\"primitive char\"><code>char</code></a> into a <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>a = <span class=\"string\">'ÿ'</span>; <span class=\"comment\">// U+00FF\n</span><span class=\"kw\">let </span>b = <span class=\"string\">'Ā'</span>; <span class=\"comment\">// U+0100\n</span><span class=\"macro\">assert_eq!</span>(u8::try_from(a), <span class=\"prelude-val\">Ok</span>(<span class=\"number\">0xFF_u8</span>));\n<span class=\"macro\">assert!</span>(u8::try_from(b).is_err());</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/char/struct.TryFromCharError.html\" title=\"struct core::char::TryFromCharError\">TryFromCharError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<char>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cisize%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#394\">source</a></span><a href=\"#impl-TryFrom%3Cisize%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#394\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<isize>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu16%3E-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#303\">source</a></span><a href=\"#impl-TryFrom%3Cu16%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#303\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<u16>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/default.rs.html#163\">source</a></span><a href=\"#impl-Default-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/default.rs.html#163\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns the default value of <code>0</code></p>\n</div></details></div></details>","Default","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a></span><a href=\"#impl-UpperHex-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/fmt/num.rs.html#179\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/ser/impls.rs.html#29\">source</a><a href=\"#impl-Serialize-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/ser/impls.rs.html#29\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/de/impls.rs.html#337-342\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/de/impls.rs.html#337-342\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDeserializer%3C'de,+E%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/de/value.rs.html#300\">source</a><a href=\"#impl-IntoDeserializer%3C'de,+E%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, E&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.IntoDeserializer.html\" title=\"trait serde::de::IntoDeserializer\">IntoDeserializer</a>&lt;'de, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Error.html\" title=\"trait serde::de::Error\">Error</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Deserializer\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.IntoDeserializer.html#associatedtype.Deserializer\" class=\"associatedtype\">Deserializer</a> = <a class=\"struct\" href=\"https://docs.rs/serde/1.0.193/serde/de/value/struct.U8Deserializer.html\" title=\"struct serde::de::value::U8Deserializer\">U8Deserializer</a>&lt;E&gt;</h4></section></summary><div class='docblock'>The type of the deserializer being converted into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_deserializer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/de/value.rs.html#300\">source</a><a href=\"#method.into_deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.IntoDeserializer.html#tymethod.into_deserializer\" class=\"fn\">into_deserializer</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/serde/1.0.193/serde/de/value/struct.U8Deserializer.html\" title=\"struct serde::de::value::U8Deserializer\">U8Deserializer</a>&lt;E&gt;</h4></section></summary><div class='docblock'>Convert this value into a deserializer.</div></details></div></details>","IntoDeserializer<'de, E>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Weight-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/distributions/weighted/alias_method.rs.html#355\">source</a><a href=\"#impl-Weight-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/distributions/weighted/alias_method/trait.Weight.html\" title=\"trait rand::distributions::weighted::alias_method::Weight\">Weight</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/distributions/weighted/alias_method.rs.html#355\">source</a><a href=\"#associatedconstant.MAX\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://rust-random.github.io/rand/rand/distributions/weighted/alias_method/trait.Weight.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> = 255u8</h4></section></summary><div class='docblock'>Maximum number representable by <code>Self</code>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ZERO\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/distributions/weighted/alias_method.rs.html#355\">source</a><a href=\"#associatedconstant.ZERO\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://rust-random.github.io/rand/rand/distributions/weighted/alias_method/trait.Weight.html#associatedconstant.ZERO\" class=\"constant\">ZERO</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> = 0u8</h4></section></summary><div class='docblock'>Element of <code>Self</code> equivalent to 0.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_u32_lossy\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/distributions/weighted/alias_method.rs.html#355\">source</a><a href=\"#method.try_from_u32_lossy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/distributions/weighted/alias_method/trait.Weight.html#tymethod.try_from_u32_lossy\" class=\"fn\">try_from_u32_lossy</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Produce an instance of <code>Self</code> from a <code>u32</code> value, or return <code>None</code> if\nout of range. Loss of precision (where <code>Self</code> is a floating point type)\nis acceptable.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/distributions/weighted/alias_method.rs.html#295\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/distributions/weighted/alias_method/trait.Weight.html#method.sum\" class=\"fn\">sum</a>(values: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>) -&gt; Self</h4></section></summary><div class='docblock'>Sums all values in slice <code>values</code>.</div></details></div></details>","Weight","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SampleUniform-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/distributions/uniform.rs.html#473\">source</a><a href=\"#impl-SampleUniform-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Sampler\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Sampler\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://rust-random.github.io/rand/rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" class=\"associatedtype\">Sampler</a> = <a class=\"struct\" href=\"https://rust-random.github.io/rand/rand/distributions/uniform/struct.UniformInt.html\" title=\"struct rand::distributions::uniform::UniformInt\">UniformInt</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>The <code>UniformSampler</code> implementation supporting type <code>X</code>.</div></details></div></details>","SampleUniform","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CU64%3E-for-u8\" class=\"impl\"><a href=\"#impl-TryFrom%3CU64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;U64&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: U64) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<U64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-u8\" class=\"impl\"><a href=\"#impl-Encodable-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-u8\" class=\"impl\"><a href=\"#impl-Decodable-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CU256%3E-for-u8\" class=\"impl\"><a href=\"#impl-TryFrom%3CU256%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;U256&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: U256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<U256>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CU512%3E-for-u8\" class=\"impl\"><a href=\"#impl-TryFrom%3CU512%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;U512&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: U512) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<U512>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CU128%3E-for-u8\" class=\"impl\"><a href=\"#impl-TryFrom%3CU128%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;U128&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: U128) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<U128>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-u8\" class=\"impl\"><a href=\"#impl-Decode-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details></div></details>","Decode","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCompact%3Cu8%3E%3E-for-u8\" class=\"impl\"><a href=\"#impl-From%3CCompact%3Cu8%3E%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Compact&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: Compact&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Compact<u8>>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-u8\" class=\"impl\"><a href=\"#impl-Encode-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; R,</div></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>)<div class=\"where\">where\n    T: Output,</div></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details></div></details>","Encode","network::HandlerWorkType"],["<section id=\"impl-EncodeLike-for-u8\" class=\"impl\"><a href=\"#impl-EncodeLike-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","EncodeLike","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromByteSlice-for-u8\" class=\"impl\"><a href=\"#impl-FromByteSlice-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FromByteSlice for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_byte_slice\" class=\"method trait-impl\"><a href=\"#method.from_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_byte_slice</a>&lt;T&gt;(slice: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], Error&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert from an immutable byte slice to a immutable slice of a fundamental, built-in\nnumeric type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut_byte_slice\" class=\"method trait-impl\"><a href=\"#method.from_mut_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_mut_byte_slice</a>&lt;T&gt;(slice: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], Error&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert from an mutable byte slice to a mutable slice of a fundamental, built-in numeric\ntype</div></details></div></details>","FromByteSlice","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromByteVec-for-u8\" class=\"impl\"><a href=\"#impl-FromByteVec-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FromByteVec for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_byte_vec\" class=\"method trait-impl\"><a href=\"#method.from_byte_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_byte_vec</a>(vec: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;, Error&gt;</h4></section></summary><div class='docblock'>Convert from a byte <code>Vec&lt;u8&gt;</code> to a <code>Vec&lt;T&gt;</code> of a fundamental, built-in\nnumeric type</div></details></div></details>","FromByteVec","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToMutByteSlice-for-u8\" class=\"impl\"><a href=\"#impl-ToMutByteSlice-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ToMutByteSlice for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_mut_byte_slice\" class=\"method trait-impl\"><a href=\"#method.to_mut_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_mut_byte_slice</a>&lt;T&gt;(slice: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert from a mutable slice of a fundamental, built-in numeric type to a mutable byte\nslice</div></details></div></details>","ToMutByteSlice","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToByteSlice-for-u8\" class=\"impl\"><a href=\"#impl-ToByteSlice-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ToByteSlice for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_byte_slice\" class=\"method trait-impl\"><a href=\"#method.to_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_byte_slice</a>&lt;T&gt;(slice: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert from an immutable slice of a fundamental, built-in numeric type to an immutable\nbyte slice</div></details></div></details>","ToByteSlice","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SeekNum-for-u8\" class=\"impl\"><a href=\"#impl-SeekNum-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl SeekNum for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_block_byte\" class=\"method trait-impl\"><a href=\"#method.from_block_byte\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_block_byte</a>&lt;T&gt;(block: T, byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, bs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, OverflowError&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryInto.html\" title=\"trait core::convert::TryInto\">TryInto</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</div></h4></section></summary><div class='docblock'>Try to get position for block number <code>block</code>, byte position inside\nblock <code>byte</code>, and block size <code>bs</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_block_byte\" class=\"method trait-impl\"><a href=\"#method.to_block_byte\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_block_byte</a>&lt;T&gt;(self, bs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>), OverflowError&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</div></h4></section></summary><div class='docblock'>Try to get block number and bytes position for given block size <code>bs</code>.</div></details></div></details>","SeekNum","network::HandlerWorkType"],["<section id=\"impl-DefaultIsZeroes-for-u8\" class=\"impl\"><a href=\"#impl-DefaultIsZeroes-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl DefaultIsZeroes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","DefaultIsZeroes","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CUInt%3CU,+B%3E%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.17.0/src/typenum/type_operators.rs.html#233\">source</a><a href=\"#impl-Pow%3CUInt%3CU,+B%3E%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U, B&gt; <a class=\"trait\" href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><div class=\"where\">where\n    U: <a class=\"trait\" href=\"https://docs.rs/typenum/1.17.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,\n    B: <a class=\"trait\" href=\"https://docs.rs/typenum/1.17.0/typenum/marker_traits/trait.Bit.html\" title=\"trait typenum::marker_traits::Bit\">Bit</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.17.0/src/typenum/type_operators.rs.html#233\">source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<UInt<U, B>>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CPInt%3CU%3E%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.17.0/src/typenum/type_operators.rs.html#233\">source</a><a href=\"#impl-Pow%3CPInt%3CU%3E%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U&gt; <a class=\"trait\" href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><div class=\"where\">where\n    U: <a class=\"trait\" href=\"https://docs.rs/typenum/1.17.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a> + <a class=\"trait\" href=\"https://docs.rs/typenum/1.17.0/typenum/marker_traits/trait.NonZero.html\" title=\"trait typenum::marker_traits::NonZero\">NonZero</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.17.0/src/typenum/type_operators.rs.html#233\">source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<PInt<U>>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CZ0%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.17.0/src/typenum/type_operators.rs.html#233\">source</a><a href=\"#impl-Pow%3CZ0%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.17.0/src/typenum/type_operators.rs.html#233\">source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<Z0>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CUTerm%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.17.0/src/typenum/type_operators.rs.html#233\">source</a><a href=\"#impl-Pow%3CUTerm%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.17.0/src/typenum/type_operators.rs.html#233\">source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"https://docs.rs/typenum/1.17.0/typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<UTerm>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstantTimeEq-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#370\">source</a><a href=\"#impl-ConstantTimeEq-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeEq.html\" title=\"trait subtle::ConstantTimeEq\">ConstantTimeEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ct_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#370\">source</a><a href=\"#method.ct_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeEq.html#tymethod.ct_eq\" class=\"fn\">ct_eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a></h4></section></summary><div class='docblock'>Determine if two items are equal. <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeEq.html#tymethod.ct_eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ct_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#284\">source</a><a href=\"#method.ct_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeEq.html#method.ct_ne\" class=\"fn\">ct_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a></h4></section></summary><div class='docblock'>Determine if two items are NOT equal. <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeEq.html#method.ct_ne\">Read more</a></div></details></div></details>","ConstantTimeEq","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstantTimeGreater-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#914\">source</a><a href=\"#impl-ConstantTimeGreater-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeGreater.html\" title=\"trait subtle::ConstantTimeGreater\">ConstantTimeGreater</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ct_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#914\">source</a><a href=\"#method.ct_gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeGreater.html#tymethod.ct_gt\" class=\"fn\">ct_gt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a></h4></section></summary><div class=\"docblock\"><p>Returns Choice::from(1) iff x &gt; y, and Choice::from(0) iff x &lt;= y.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>This algoritm would also work for signed integers if we first\nflip the top bit, e.g. <code>let x: u8 = x ^ 0x80</code>, etc.</p>\n</div></details></div></details>","ConstantTimeGreater","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConditionallySelectable-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#541\">source</a><a href=\"#impl-ConditionallySelectable-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConditionallySelectable.html\" title=\"trait subtle::ConditionallySelectable\">ConditionallySelectable</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.conditional_select\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#541\">source</a><a href=\"#method.conditional_select\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConditionallySelectable.html#tymethod.conditional_select\" class=\"fn\">conditional_select</a>(a: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, b: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, choice: <a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Select <code>a</code> or <code>b</code> according to <code>choice</code>. <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConditionallySelectable.html#tymethod.conditional_select\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.conditional_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#541\">source</a><a href=\"#method.conditional_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConditionallySelectable.html#method.conditional_assign\" class=\"fn\">conditional_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, choice: <a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>)</h4></section></summary><div class='docblock'>Conditionally assign <code>other</code> to <code>self</code>, according to <code>choice</code>. <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConditionallySelectable.html#method.conditional_assign\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.conditional_swap\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#541\">source</a><a href=\"#method.conditional_swap\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConditionallySelectable.html#method.conditional_swap\" class=\"fn\">conditional_swap</a>(a: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, b: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, choice: <a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>)</h4></section></summary><div class='docblock'>Conditionally swap <code>self</code> and <code>other</code> if <code>choice == 1</code>; otherwise,\nreassign both unto themselves. <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConditionallySelectable.html#method.conditional_swap\">Read more</a></div></details></div></details>","ConditionallySelectable","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstantTimeLess-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#975\">source</a><a href=\"#impl-ConstantTimeLess-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeLess.html\" title=\"trait subtle::ConstantTimeLess\">ConstantTimeLess</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ct_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#970\">source</a><a href=\"#method.ct_lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeLess.html#method.ct_lt\" class=\"fn\">ct_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a></h4></section></summary><div class='docblock'>Determine whether <code>self &lt; other</code>. <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeLess.html#method.ct_lt\">Read more</a></div></details></div></details>","ConstantTimeLess","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CU64%3E-for-u8\" class=\"impl\"><a href=\"#impl-TryFrom%3CU64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;U64&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: U64) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<U64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SampleUniform-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/distributions/uniform.rs.html#565\">source</a><a href=\"#impl-SampleUniform-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Sampler\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Sampler\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://rust-random.github.io/rand/rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" class=\"associatedtype\">Sampler</a> = <a class=\"struct\" href=\"https://rust-random.github.io/rand/rand/distributions/uniform/struct.UniformInt.html\" title=\"struct rand::distributions::uniform::UniformInt\">UniformInt</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>The <code>UniformSampler</code> implementation supporting type <code>X</code>.</div></details></div></details>","SampleUniform","network::HandlerWorkType"],["<section id=\"impl-Weight-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/distributions/weighted.rs.html#44\">source</a><a href=\"#impl-Weight-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/distributions/weighted/alias_method/trait.Weight.html\" title=\"trait rand::distributions::weighted::alias_method::Weight\">Weight</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","Weight","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-u8\" class=\"impl\"><a href=\"#impl-Encodable-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-u8\" class=\"impl\"><a href=\"#impl-Decodable-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CU512%3E-for-u8\" class=\"impl\"><a href=\"#impl-TryFrom%3CU512%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;U512&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: U512) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<U512>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CU256%3E-for-u8\" class=\"impl\"><a href=\"#impl-TryFrom%3CU256%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;U256&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: U256) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<U256>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CU128%3E-for-u8\" class=\"impl\"><a href=\"#impl-TryFrom%3CU128%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;U128&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: U128) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<U128>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCompact%3Cu8%3E%3E-for-u8\" class=\"impl\"><a href=\"#impl-From%3CCompact%3Cu8%3E%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Compact&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: Compact&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Compact<u8>>","network::HandlerWorkType"],["<section id=\"impl-EncodeLike-for-u8\" class=\"impl\"><a href=\"#impl-EncodeLike-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","EncodeLike","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-u8\" class=\"impl\"><a href=\"#impl-Decode-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-u8\" class=\"impl\"><a href=\"#impl-Encode-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; R,</div></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>)<div class=\"where\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-u8\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromByteSlice-for-u8\" class=\"impl\"><a href=\"#impl-FromByteSlice-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FromByteSlice for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_byte_slice\" class=\"method trait-impl\"><a href=\"#method.from_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_byte_slice</a>&lt;T&gt;(slice: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], Error&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert from an immutable byte slice to a immutable slice of a fundamental, built-in\nnumeric type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut_byte_slice\" class=\"method trait-impl\"><a href=\"#method.from_mut_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_mut_byte_slice</a>&lt;T&gt;(slice: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], Error&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert from an mutable byte slice to a mutable slice of a fundamental, built-in numeric\ntype</div></details></div></details>","FromByteSlice","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToMutByteSlice-for-u8\" class=\"impl\"><a href=\"#impl-ToMutByteSlice-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ToMutByteSlice for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_mut_byte_slice\" class=\"method trait-impl\"><a href=\"#method.to_mut_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_mut_byte_slice</a>&lt;T&gt;(slice: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert from a mutable slice of a fundamental, built-in numeric type to a mutable byte\nslice</div></details></div></details>","ToMutByteSlice","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToByteSlice-for-u8\" class=\"impl\"><a href=\"#impl-ToByteSlice-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ToByteSlice for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_byte_slice\" class=\"method trait-impl\"><a href=\"#method.to_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_byte_slice</a>&lt;T&gt;(slice: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert from an immutable slice of a fundamental, built-in numeric type to an immutable\nbyte slice</div></details></div></details>","ToByteSlice","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SampleUniform-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/distributions/uniform.rs.html#469\">source</a><a href=\"#impl-SampleUniform-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Sampler\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Sampler\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://rust-random.github.io/rand/rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" class=\"associatedtype\">Sampler</a> = <a class=\"struct\" href=\"https://rust-random.github.io/rand/rand/distributions/uniform/struct.UniformInt.html\" title=\"struct rand::distributions::uniform::UniformInt\">UniformInt</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>The <code>UniformSampler</code> implementation supporting type <code>X</code>.</div></details></div></details>","SampleUniform","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MallocSizeOf-for-u8\" class=\"impl\"><a href=\"#impl-MallocSizeOf-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MallocSizeOf for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_of\" class=\"method trait-impl\"><a href=\"#method.size_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_of</a>(&amp;self, _: &amp;mut MallocSizeOfOps) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Measure the heap usage of all descendant heap-allocated structures, but\nnot the space taken up by the value itself.</div></details></div></details>","MallocSizeOf","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedShl-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#216\">source</a><a href=\"#impl-CheckedShl-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShl.html\" title=\"trait num_traits::ops::checked::CheckedShl\">CheckedShl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#216\">source</a><a href=\"#method.checked_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShl.html#tymethod.checked_shl\" class=\"fn\">checked_shl</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShl.html#tymethod.checked_shl\">Read more</a></div></details></div></details>","CheckedShl","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingNeg-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#119\">source</a><a href=\"#impl-WrappingNeg-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingNeg.html\" title=\"trait num_traits::ops::wrapping::WrappingNeg\">WrappingNeg</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#119\">source</a><a href=\"#method.wrapping_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingNeg.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Wrapping (modular) negation. Computes <code>-self</code>,\nwrapping around at the boundary of the type. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingNeg.html#tymethod.wrapping_neg\">Read more</a></div></details></div></details>","WrappingNeg","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#321\">source</a><a href=\"#impl-FromBytes-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html\" title=\"trait num_traits::ops::bytes::FromBytes\">FromBytes</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">1</a>]</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#321\">source</a><a href=\"#method.from_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#tymethod.from_be_bytes\" class=\"fn\">from_be_bytes</a>(bytes: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html\" title=\"trait num_traits::ops::bytes::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Create a number from its representation as a byte array in big endian. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#tymethod.from_be_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#321\">source</a><a href=\"#method.from_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#tymethod.from_le_bytes\" class=\"fn\">from_le_bytes</a>(bytes: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html\" title=\"trait num_traits::ops::bytes::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Create a number from its representation as a byte array in little endian. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#tymethod.from_le_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ne_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#321\">source</a><a href=\"#method.from_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#method.from_ne_bytes\" class=\"fn\">from_ne_bytes</a>(bytes: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html\" title=\"trait num_traits::ops::bytes::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Create a number from its memory representation as a byte array in native endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#method.from_ne_bytes\">Read more</a></div></details></div></details>","FromBytes","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstOne-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#163\">source</a><a href=\"#impl-ConstOne-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.ConstOne.html\" title=\"trait num_traits::identities::ConstOne\">ConstOne</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ONE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#163\">source</a><a href=\"#associatedconstant.ONE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.ConstOne.html#associatedconstant.ONE\" class=\"constant\">ONE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> = 1u8</h4></section></summary><div class='docblock'>The multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details></div></details>","ConstOne","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26usize%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#72\">source</a><a href=\"#impl-Pow%3C%26usize%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#72\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a usize>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u32%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#71\">source</a><a href=\"#impl-Pow%3C%26u32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#71\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u8%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#69\">source</a><a href=\"#impl-Pow%3C%26u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#69\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu32%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#71\">source</a><a href=\"#impl-Pow%3Cu32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#71\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cusize%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#72\">source</a><a href=\"#impl-Pow%3Cusize%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#72\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<usize>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu16%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#70\">source</a><a href=\"#impl-Pow%3Cu16%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#70\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u16>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u16%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#70\">source</a><a href=\"#impl-Pow%3C%26u16%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#70\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u16>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu8%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#69\">source</a><a href=\"#impl-Pow%3Cu8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#69\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Num-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/lib.rs.html#174\">source</a><a href=\"#impl-Num-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/trait.Num.html\" title=\"trait num_traits::Num\">Num</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.FromStrRadixErr\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.FromStrRadixErr\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/trait.Num.html#associatedtype.FromStrRadixErr\" class=\"associatedtype\">FromStrRadixErr</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_radix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/lib.rs.html#174\">source</a><a href=\"#method.from_str_radix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/trait.Num.html#tymethod.from_str_radix\" class=\"fn\">from_str_radix</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, radix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section></summary><div class='docblock'>Convert from a string and radix (typically <code>2..=36</code>). <a href=\"https://docs.rs/num-traits/0.2/num_traits/trait.Num.html#tymethod.from_str_radix\">Read more</a></div></details></div></details>","Num","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedRem-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#126\">source</a><a href=\"#impl-CheckedRem-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedRem.html\" title=\"trait num_traits::ops::checked::CheckedRem\">CheckedRem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#126\">source</a><a href=\"#method.checked_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedRem.html#tymethod.checked_rem\" class=\"fn\">checked_rem</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Finds the remainder of dividing two numbers, checking for underflow, overflow and division\nby zero. If any of that happens, <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedRem.html#tymethod.checked_rem\">Read more</a></div></details></div></details>","CheckedRem","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingSub-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#51\">source</a><a href=\"#impl-WrappingSub-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingSub.html\" title=\"trait num_traits::ops::wrapping::WrappingSub\">WrappingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#51\">source</a><a href=\"#method.wrapping_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingSub.html#tymethod.wrapping_sub\" class=\"fn\">wrapping_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Wrapping (modular) subtraction. Computes <code>self - other</code>, wrapping around at the boundary\nof the type.</div></details></div></details>","WrappingSub","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedSub-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#43\">source</a><a href=\"#impl-CheckedSub-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedSub.html\" title=\"trait num_traits::ops::checked::CheckedSub\">CheckedSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#43\">source</a><a href=\"#method.checked_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedSub.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Subtracts two numbers, checking for underflow. If underflow happens,\n<code>None</code> is returned.</div></details></div></details>","CheckedSub","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromPrimitive-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#575\">source</a><a href=\"#impl-FromPrimitive-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html\" title=\"trait num_traits::cast::FromPrimitive\">FromPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#575\">source</a><a href=\"#method.from_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_isize\" class=\"fn\">from_isize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>isize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#575\">source</a><a href=\"#method.from_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i8\" class=\"fn\">from_i8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#575\">source</a><a href=\"#method.from_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i16\" class=\"fn\">from_i16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#575\">source</a><a href=\"#method.from_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i32\" class=\"fn\">from_i32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#575\">source</a><a href=\"#method.from_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#tymethod.from_i64\" class=\"fn\">from_i64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#575\">source</a><a href=\"#method.from_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i128\" class=\"fn\">from_i128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#575\">source</a><a href=\"#method.from_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_usize\" class=\"fn\">from_usize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>usize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#575\">source</a><a href=\"#method.from_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u8\" class=\"fn\">from_u8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#575\">source</a><a href=\"#method.from_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u16\" class=\"fn\">from_u16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#575\">source</a><a href=\"#method.from_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u32\" class=\"fn\">from_u32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#575\">source</a><a href=\"#method.from_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#tymethod.from_u64\" class=\"fn\">from_u64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#575\">source</a><a href=\"#method.from_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u128\" class=\"fn\">from_u128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#575\">source</a><a href=\"#method.from_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_f32\" class=\"fn\">from_f32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>f32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#575\">source</a><a href=\"#method.from_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_f64\" class=\"fn\">from_f64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>f64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_f64\">Read more</a></div></details></div></details>","FromPrimitive","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bounded-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#58\">source</a><a href=\"#impl-Bounded-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#58\">source</a><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Returns the smallest finite number this type can represent</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#58\">source</a><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Returns the largest finite number this type can represent</div></details></div></details>","Bounded","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingAdd-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#52\">source</a><a href=\"#impl-SaturatingAdd-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingAdd.html\" title=\"trait num_traits::ops::saturating::SaturatingAdd\">SaturatingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#52\">source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingAdd.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Saturating addition. Computes <code>self + other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingAdd","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToBytes-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#321\">source</a><a href=\"#impl-ToBytes-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html\" title=\"trait num_traits::ops::bytes::ToBytes\">ToBytes</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">1</a>]</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#321\">source</a><a href=\"#method.to_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#tymethod.to_be_bytes\" class=\"fn\">to_be_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html\" title=\"trait num_traits::ops::bytes::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in big-endian byte order. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#tymethod.to_be_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#321\">source</a><a href=\"#method.to_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#tymethod.to_le_bytes\" class=\"fn\">to_le_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html\" title=\"trait num_traits::ops::bytes::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in little-endian byte order. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#tymethod.to_le_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ne_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#321\">source</a><a href=\"#method.to_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#method.to_ne_bytes\" class=\"fn\">to_ne_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html\" title=\"trait num_traits::ops::bytes::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in native byte order. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#method.to_ne_bytes\">Read more</a></div></details></div></details>","ToBytes","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingMul-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#65\">source</a><a href=\"#impl-OverflowingMul-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingMul.html\" title=\"trait num_traits::ops::overflowing::OverflowingMul\">OverflowingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#65\">source</a><a href=\"#method.overflowing_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingMul.html#tymethod.overflowing_mul\" class=\"fn\">overflowing_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the product along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingMul","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumCast-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#691\">source</a><a href=\"#impl-NumCast-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#691\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html#tymethod.from\" class=\"fn\">from</a>&lt;N&gt;(n: N) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html\" title=\"trait num_traits::cast::ToPrimitive\">ToPrimitive</a>,</div></h4></section></summary><div class='docblock'>Creates a number from another value that can be converted into\na primitive via the <code>ToPrimitive</code> trait. If the source value cannot be\nrepresented by the target type, then <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html#tymethod.from\">Read more</a></div></details></div></details>","NumCast","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Saturating-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#32\">source</a><a href=\"#impl-Saturating-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.Saturating.html\" title=\"trait num_traits::ops::saturating::Saturating\">Saturating</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#32\">source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.Saturating.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#32\">source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.Saturating.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.</div></details></div></details>","Saturating","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-One-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#163\">source</a><a href=\"#impl-One-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#163\">source</a><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#tymethod.one\" class=\"fn\">one</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Returns the multiplicative identity element of <code>Self</code>, <code>1</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#tymethod.one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#163\">source</a><a href=\"#method.is_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#method.is_one\" class=\"fn\">is_one</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the multiplicative identity. <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#method.is_one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#118\">source</a><a href=\"#method.set_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#method.set_one\" class=\"fn\">set_one</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details></div></details>","One","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Euclid-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#141\">source</a><a href=\"#impl-Euclid-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html\" title=\"trait num_traits::ops::euclid::Euclid\">Euclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#141\">source</a><a href=\"#method.div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.div_euclid\" class=\"fn\">div_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Calculates Euclidean division, the matching method for <code>rem_euclid</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.div_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#141\">source</a><a href=\"#method.rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.rem_euclid\" class=\"fn\">rem_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Calculates the least nonnegative remainder of <code>self (mod v)</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.rem_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#67\">source</a><a href=\"#method.div_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#method.div_rem_euclid\" class=\"fn\">div_rem_euclid</a>(&amp;self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Self, Self)</a></h4></section></summary><div class='docblock'>Returns both the quotient and remainder from Euclidean division. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#method.div_rem_euclid\">Read more</a></div></details></div></details>","Euclid","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedShr-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#249\">source</a><a href=\"#impl-CheckedShr-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShr.html\" title=\"trait num_traits::ops::checked::CheckedShr\">CheckedShr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#249\">source</a><a href=\"#method.checked_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShr.html#tymethod.checked_shr\" class=\"fn\">checked_shr</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShr.html#tymethod.checked_shr\">Read more</a></div></details></div></details>","CheckedShr","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingShl-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#162\">source</a><a href=\"#impl-WrappingShl-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShl.html\" title=\"trait num_traits::ops::wrapping::WrappingShl\">WrappingShl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#162\">source</a><a href=\"#method.wrapping_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShl.html#tymethod.wrapping_shl\" class=\"fn\">wrapping_shl</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high order bits of <code>rhs</code> that would\ncause the shift to exceed the bitwidth of the type. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShl.html#tymethod.wrapping_shl\">Read more</a></div></details></div></details>","WrappingShl","network::HandlerWorkType"],["<section id=\"impl-Unsigned-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/sign.rs.html#202\">source</a><a href=\"#impl-Unsigned-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/sign/trait.Unsigned.html\" title=\"trait num_traits::sign::Unsigned\">Unsigned</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","Unsigned","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingMul-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#72\">source</a><a href=\"#impl-WrappingMul-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingMul.html\" title=\"trait num_traits::ops::wrapping::WrappingMul\">WrappingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#72\">source</a><a href=\"#method.wrapping_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingMul.html#tymethod.wrapping_mul\" class=\"fn\">wrapping_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Wrapping (modular) multiplication. Computes <code>self * other</code>, wrapping around at the boundary\nof the type.</div></details></div></details>","WrappingMul","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedMul-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#65\">source</a><a href=\"#impl-CheckedMul-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedMul.html\" title=\"trait num_traits::ops::checked::CheckedMul\">CheckedMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#65\">source</a><a href=\"#method.checked_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedMul.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, <code>None</code> is returned.</div></details></div></details>","CheckedMul","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingSub-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#73\">source</a><a href=\"#impl-SaturatingSub-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingSub.html\" title=\"trait num_traits::ops::saturating::SaturatingSub\">SaturatingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#73\">source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingSub.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Saturating subtraction. Computes <code>self - other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingSub","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingAdd-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#23\">source</a><a href=\"#impl-OverflowingAdd-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingAdd.html\" title=\"trait num_traits::ops::overflowing::OverflowingAdd\">OverflowingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#23\">source</a><a href=\"#method.overflowing_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingAdd.html#tymethod.overflowing_add\" class=\"fn\">overflowing_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the sum along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingAdd","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedEuclid-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#292\">source</a><a href=\"#impl-CheckedEuclid-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.CheckedEuclid.html\" title=\"trait num_traits::ops::euclid::CheckedEuclid\">CheckedEuclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#292\">source</a><a href=\"#method.checked_div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.CheckedEuclid.html#tymethod.checked_div_euclid\" class=\"fn\">checked_div_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Performs euclid division that returns <code>None</code> instead of panicking on division by zero\nand instead of wrapping around on underflow and overflow.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#292\">source</a><a href=\"#method.checked_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.CheckedEuclid.html#tymethod.checked_rem_euclid\" class=\"fn\">checked_rem_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Finds the euclid remainder of dividing two numbers, checking for underflow, overflow and\ndivision by zero. If any of that happens, <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#215\">source</a><a href=\"#method.checked_div_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.CheckedEuclid.html#method.checked_div_rem_euclid\" class=\"fn\">checked_div_rem_euclid</a>(&amp;self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Self, Self)</a>&gt;</h4></section></summary><div class='docblock'>Returns both the quotient and remainder from checked Euclidean division. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.CheckedEuclid.html#method.checked_div_rem_euclid\">Read more</a></div></details></div></details>","CheckedEuclid","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu128%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#impl-AsPrimitive%3Cu128%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u128>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci32%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#impl-AsPrimitive%3Ci32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci64%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#impl-AsPrimitive%3Ci64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cchar%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#impl-AsPrimitive%3Cchar%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<char>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci16%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#impl-AsPrimitive%3Ci16%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i16>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu16%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#impl-AsPrimitive%3Cu16%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u16>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci128%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#impl-AsPrimitive%3Ci128%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i128>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cf32%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#impl-AsPrimitive%3Cf32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<f32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu32%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#impl-AsPrimitive%3Cu32%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u32>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cf64%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#impl-AsPrimitive%3Cf64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<f64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cusize%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#impl-AsPrimitive%3Cusize%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<usize>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu64%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#impl-AsPrimitive%3Cu64%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u64>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu8%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#impl-AsPrimitive%3Cu8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci8%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#impl-AsPrimitive%3Ci8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cisize%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#impl-AsPrimitive%3Cisize%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#763\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<isize>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstZero-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#58\">source</a><a href=\"#impl-ConstZero-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.ConstZero.html\" title=\"trait num_traits::identities::ConstZero\">ConstZero</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ZERO\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#58\">source</a><a href=\"#associatedconstant.ZERO\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.ConstZero.html#associatedconstant.ZERO\" class=\"constant\">ZERO</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> = 0u8</h4></section></summary><div class='docblock'>The additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","ConstZero","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedNeg-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#172\">source</a><a href=\"#impl-CheckedNeg-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedNeg.html\" title=\"trait num_traits::ops::checked::CheckedNeg\">CheckedNeg</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#172\">source</a><a href=\"#method.checked_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedNeg.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Negates a number, returning <code>None</code> for results that can’t be represented, like signed <code>MIN</code>\nvalues that can’t be positive, or non-zero unsigned values that can’t be negative. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedNeg.html#tymethod.checked_neg\">Read more</a></div></details></div></details>","CheckedNeg","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PrimInt-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">source</a><a href=\"#impl-PrimInt-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">source</a><a href=\"#method.count_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of ones in the binary representation of <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.count_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">source</a><a href=\"#method.count_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.count_zeros\" class=\"fn\">count_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of zeros in the binary representation of <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.count_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">source</a><a href=\"#method.leading_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.leading_ones\" class=\"fn\">leading_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of leading ones in the binary representation\nof <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.leading_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">source</a><a href=\"#method.leading_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of leading zeros in the binary representation\nof <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.leading_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">source</a><a href=\"#method.trailing_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.trailing_ones\" class=\"fn\">trailing_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of trailing ones in the binary representation\nof <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.trailing_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">source</a><a href=\"#method.trailing_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of trailing zeros in the binary representation\nof <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.trailing_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_left\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">source</a><a href=\"#method.rotate_left\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.rotate_left\" class=\"fn\">rotate_left</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, wrapping\nthe truncated bits to the end of the resulting integer. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.rotate_left\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_right\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">source</a><a href=\"#method.rotate_right\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.rotate_right\" class=\"fn\">rotate_right</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, wrapping\nthe truncated bits to the beginning of the resulting integer. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.rotate_right\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signed_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">source</a><a href=\"#method.signed_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.signed_shl\" class=\"fn\">signed_shl</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, filling\nzeros in the least significant bits. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.signed_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signed_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">source</a><a href=\"#method.signed_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.signed_shr\" class=\"fn\">signed_shr</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, copying\nthe “sign bit” in the most significant bits even for unsigned types. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.signed_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">source</a><a href=\"#method.unsigned_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.unsigned_shl\" class=\"fn\">unsigned_shl</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, filling\nzeros in the least significant bits. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.unsigned_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">source</a><a href=\"#method.unsigned_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.unsigned_shr\" class=\"fn\">unsigned_shr</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, filling\nzeros in the most significant bits. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.unsigned_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">source</a><a href=\"#method.swap_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.swap_bytes\" class=\"fn\">swap_bytes</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Reverses the byte order of the integer. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.swap_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse_bits\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">source</a><a href=\"#method.reverse_bits\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.reverse_bits\" class=\"fn\">reverse_bits</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Reverses the order of bits in the integer. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.reverse_bits\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">source</a><a href=\"#method.from_be\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.from_be\" class=\"fn\">from_be</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Convert an integer from big endian to the target’s endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.from_be\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">source</a><a href=\"#method.from_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.from_le\" class=\"fn\">from_le</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Convert an integer from little endian to the target’s endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.from_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">source</a><a href=\"#method.to_be\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.to_be\" class=\"fn\">to_be</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Convert <code>self</code> to big endian from the target’s endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.to_be\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.to_le\" class=\"fn\">to_le</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Convert <code>self</code> to little endian from the target’s endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.to_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.pow\" class=\"fn\">pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Raises self to the power of <code>exp</code>, using exponentiation by squaring. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.pow\">Read more</a></div></details></div></details>","PrimInt","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedAdd-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#22\">source</a><a href=\"#impl-CheckedAdd-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedAdd.html\" title=\"trait num_traits::ops::checked::CheckedAdd\">CheckedAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#22\">source</a><a href=\"#method.checked_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedAdd.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Adds two numbers, checking for overflow. If overflow happens, <code>None</code> is\nreturned.</div></details></div></details>","CheckedAdd","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAddAssign-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/mul_add.rs.html#101\">source</a><a href=\"#impl-MulAddAssign-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAddAssign.html\" title=\"trait num_traits::ops::mul_add::MulAddAssign\">MulAddAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/mul_add.rs.html#101\">source</a><a href=\"#method.mul_add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAddAssign.html#tymethod.mul_add_assign\" class=\"fn\">mul_add_assign</a>(&amp;mut self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the fused multiply-add assignment operation <code>*self = (*self * a) + b</code></div></details></div></details>","MulAddAssign","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingShr-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#195\">source</a><a href=\"#impl-WrappingShr-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShr.html\" title=\"trait num_traits::ops::wrapping::WrappingShr\">WrappingShr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#195\">source</a><a href=\"#method.wrapping_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShr.html#tymethod.wrapping_shr\" class=\"fn\">wrapping_shr</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high order bits of <code>rhs</code> that would\ncause the shift to exceed the bitwidth of the type. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShr.html#tymethod.wrapping_shr\">Read more</a></div></details></div></details>","WrappingShr","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedDiv-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#87\">source</a><a href=\"#impl-CheckedDiv-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedDiv.html\" title=\"trait num_traits::ops::checked::CheckedDiv\">CheckedDiv</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#87\">source</a><a href=\"#method.checked_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedDiv.html#tymethod.checked_div\" class=\"fn\">checked_div</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, <code>None</code> is returned.</div></details></div></details>","CheckedDiv","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingAdd-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#30\">source</a><a href=\"#impl-WrappingAdd-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingAdd.html\" title=\"trait num_traits::ops::wrapping::WrappingAdd\">WrappingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#30\">source</a><a href=\"#method.wrapping_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingAdd.html#tymethod.wrapping_add\" class=\"fn\">wrapping_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Wrapping (modular) addition. Computes <code>self + other</code>, wrapping around at the boundary of\nthe type.</div></details></div></details>","WrappingAdd","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAdd-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/mul_add.rs.html#71\">source</a><a href=\"#impl-MulAdd-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html\" title=\"trait num_traits::ops::mul_add::MulAdd\">MulAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The resulting type after applying the fused multiply-add.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/mul_add.rs.html#71\">source</a><a href=\"#method.mul_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html#tymethod.mul_add\" class=\"fn\">mul_add</a>(self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html\" title=\"trait num_traits::ops::mul_add::MulAdd\">MulAdd</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html#associatedtype.Output\" title=\"type num_traits::ops::mul_add::MulAdd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the fused multiply-add operation <code>(self * a) + b</code></div></details></div></details>","MulAdd","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingMul-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#94\">source</a><a href=\"#impl-SaturatingMul-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingMul.html\" title=\"trait num_traits::ops::saturating::SaturatingMul\">SaturatingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#94\">source</a><a href=\"#method.saturating_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingMul.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Saturating multiplication. Computes <code>self * other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingMul","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingSub-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#44\">source</a><a href=\"#impl-OverflowingSub-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingSub.html\" title=\"trait num_traits::ops::overflowing::OverflowingSub\">OverflowingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#44\">source</a><a href=\"#method.overflowing_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingSub.html#tymethod.overflowing_sub\" class=\"fn\">overflowing_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the difference along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingSub","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToPrimitive-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#263\">source</a><a href=\"#impl-ToPrimitive-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html\" title=\"trait num_traits::cast::ToPrimitive\">ToPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#263\">source</a><a href=\"#method.to_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_isize\" class=\"fn\">to_isize</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>isize</code>. If the value cannot be\nrepresented by an <code>isize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#263\">source</a><a href=\"#method.to_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i8\" class=\"fn\">to_i8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be\nrepresented by an <code>i8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#263\">source</a><a href=\"#method.to_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i16\" class=\"fn\">to_i16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot be\nrepresented by an <code>i16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#263\">source</a><a href=\"#method.to_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i32\" class=\"fn\">to_i32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot be\nrepresented by an <code>i32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#263\">source</a><a href=\"#method.to_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#tymethod.to_i64\" class=\"fn\">to_i64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot be\nrepresented by an <code>i64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#263\">source</a><a href=\"#method.to_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i128\" class=\"fn\">to_i128</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot be\nrepresented by an <code>i128</code> (<code>i64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#263\">source</a><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_usize\" class=\"fn\">to_usize</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot be\nrepresented by a <code>usize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#263\">source</a><a href=\"#method.to_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u8\" class=\"fn\">to_u8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be\nrepresented by a <code>u8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#263\">source</a><a href=\"#method.to_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u16\" class=\"fn\">to_u16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be\nrepresented by a <code>u16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#263\">source</a><a href=\"#method.to_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u32\" class=\"fn\">to_u32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be\nrepresented by a <code>u32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#263\">source</a><a href=\"#method.to_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#tymethod.to_u64\" class=\"fn\">to_u64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be\nrepresented by a <code>u64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#263\">source</a><a href=\"#method.to_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u128\" class=\"fn\">to_u128</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot be\nrepresented by a <code>u128</code> (<code>u64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#263\">source</a><a href=\"#method.to_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_f32\" class=\"fn\">to_f32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#263\">source</a><a href=\"#method.to_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_f64\" class=\"fn\">to_f64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f64</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_f64\">Read more</a></div></details></div></details>","ToPrimitive","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#58\">source</a><a href=\"#impl-Zero-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#58\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Returns the additive identity element of <code>Self</code>, <code>0</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#tymethod.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#58\">source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the additive identity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#23\">source</a><a href=\"#method.set_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#method.set_zero\" class=\"fn\">set_zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","Zero","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToUsize-for-u8\" class=\"impl\"><a href=\"#impl-ToUsize-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ToUsize for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_usize</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>converts self to usize</div></details></div></details>","ToUsize","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsChar-for-u8\" class=\"impl\"><a href=\"#impl-AsChar-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AsChar for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_char\" class=\"method trait-impl\"><a href=\"#method.as_char\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_char</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a></h4></section></summary><div class='docblock'>makes a char from self</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_alpha\" class=\"method trait-impl\"><a href=\"#method.is_alpha\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_alpha</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests that self is an alphabetic character <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_alphanum\" class=\"method trait-impl\"><a href=\"#method.is_alphanum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_alphanum</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests that self is an alphabetic character\nor a decimal digit</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_dec_digit\" class=\"method trait-impl\"><a href=\"#method.is_dec_digit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_dec_digit</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests that self is a decimal digit</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_hex_digit\" class=\"method trait-impl\"><a href=\"#method.is_hex_digit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_hex_digit</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests that self is an hex digit</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_oct_digit\" class=\"method trait-impl\"><a href=\"#method.is_oct_digit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_oct_digit</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests that self is an octal digit</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method trait-impl\"><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">len</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Gets the len in bytes for self</div></details></div></details>","AsChar","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CDecimal%3E-for-u8\" class=\"impl\"><a href=\"#impl-TryFrom%3CDecimal%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;Decimal&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"docblock\"><p>Try to convert a <code>Decimal</code> to <code>u8</code> by truncating and returning the integer component.</p>\n<p>Can fail if the <code>Decimal</code> is out of range for <code>u8</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(t: Decimal) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, Error&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<Decimal>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMonth%3E-for-u8\" class=\"impl\"><a href=\"#impl-From%3CMonth%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Month&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(month: Month) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Month>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CDuration%3E-for-u8\" class=\"impl\"><a href=\"#impl-Mul%3CDuration%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Duration&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Duration</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: Duration) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Duration&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Duration>","network::HandlerWorkType"],["<section id=\"impl-Integer-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itoa/1.0.6/src/itoa/lib.rs.html#202-209\">source</a><a href=\"#impl-Integer-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/itoa/1.0.6/itoa/trait.Integer.html\" title=\"trait itoa::Integer\">Integer</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","Integer","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Yokeable%3C'a%3E-for-u8\" class=\"impl\"><a href=\"#impl-Yokeable%3C'a%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; Yokeable&lt;'a&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>This type MUST be <code>Self</code> with the <code>'static</code> replaced with <code>'a</code>, i.e. <code>Self&lt;'a&gt;</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform\" class=\"method trait-impl\"><a href=\"#method.transform\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">transform</a>(&amp;self) -&gt; &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as Yokeable&lt;'a&gt;&gt;::Output</h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>&amp;'a Self&lt;'static&gt;</code> and <code>&amp;'a Self&lt;'a&gt;</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_owned\" class=\"method trait-impl\"><a href=\"#method.transform_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">transform_owned</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as Yokeable&lt;'a&gt;&gt;::Output</h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>Self&lt;'static&gt;</code> and <code>Self&lt;'a&gt;</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.make\" class=\"method trait-impl\"><a href=\"#method.make\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">make</a>(this: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as Yokeable&lt;'a&gt;&gt;::Output) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>This method can be used to cast away <code>Self&lt;'a&gt;</code>’s lifetime. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_mut\" class=\"method trait-impl\"><a href=\"#method.transform_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">transform_mut</a>&lt;F&gt;(&amp;'a mut self, f: F)<div class=\"where\">where\n    F: 'static + for&lt;'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;'b mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as Yokeable&lt;'a&gt;&gt;::Output),</div></h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>&amp;'a mut Self&lt;'static&gt;</code> and <code>&amp;'a mut Self&lt;'a&gt;</code>,\nand pass it to <code>f</code>. <a>Read more</a></div></details></div></details>","Yokeable<'a>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroFrom%3C'a,+u8%3E-for-u8\" class=\"impl\"><a href=\"#impl-ZeroFrom%3C'a,+u8%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; ZeroFrom&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero_from\" class=\"method trait-impl\"><a href=\"#method.zero_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zero_from</a>(this: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Clone the other <code>C</code> into a struct that may retain references into <code>C</code>.</div></details></div></details>","ZeroFrom<'a, u8>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Writeable-for-u8\" class=\"impl\"><a href=\"#impl-Writeable-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Writeable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to</a>&lt;W&gt;(&amp;self, sink: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut W</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Write.html\" title=\"trait core::fmt::Write\">Write</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Writes a string to the given sink. Errors from the sink are bubbled up.\nThe default implementation delegates to <code>write_to_parts</code>, and discards any\n<code>Part</code> annotations.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.writeable_length_hint\" class=\"method trait-impl\"><a href=\"#method.writeable_length_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">writeable_length_hint</a>(&amp;self) -&gt; LengthHint</h4></section></summary><div class='docblock'>Returns a hint for the number of UTF-8 bytes that will be written to the sink. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_parts\" class=\"method trait-impl\"><a href=\"#method.write_to_parts\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_parts</a>&lt;S&gt;(&amp;self, sink: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;<div class=\"where\">where\n    S: PartsWrite + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Write bytes and <code>Part</code> annotations to the given sink. Errors from the\nsink are bubbled up. The default implementation delegates to <code>write_to</code>,\nand doesn’t produce any <code>Part</code> annotations.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_string\" class=\"method trait-impl\"><a href=\"#method.write_to_string\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_string</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Creates a new <code>String</code> with the data from this <code>Writeable</code>. Like <code>ToString</code>,\nbut smaller and faster. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.writeable_cmp_bytes\" class=\"method trait-impl\"><a href=\"#method.writeable_cmp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">writeable_cmp_bytes</a>(&amp;self, other: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>Compares the contents of this <code>Writeable</code> to the given bytes\nwithout allocating a String to hold the <code>Writeable</code> contents. <a>Read more</a></div></details></div></details>","Writeable","network::HandlerWorkType"],["<section id=\"impl-EqULE-for-u8\" class=\"impl\"><a href=\"#impl-EqULE-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EqULE for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","EqULE","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ULE-for-u8\" class=\"impl\"><a href=\"#impl-ULE-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ULE for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate_byte_slice\" class=\"method trait-impl\"><a href=\"#method.validate_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">validate_byte_slice</a>(_bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, ZeroVecError&gt;</h4></section></summary><div class='docblock'>Validates a byte slice, <code>&amp;[u8]</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_byte_slice\" class=\"method trait-impl\"><a href=\"#method.parse_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">parse_byte_slice</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, ZeroVecError&gt;</h4></section></summary><div class='docblock'>Parses a byte slice, <code>&amp;[u8]</code>, and return it as <code>&amp;[Self]</code> with the same lifetime. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_byte_slice_unchecked\" class=\"method trait-impl\"><a href=\"#method.from_byte_slice_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">from_byte_slice_unchecked</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a></h4></section></summary><div class='docblock'>Takes a byte slice, <code>&amp;[u8]</code>, and return it as <code>&amp;[Self]</code> with the same lifetime, assuming\nthat this byte slice has previously been run through [<code>Self::parse_byte_slice()</code>] with\nsuccess. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice\" class=\"method trait-impl\"><a href=\"#method.as_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_byte_slice</a>(slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Given <code>&amp;[Self]</code>, returns a <code>&amp;[u8]</code> with the same lifetime. <a>Read more</a></div></details></div></details>","ULE","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroMapKV%3C'a%3E-for-u8\" class=\"impl\"><a href=\"#impl-ZeroMapKV%3C'a%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; ZeroMapKV&lt;'a&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Container\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Container\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Container</a> = ZeroVec&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>The container that can be used with this type: [<code>ZeroVec</code>] or [<code>VarZeroVec</code>].</div></details><section id=\"associatedtype.Slice\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Slice\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Slice</a> = ZeroSlice&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section><details class=\"toggle\" open><summary><section id=\"associatedtype.GetType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.GetType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">GetType</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as AsULE&gt;::ULE</h4></section></summary><div class='docblock'>The type produced by <code>Container::get()</code> <a>Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OwnedType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OwnedType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">OwnedType</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The type produced by <code>Container::replace()</code> and <code>Container::remove()</code>,\nalso used during deserialization. If <code>Self</code> is human readable serialized,\ndeserializing to <code>Self::OwnedType</code> should produce the same value once\npassed through <code>Self::owned_as_self()</code> <a>Read more</a></div></details></div></details>","ZeroMapKV<'a>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsULE-for-u8\" class=\"impl\"><a href=\"#impl-AsULE-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AsULE for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ULE\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ULE\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ULE</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The ULE type corresponding to <code>Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_unaligned\" class=\"method trait-impl\"><a href=\"#method.to_unaligned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_unaligned</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as AsULE&gt;::ULE</h4></section></summary><div class='docblock'>Converts from <code>Self</code> to <code>Self::ULE</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_unaligned\" class=\"method trait-impl\"><a href=\"#method.from_unaligned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_unaligned</a>(unaligned: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as AsULE&gt;::ULE) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Converts from <code>Self::ULE</code> to <code>Self</code>. <a>Read more</a></div></details></div></details>","AsULE","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TrieValue-for-u8\" class=\"impl\"><a href=\"#impl-TrieValue-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TrieValue for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.TryFromU32Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.TryFromU32Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">TryFromU32Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>Last-resort fallback value to return if we cannot read data from the trie. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_u32\" class=\"method trait-impl\"><a href=\"#method.try_from_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_from_u32</a>(i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as TrieValue&gt;::TryFromU32Error&gt;</h4></section></summary><div class='docblock'>A parsing function that is primarily motivated by deserialization contexts.\nWhen the serialization type width is smaller than 32 bits, then it is expected\nthat the call site will widen the value to a <code>u32</code> first.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method trait-impl\"><a href=\"#method.to_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_u32</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>A method for converting back to a <code>u32</code> that can roundtrip through\n[<code>Self::try_from_u32()</code>]. The default implementation of this trait\nmethod panics in debug mode and returns 0 in release mode. <a>Read more</a></div></details></div></details>","TrieValue","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Value-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing-core/0.1.22/src/tracing_core/field.rs.html#508-517\">source</a><a href=\"#impl-Value-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/trait.Value.html\" title=\"trait tracing_core::field::Value\">Value</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/tracing-core/0.1.22/src/tracing_core/field.rs.html#508-517\">source</a><a href=\"#method.record\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/trait.Value.html#tymethod.record\" class=\"fn\">record</a>(&amp;self, key: &amp;<a class=\"struct\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/struct.Field.html\" title=\"struct tracing_core::field::Field\">Field</a>, visitor: &amp;mut dyn <a class=\"trait\" href=\"https://docs.rs/tracing-core/0.1.22/tracing_core/field/trait.Visit.html\" title=\"trait tracing_core::field::Visit\">Visit</a>)</h4></section></summary><div class='docblock'>Visits this value with the given <code>Visitor</code>.</div></details></div></details>","Value","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDataFlags%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/h2/0.3.16/src/h2/frame/data.rs.html#214\">source</a><a href=\"#impl-From%3CDataFlags%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;DataFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/h2/0.3.16/src/h2/frame/data.rs.html#215\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: DataFlags) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<DataFlags>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CHeadersFlag%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/h2/0.3.16/src/h2/frame/headers.rs.html#764\">source</a><a href=\"#impl-From%3CHeadersFlag%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;HeadersFlag&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/h2/0.3.16/src/h2/frame/headers.rs.html#765\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: HeadersFlag) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<HeadersFlag>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSettingsFlags%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/h2/0.3.16/src/h2/frame/settings.rs.html#379\">source</a><a href=\"#impl-From%3CSettingsFlags%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SettingsFlags&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/h2/0.3.16/src/h2/frame/settings.rs.html#380\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: SettingsFlags) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SettingsFlags>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPushPromiseFlag%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/h2/0.3.16/src/h2/frame/headers.rs.html#812\">source</a><a href=\"#impl-From%3CPushPromiseFlag%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PushPromiseFlag&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/h2/0.3.16/src/h2/frame/headers.rs.html#813\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: PushPromiseFlag) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PushPromiseFlag>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WriteHex-for-u8\" class=\"impl\"><a href=\"#impl-WriteHex-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl WriteHex for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_hex\" class=\"method trait-impl\"><a href=\"#method.write_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_hex</a>&lt;W&gt;(&amp;self, writer: W) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Write.html\" title=\"trait core::fmt::Write\">Write</a>,</div></h4></section></summary><div class='docblock'>Write the value as hex.</div></details></div></details>","WriteHex","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bits-for-u8\" class=\"impl\"><a href=\"#impl-Bits-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Bits for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.EMPTY\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.EMPTY\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">EMPTY</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> = 0u8</h4></section></summary><div class='docblock'>A value with all bits unset.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ALL\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.ALL\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">ALL</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> = 255u8</h4></section></summary><div class='docblock'>A value with all bits set.</div></details></div></details>","Bits","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ParseHex-for-u8\" class=\"impl\"><a href=\"#impl-ParseHex-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ParseHex for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_hex\" class=\"method trait-impl\"><a href=\"#method.parse_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">parse_hex</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, ParseError&gt;</h4></section></summary><div class='docblock'>Parse the value from hex.</div></details></div></details>","ParseHex","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CValue%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_json/1.0.94/src/serde_json/value/partial_eq.rs.html#90-95\">source</a><a href=\"#impl-PartialEq%3CValue%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.94/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_json/1.0.94/src/serde_json/value/partial_eq.rs.html#90-95\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.94/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<Value>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Enum%3CT%3E-for-u8\" class=\"impl\"><a href=\"#impl-Enum%3CT%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Enum&lt;T&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Array\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Array\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Array</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; 256]</a></h4></section></summary><div class='docblock'>Representation of an enum map for type <code>V</code>, usually an array.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.POSSIBLE_VALUES\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.POSSIBLE_VALUES\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">POSSIBLE_VALUES</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> = 256usize</h4></section></summary><div class='docblock'>Number of possible states the type can have.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice\" class=\"method trait-impl\"><a href=\"#method.slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">slice</a>(array: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; 256]</a>) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Gets a slice from an array type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_mut\" class=\"method trait-impl\"><a href=\"#method.slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">slice_mut</a>(array: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; 256]</a>) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Gets a mutable slice from an array type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_usize\" class=\"method trait-impl\"><a href=\"#method.from_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_usize</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Takes an usize, and returns an element matching <code>to_usize</code> function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_usize</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns an unique identifier for a value within range of <code>0..POSSIBLE_VALUES</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_function\" class=\"method trait-impl\"><a href=\"#method.from_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_function</a>&lt;F&gt;(f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; 256]</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; T,</div></h4></section></summary><div class='docblock'>Creates an array using a function called for each argument.</div></details></div></details>","Enum<T>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitStore-for-u8\" class=\"impl\"><a href=\"#impl-BitStore-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl BitStore for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Access\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Access\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Access</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/cell/struct.Cell.html\" title=\"struct core::cell::Cell\">Cell</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>The unsigned integers will only be <code>BitStore</code> type parameters\nfor handles to unaliased memory, following the normal Rust\nreference rules.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Mem\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Mem\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Mem</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The element type used in the memory region underlying a <code>BitSlice</code>. It\nis <em>always</em> one of the unsigned integer fundamentals.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Alias\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Alias\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Alias</a> = BitSafeU8</h4></section></summary><div class='docblock'>A sibling <code>BitStore</code> implementor that is known to be alias-safe. It is\nused when a <code>BitSlice</code> introduces multiple handles that view the same\nmemory location, and at least one of them has write capabilities to it.\nIt must have the same underlying memory type, and can only change access\npatterns or public-facing usage.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Unalias\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Unalias\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Unalias</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The inverse of <code>::Alias</code>. It is used when a <code>BitSlice</code> removes the\nconditions that required a <code>T -&gt; T::Alias</code> transition.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ZERO\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.ZERO\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">ZERO</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> = 0u8</h4></section></summary><div class='docblock'>The zero constant.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method trait-impl\"><a href=\"#method.new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new</a>(value: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as BitStore&gt;::Mem) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Wraps a raw memory value as a <code>BitStore</code> type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.load_value\" class=\"method trait-impl\"><a href=\"#method.load_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">load_value</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as BitStore&gt;::Mem</h4></section></summary><div class='docblock'>Loads a value out of the memory system according to the <code>::Access</code>\nrules. This may be called when the value is aliased by a write-capable\nreference.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.store_value\" class=\"method trait-impl\"><a href=\"#method.store_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">store_value</a>(&amp;mut self, value: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as BitStore&gt;::Mem)</h4></section></summary><div class='docblock'>Stores a value into the memory system. This is only called when there\nare no other handles to the value, and it may bypass <code>::Access</code>\nconstraints.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ALIGNED_TO_SIZE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.ALIGNED_TO_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">ALIGNED_TO_SIZE</a>: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">1</a>] = _</h4></section></summary><div class='docblock'>All implementors are required to have their alignment match their size. <a>Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ALIAS_WIDTH\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.ALIAS_WIDTH\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">ALIAS_WIDTH</a>: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">1</a>] = _</h4></section></summary><div class='docblock'>All implementors are required to have <code>Self</code> and <code>Self::Alias</code> be equal\nin representation. This is true by fiat for all types except the\nunsigned integers. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_bit\" class=\"method trait-impl\"><a href=\"#method.get_bit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_bit</a>&lt;O&gt;(&amp;self, index: BitIdx&lt;Self::Mem&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    O: BitOrder,</div></h4></section></summary><div class='docblock'>Reads a single bit out of the memory system according to the <code>::Access</code>\nrules. This is lifted from <a href=\"crate::access::BitAccess\"><code>BitAccess</code></a> so that it can be used\nelsewhere without additional casts. <a>Read more</a></div></details></div></details>","BitStore","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitRegister-for-u8\" class=\"impl\"><a href=\"#impl-BitRegister-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl BitRegister for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ALL\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.ALL\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">ALL</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> = 255u8</h4></section></summary><div class='docblock'>The literal <code>!0</code>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.INDX\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.INDX\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">INDX</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> = _</h4></section></summary><div class='docblock'>The number of bits required to store an index in the range <code>0 .. BITS</code>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MASK\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MASK\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MASK</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> = _</h4></section></summary><div class='docblock'>A mask over all bits that can be used as an index within the element.\nThis is the value with the least significant <code>INDX</code>-many bits set high.</div></details></div></details>","BitRegister","network::HandlerWorkType"],["<section id=\"impl-AtMost32-for-u8\" class=\"impl\"><a href=\"#impl-AtMost32-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AtMost32 for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","AtMost32","network::HandlerWorkType"],["<section id=\"impl-Is8-for-u8\" class=\"impl\"><a href=\"#impl-Is8-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Is8 for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","Is8","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Unsigned-for-u8\" class=\"impl\"><a href=\"#impl-Unsigned-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Unsigned for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_power_of_two\" class=\"method trait-impl\"><a href=\"#method.is_power_of_two\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_power_of_two\" class=\"method trait-impl\"><a href=\"#method.next_power_of_two\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">next_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Returns the smallest power of two greater than or equal to <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_power_of_two\" class=\"method trait-impl\"><a href=\"#method.checked_next_power_of_two\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">checked_next_power_of_two</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Returns the smallest power of two greater than or equal to <code>n</code>. If the\nnext power of two is greater than the type’s maximum value, <code>None</code> is\nreturned, otherwise the power of two is wrapped in <code>Some</code>.</div></details></div></details>","Unsigned","network::HandlerWorkType"],["<section id=\"impl-AtMost16-for-u8\" class=\"impl\"><a href=\"#impl-AtMost16-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AtMost16 for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","AtMost16","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Fundamental-for-u8\" class=\"impl\"><a href=\"#impl-Fundamental-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Fundamental for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bool\" class=\"method trait-impl\"><a href=\"#method.as_bool\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_bool</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests <code>self != 0</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_char\" class=\"method trait-impl\"><a href=\"#method.as_char\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_char</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>&gt;</h4></section></summary><div class='docblock'>Represents <code>self</code> as a Unicode Scalar Value, if possible.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i8\" class=\"method trait-impl\"><a href=\"#method.as_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i8</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Performs <code>self as i8</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i16\" class=\"method trait-impl\"><a href=\"#method.as_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i16</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Performs <code>self as i16</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i32\" class=\"method trait-impl\"><a href=\"#method.as_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i32</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Performs <code>self as i32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i64\" class=\"method trait-impl\"><a href=\"#method.as_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i64</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Performs <code>self as i64</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i128\" class=\"method trait-impl\"><a href=\"#method.as_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i128</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Performs <code>self as i128</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_isize\" class=\"method trait-impl\"><a href=\"#method.as_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_isize</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Performs <code>self as isize</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u8\" class=\"method trait-impl\"><a href=\"#method.as_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u8</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs <code>self as u8</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u16\" class=\"method trait-impl\"><a href=\"#method.as_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u16</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Performs <code>self as u16</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u32\" class=\"method trait-impl\"><a href=\"#method.as_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u32</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs <code>self as u32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u64\" class=\"method trait-impl\"><a href=\"#method.as_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u64</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs <code>self as u64</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u128\" class=\"method trait-impl\"><a href=\"#method.as_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u128</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Performs <code>self as u128</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_usize\" class=\"method trait-impl\"><a href=\"#method.as_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_usize</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Performs <code>self as usize</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_f32\" class=\"method trait-impl\"><a href=\"#method.as_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_f32</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Performs <code>self as f32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_f64\" class=\"method trait-impl\"><a href=\"#method.as_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_f64</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Performs <code>self as f64</code>.</div></details></div></details>","Fundamental","network::HandlerWorkType"],["<section id=\"impl-AtLeast8-for-u8\" class=\"impl\"><a href=\"#impl-AtLeast8-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AtLeast8 for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","AtLeast8","network::HandlerWorkType"],["<section id=\"impl-AtMost128-for-u8\" class=\"impl\"><a href=\"#impl-AtMost128-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AtMost128 for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","AtMost128","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Numeric-for-u8\" class=\"impl\"><a href=\"#impl-Numeric-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Numeric for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">1</a>]</h4></section></summary><div class='docblock'>The <code>[u8; N]</code> byte array that stores values of <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be_bytes\" class=\"method trait-impl\"><a href=\"#method.to_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_be_bytes</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as Numeric&gt;::Bytes</h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in\nbig-endian (network) byte order.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le_bytes\" class=\"method trait-impl\"><a href=\"#method.to_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_le_bytes</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as Numeric&gt;::Bytes</h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in\nlittle-endian byte order.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ne_bytes\" class=\"method trait-impl\"><a href=\"#method.to_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_ne_bytes</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as Numeric&gt;::Bytes</h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in\nnative byte order.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be_bytes\" class=\"method trait-impl\"><a href=\"#method.from_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_be_bytes</a>(bytes: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as Numeric&gt;::Bytes) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Create a numeric value from its representation as a byte array in big\nendian.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le_bytes\" class=\"method trait-impl\"><a href=\"#method.from_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_le_bytes</a>(bytes: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as Numeric&gt;::Bytes) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Create a numeric value from its representation as a byte array in little\nendian.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ne_bytes\" class=\"method trait-impl\"><a href=\"#method.from_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_ne_bytes</a>(bytes: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> as Numeric&gt;::Bytes) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Create a numeric value from its memory representation as a byte array in\nnative endianness.</div></details></div></details>","Numeric","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Integral-for-u8\" class=\"impl\"><a href=\"#impl-Integral-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Integral for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ZERO\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.ZERO\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">ZERO</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> = 0u8</h4></section></summary><div class='docblock'>The type’s zero value.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ONE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.ONE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">ONE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> = 1u8</h4></section></summary><div class='docblock'>The type’s step value.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MIN\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MIN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> = 0u8</h4></section></summary><div class='docblock'>The type’s minimum value. This is zero for unsigned integers.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> = 255u8</h4></section></summary><div class='docblock'>The type’s maximum value.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.BITS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a> = 8u32</h4></section></summary><div class='docblock'>The size of this type in bits.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">min_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Returns the smallest value that can be represented by this integer type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Returns the largest value that can be represented by this integer type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_radix\" class=\"method trait-impl\"><a href=\"#method.from_str_radix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_str_radix</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, radix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section></summary><div class='docblock'>Converts a string slice in a given base to an integer. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method trait-impl\"><a href=\"#method.count_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of ones in the binary representation of <code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_zeros\" class=\"method trait-impl\"><a href=\"#method.count_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of zeros in the binary representation of <code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method trait-impl\"><a href=\"#method.leading_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of leading zeros in the binary representation of\n<code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method trait-impl\"><a href=\"#method.trailing_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of trailing zeros in the binary representation of\n<code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_ones\" class=\"method trait-impl\"><a href=\"#method.leading_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">leading_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of leading ones in the binary representation of\n<code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_ones\" class=\"method trait-impl\"><a href=\"#method.trailing_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">trailing_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of trailing ones in the binary representation of\n<code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_left\" class=\"method trait-impl\"><a href=\"#method.rotate_left\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rotate_left</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, wrapping the\ntruncated bits to the end of the resulting integer. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_right\" class=\"method trait-impl\"><a href=\"#method.rotate_right\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rotate_right</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, wrapping the\ntruncated bits to the beginning of the resulting integer. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_bytes\" class=\"method trait-impl\"><a href=\"#method.swap_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">swap_bytes</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Reverses the byte order of the integer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse_bits\" class=\"method trait-impl\"><a href=\"#method.reverse_bits\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">reverse_bits</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Reverses the bit pattern of the integer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be\" class=\"method trait-impl\"><a href=\"#method.from_be\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_be</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Converts an integer from big endian to the target’s endianness. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le\" class=\"method trait-impl\"><a href=\"#method.from_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_le</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Converts an integer frm little endian to the target’s endianness. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be\" class=\"method trait-impl\"><a href=\"#method.to_be\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_be</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Converts <code>self</code> to big endian from the target’s endianness. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_le</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Converts <code>self</code> to little endian from the target’s endianness. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method trait-impl\"><a href=\"#method.checked_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">checked_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Checked integer addition. Computes <code>self + rhs</code>, returning <code>None</code> if\noverflow occurred.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method trait-impl\"><a href=\"#method.checked_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">checked_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Checked integer subtraction. Computes <code>self - rhs</code>, returning <code>None</code> if\noverflow occurred.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method trait-impl\"><a href=\"#method.checked_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">checked_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Checked integer multiplication. Computes <code>self * rhs</code>, returning <code>None</code>\nif overflow occurred.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div\" class=\"method trait-impl\"><a href=\"#method.checked_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">checked_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Checked integer division. Computes <code>self / rhs</code>, returning <code>None</code> if\n<code>rhs == 0</code> or the division results in overflow.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_euclid\" class=\"method trait-impl\"><a href=\"#method.checked_div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">checked_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Checked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, returning\n<code>None</code> if <code>rhs == 0</code> or the division results in overflow.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem\" class=\"method trait-impl\"><a href=\"#method.checked_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">checked_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Checked integer remainder. Computes <code>self % rhs</code>, returning <code>None</code> if\n<code>rhs == 0</code> or the division results in overflow.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem_euclid\" class=\"method trait-impl\"><a href=\"#method.checked_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">checked_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Checked Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>, returning\n<code>None</code> if <code>rhs == 0</code> or the division results in overflow.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method trait-impl\"><a href=\"#method.checked_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">checked_neg</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Checked negation. Computes <code>-self</code>, returning <code>None</code> if <code>self == MIN</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shl\" class=\"method trait-impl\"><a href=\"#method.checked_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">checked_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> if <code>rhs</code> is\nlarger than or equal to the number of bits in <code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shr\" class=\"method trait-impl\"><a href=\"#method.checked_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">checked_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> if <code>rhs</code>\nis larger than or equal to the number of bits in <code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method trait-impl\"><a href=\"#method.checked_pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">checked_pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Checked exponentiation. Computes <code>self.pow(exp)</code>, returning <code>None</code> if\noverflow occurred.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">saturating_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Saturating integer addition. Computes <code>self + rhs</code>, saturating at the\nnumeric bounds instead of overflowing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">saturating_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Saturating integer subtraction. Computes <code>self - rhs</code>, saturating at the\nnumeric bounds instead of overflowing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method trait-impl\"><a href=\"#method.saturating_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">saturating_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Saturating integer multiplication. Computes <code>self * rhs</code>, saturating at\nthe numeric bounds instead of overflowing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method trait-impl\"><a href=\"#method.saturating_pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">saturating_pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Saturating integer exponentiation. Computes <code>self.pow(exp)</code>, saturating\nat the numeric bounds instead of overflowing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add\" class=\"method trait-impl\"><a href=\"#method.wrapping_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrapping_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Wrapping (modular) addition. Computes <code>self + rhs</code>, wrapping around at\nthe boundary of the type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub\" class=\"method trait-impl\"><a href=\"#method.wrapping_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrapping_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Wrapping (modular) subtraction. Computes <code>self - rhs</code>, wrapping around\nat the boundary of the type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul\" class=\"method trait-impl\"><a href=\"#method.wrapping_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrapping_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Wrapping (modular) multiplication. Computes <code>self * rhs</code>, wrapping\naround at the boundary of the type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_div\" class=\"method trait-impl\"><a href=\"#method.wrapping_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrapping_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Wrapping (modular) division. Computes <code>self / rhs</code>, wrapping around at\nthe boundary of the type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_div_euclid\" class=\"method trait-impl\"><a href=\"#method.wrapping_div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrapping_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Wrapping Euclidean division. Computes <code>self.div_euclid(rhs)</code>, wrapping\naround at the boundary of the type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_rem\" class=\"method trait-impl\"><a href=\"#method.wrapping_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrapping_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Wrapping (modular) remainder. Computes <code>self % rhs</code>, wrapping around at\nthe boundary of the type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_rem_euclid\" class=\"method trait-impl\"><a href=\"#method.wrapping_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrapping_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Wrapping Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>, wrapping\naround at the boundary of the type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method trait-impl\"><a href=\"#method.wrapping_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrapping_neg</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Wrapping (modular) negation. Computes <code>-self</code>, wrapping around at the\nboundary of the type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shl\" class=\"method trait-impl\"><a href=\"#method.wrapping_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrapping_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, where <code>mask</code>\nremoves any high-order bits of <code>rhs</code> that would cause the shift to\nexceed the bit-width of the type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shr\" class=\"method trait-impl\"><a href=\"#method.wrapping_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrapping_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, where <code>mask</code>\nremoves any high-order bits of <code>rhs</code> that would cause the shift to\nexceed the bit-width of the type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_pow\" class=\"method trait-impl\"><a href=\"#method.wrapping_pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wrapping_pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Wrapping (modular) exponentiation. Computes <code>self.pow(exp)</code>, wrapping\naround at the boundary of the type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add\" class=\"method trait-impl\"><a href=\"#method.overflowing_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">overflowing_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Calculates <code>self + rhs</code> <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub\" class=\"method trait-impl\"><a href=\"#method.overflowing_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">overflowing_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Calculates <code>self - rhs</code> <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul\" class=\"method trait-impl\"><a href=\"#method.overflowing_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">overflowing_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Calculates the multiplication of <code>self</code> and <code>rhs</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_div\" class=\"method trait-impl\"><a href=\"#method.overflowing_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">overflowing_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Calculates the divisor when <code>self</code> is divided by <code>rhs</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_div_euclid\" class=\"method trait-impl\"><a href=\"#method.overflowing_div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">overflowing_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Calculates the quotient of Euclidean division <code>self.div_euclid(rhs)</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_rem\" class=\"method trait-impl\"><a href=\"#method.overflowing_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">overflowing_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Calculates the remainder when <code>self</code> is divided by <code>rhs</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_rem_euclid\" class=\"method trait-impl\"><a href=\"#method.overflowing_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">overflowing_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Overflowing Euclidean remainder. Calculates <code>self.rem_euclid(rhs)</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_neg\" class=\"method trait-impl\"><a href=\"#method.overflowing_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">overflowing_neg</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Negates self, overflowing if this is equal to the minimum value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_shl\" class=\"method trait-impl\"><a href=\"#method.overflowing_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">overflowing_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Shifts self left by <code>rhs</code> bits. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_shr\" class=\"method trait-impl\"><a href=\"#method.overflowing_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">overflowing_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Shifts self right by <code>rhs</code> bits. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_pow\" class=\"method trait-impl\"><a href=\"#method.overflowing_pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">overflowing_pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Raises self to the power of <code>exp</code>, using exponentiation by squaring. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Raises self to the power of <code>exp</code>, using exponentiation by squaring.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_euclid\" class=\"method trait-impl\"><a href=\"#method.div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Calculates the quotient of Euclidean division of self by rhs. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_euclid\" class=\"method trait-impl\"><a href=\"#method.rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Calculates the least nonnegative remainder of <code>self (mod rhs)</code>. <a>Read more</a></div></details></div></details>","Integral","network::HandlerWorkType"],["<section id=\"impl-AtMost64-for-u8\" class=\"impl\"><a href=\"#impl-AtMost64-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AtMost64 for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","AtMost64","network::HandlerWorkType"],["<section id=\"impl-AtMost8-for-u8\" class=\"impl\"><a href=\"#impl-AtMost8-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AtMost8 for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","AtMost8","network::HandlerWorkType"],["<section id=\"impl-BitOps-for-u8\" class=\"impl\"><a href=\"#impl-BitOps-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl BitOps for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","BitOps","network::HandlerWorkType"],["<section id=\"impl-NumericOps-for-u8\" class=\"impl\"><a href=\"#impl-NumericOps-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl NumericOps for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","NumericOps","network::HandlerWorkType"],["<section id=\"impl-Pod-for-u8\" class=\"impl\"><a href=\"#impl-Pod-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Pod for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section>","Pod","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StateID-for-u8\" class=\"impl\"><a href=\"#impl-StateID-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl StateID for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_usize\" class=\"method trait-impl\"><a href=\"#method.from_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_usize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Convert from a <code>usize</code> to this implementation’s representation. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_usize</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Convert this implementation’s representation to a <code>usize</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_id\" class=\"method trait-impl\"><a href=\"#method.max_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_id</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the maximum state identifier supported by this representation. <a>Read more</a></div></details></div></details>","StateID","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVersion%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/pkcs8/0.7.6/src/pkcs8/version.rs.html#30\">source</a><a href=\"#impl-From%3CVersion%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://docs.rs/pkcs8/0.7.6/pkcs8/version/enum.Version.html\" title=\"enum pkcs8::version::Version\">Version</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/pkcs8/0.7.6/src/pkcs8/version.rs.html#31\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(version: <a class=\"enum\" href=\"https://docs.rs/pkcs8/0.7.6/pkcs8/version/enum.Version.html\" title=\"enum pkcs8::version::Version\">Version</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Version>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CAny%3C'_%3E%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/der/0.4.5/src/der/asn1/integer.rs.html#93\">source</a><a href=\"#impl-TryFrom%3CAny%3C'_%3E%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/der/0.4.5/der/asn1/any/struct.Any.html\" title=\"struct der::asn1::any::Any\">Any</a>&lt;'_&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://docs.rs/der/0.4.5/der/error/struct.Error.html\" title=\"struct der::error::Error\">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/der/0.4.5/src/der/asn1/integer.rs.html#93\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(any: <a class=\"struct\" href=\"https://docs.rs/der/0.4.5/der/asn1/any/struct.Any.html\" title=\"struct der::asn1::any::Any\">Any</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"struct\" href=\"https://docs.rs/der/0.4.5/der/error/struct.Error.html\" title=\"struct der::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<Any<'_>>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/der/0.4.5/src/der/asn1/integer.rs.html#93\">source</a><a href=\"#impl-Encodable-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/der/0.4.5/der/encodable/trait.Encodable.html\" title=\"trait der::encodable::Encodable\">Encodable</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/der/0.4.5/src/der/asn1/integer.rs.html#93\">source</a><a href=\"#method.encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/der/0.4.5/der/encodable/trait.Encodable.html#tymethod.encoded_len\" class=\"fn\">encoded_len</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://docs.rs/der/0.4.5/der/length/struct.Length.html\" title=\"struct der::length::Length\">Length</a>, <a class=\"struct\" href=\"https://docs.rs/der/0.4.5/der/error/struct.Error.html\" title=\"struct der::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Compute the length of this value in bytes when encoded as ASN.1 DER.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/der/0.4.5/src/der/asn1/integer.rs.html#93\">source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/der/0.4.5/der/encodable/trait.Encodable.html#tymethod.encode\" class=\"fn\">encode</a>(&amp;self, encoder: &amp;mut <a class=\"struct\" href=\"https://docs.rs/der/0.4.5/der/encoder/struct.Encoder.html\" title=\"struct der::encoder::Encoder\">Encoder</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/der/0.4.5/der/error/struct.Error.html\" title=\"struct der::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Encode this value as ASN.1 DER using the provided <a href=\"https://docs.rs/der/0.4.5/der/encoder/struct.Encoder.html\" title=\"struct der::encoder::Encoder\"><code>Encoder</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/der/0.4.5/src/der/encodable.rs.html#25\">source</a><a href=\"#method.encode_to_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/der/0.4.5/der/encodable/trait.Encodable.html#method.encode_to_slice\" class=\"fn\">encode_to_slice</a>&lt;'a&gt;(&amp;self, buf: &amp;'a mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], <a class=\"struct\" href=\"https://docs.rs/der/0.4.5/der/error/struct.Error.html\" title=\"struct der::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Encode this value to the provided byte slice, returning a sub-slice\ncontaining the encoded message.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to_vec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/der/0.4.5/src/der/encodable.rs.html#35\">source</a><a href=\"#method.encode_to_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/der/0.4.5/der/encodable/trait.Encodable.html#method.encode_to_vec\" class=\"fn\">encode_to_vec</a>(&amp;self, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://docs.rs/der/0.4.5/der/length/struct.Length.html\" title=\"struct der::length::Length\">Length</a>, <a class=\"struct\" href=\"https://docs.rs/der/0.4.5/der/error/struct.Error.html\" title=\"struct der::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Encode this message as ASN.1 DER, appending it to the provided\nbyte vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_vec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/der/0.4.5/src/der/encodable.rs.html#58\">source</a><a href=\"#method.to_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/der/0.4.5/der/encodable/trait.Encodable.html#method.to_vec\" class=\"fn\">to_vec</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/der/0.4.5/der/error/struct.Error.html\" title=\"struct der::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Serialize this message as a byte vector.</div></details></div></details>","Encodable","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tagged-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/der/0.4.5/src/der/asn1/integer.rs.html#93\">source</a><a href=\"#impl-Tagged-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/der/0.4.5/der/tag/trait.Tagged.html\" title=\"trait der::tag::Tagged\">Tagged</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TAG\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/der/0.4.5/src/der/asn1/integer.rs.html#93\">source</a><a href=\"#associatedconstant.TAG\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/der/0.4.5/der/tag/trait.Tagged.html#associatedconstant.TAG\" class=\"constant\">TAG</a>: <a class=\"enum\" href=\"https://docs.rs/der/0.4.5/der/tag/enum.Tag.html\" title=\"enum der::tag::Tag\">Tag</a> = Tag::Integer</h4></section></summary><div class='docblock'>ASN.1 tag</div></details></div></details>","Tagged","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26Tag%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/der/0.4.5/src/der/tag.rs.html#186\">source</a><a href=\"#impl-From%3C%26Tag%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"enum\" href=\"https://docs.rs/der/0.4.5/der/tag/enum.Tag.html\" title=\"enum der::tag::Tag\">Tag</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/der/0.4.5/src/der/tag.rs.html#187\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tag: &amp;<a class=\"enum\" href=\"https://docs.rs/der/0.4.5/der/tag/enum.Tag.html\" title=\"enum der::tag::Tag\">Tag</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&Tag>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTagNumber%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/der/0.4.5/src/der/tag/number.rs.html#71\">source</a><a href=\"#impl-From%3CTagNumber%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/der/0.4.5/der/tag/number/struct.TagNumber.html\" title=\"struct der::tag::number::TagNumber\">TagNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/der/0.4.5/src/der/tag/number.rs.html#72\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tag_number: <a class=\"struct\" href=\"https://docs.rs/der/0.4.5/der/tag/number/struct.TagNumber.html\" title=\"struct der::tag::number::TagNumber\">TagNumber</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<TagNumber>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTag%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/der/0.4.5/src/der/tag.rs.html#180\">source</a><a href=\"#impl-From%3CTag%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://docs.rs/der/0.4.5/der/tag/enum.Tag.html\" title=\"enum der::tag::Tag\">Tag</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/der/0.4.5/src/der/tag.rs.html#181\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tag: <a class=\"enum\" href=\"https://docs.rs/der/0.4.5/der/tag/enum.Tag.html\" title=\"enum der::tag::Tag\">Tag</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Tag>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRootArcs%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/const-oid/0.6.2/src/const_oid/arcs.rs.html#128\">source</a><a href=\"#impl-From%3CRootArcs%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;RootArcs&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/const-oid/0.6.2/src/const_oid/arcs.rs.html#129\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(root_arcs: RootArcs) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RootArcs>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SeekNum-for-u8\" class=\"impl\"><a href=\"#impl-SeekNum-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl SeekNum for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_block_byte\" class=\"method trait-impl\"><a href=\"#method.from_block_byte\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_block_byte</a>&lt;T&gt;(block: T, byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, bs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, OverflowError&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryInto.html\" title=\"trait core::convert::TryInto\">TryInto</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</div></h4></section></summary><div class='docblock'>Try to get position for block number <code>block</code>, byte position inside\nblock <code>byte</code>, and block size <code>bs</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_block_byte\" class=\"method trait-impl\"><a href=\"#method.to_block_byte\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_block_byte</a>&lt;T&gt;(self, bs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>), OverflowError&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</div></h4></section></summary><div class='docblock'>Try to get block number and bytes position for given block size <code>bs</code>.</div></details></div></details>","SeekNum","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRootArcs%3E-for-u8\" class=\"impl\"><a href=\"#impl-From%3CRootArcs%3E-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;RootArcs&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(root_arcs: RootArcs) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RootArcs>","network::HandlerWorkType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#492\">source</a><a href=\"#impl-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.43.0\">1.43.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> = 0u8</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented by this integer type.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u8::MIN, <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.43.0\">1.43.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a> = 255u8</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented by this integer type\n(2<sup>8</sup> − 1).</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u8::MAX, <span class=\"number\">255</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0\">1.53.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a> = 8u32</h4></section></summary><div class=\"docblock\"><p>The size of this integer type in bits.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u8::BITS, <span class=\"number\">8</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_radix\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.from_str_radix\" class=\"fn\">from_str_radix</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, radix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a string slice in a given base to an integer.</p>\n<p>The string is expected to be an optional <code>+</code> sign\nfollowed by digits.\nLeading and trailing whitespace represent an error.\nDigits are a subset of these characters, depending on <code>radix</code>:</p>\n<ul>\n<li><code>0-9</code></li>\n<li><code>a-z</code></li>\n<li><code>A-Z</code></li>\n</ul>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>This function panics if <code>radix</code> is not in the range from 2 to 36.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u8::from_str_radix(<span class=\"string\">\"A\"</span>, <span class=\"number\">16</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"number\">10</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0b01001100u8</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.count_ones(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.count_zeros\" class=\"fn\">count_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of zeros in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u8::MAX.count_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading zeros in the binary representation of <code>self</code>.</p>\n<p>Depending on what you’re doing with the value, you might also be interested in the\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.ilog2\" title=\"method u8::ilog2\"><code>ilog2</code></a> function which returns a consistent number, even if the type widens.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = u8::MAX &gt;&gt; <span class=\"number\">2</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.leading_zeros(), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing zeros in the binary representation\nof <code>self</code>.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0b0101000u8</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.trailing_zeros(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0, const since 1.46.0\">1.46.0 (const: 1.46.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.leading_ones\" class=\"fn\">leading_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = !(u8::MAX &gt;&gt; <span class=\"number\">2</span>);\n\n<span class=\"macro\">assert_eq!</span>(n.leading_ones(), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0, const since 1.46.0\">1.46.0 (const: 1.46.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.trailing_ones\" class=\"fn\">trailing_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing ones in the binary representation\nof <code>self</code>.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0b1010111u8</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.trailing_ones(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_left\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.rotate_left\" class=\"fn\">rotate_left</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Shifts the bits to the left by a specified amount, <code>n</code>,\nwrapping the truncated bits to the end of the resulting integer.</p>\n<p>Please note this isn’t the same operation as the <code>&lt;&lt;</code> shifting operator!</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x82u8</span>;\n<span class=\"kw\">let </span>m = <span class=\"number\">0xa</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.rotate_left(<span class=\"number\">2</span>), m);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_right\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.rotate_right\" class=\"fn\">rotate_right</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Shifts the bits to the right by a specified amount, <code>n</code>,\nwrapping the truncated bits to the beginning of the resulting\ninteger.</p>\n<p>Please note this isn’t the same operation as the <code>&gt;&gt;</code> shifting operator!</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0xau8</span>;\n<span class=\"kw\">let </span>m = <span class=\"number\">0x82</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.rotate_right(<span class=\"number\">2</span>), m);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.swap_bytes\" class=\"fn\">swap_bytes</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Reverses the byte order of the integer.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x12u8</span>;\n<span class=\"kw\">let </span>m = n.swap_bytes();\n\n<span class=\"macro\">assert_eq!</span>(m, <span class=\"number\">0x12</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse_bits\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.37.0, const since 1.37.0\">1.37.0 (const: 1.37.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.reverse_bits\" class=\"fn\">reverse_bits</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Reverses the order of bits in the integer. The least significant bit becomes the most significant bit,\nsecond least-significant bit becomes second most-significant bit, etc.</p>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x12u8</span>;\n<span class=\"kw\">let </span>m = n.reverse_bits();\n\n<span class=\"macro\">assert_eq!</span>(m, <span class=\"number\">0x48</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0</span>, <span class=\"number\">0u8</span>.reverse_bits());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.from_be\" class=\"fn\">from_be</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Converts an integer from big endian to the target’s endianness.</p>\n<p>On big endian this is a no-op. On little endian the bytes are\nswapped.</p>\n<h5 id=\"examples-14\"><a class=\"doc-anchor\" href=\"#examples-14\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1Au8</span>;\n\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(u8::from_be(n), n)\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(u8::from_be(n), n.swap_bytes())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.from_le\" class=\"fn\">from_le</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Converts an integer from little endian to the target’s endianness.</p>\n<p>On little endian this is a no-op. On big endian the bytes are\nswapped.</p>\n<h5 id=\"examples-15\"><a class=\"doc-anchor\" href=\"#examples-15\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1Au8</span>;\n\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"little\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(u8::from_le(n), n)\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(u8::from_le(n), n.swap_bytes())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.to_be\" class=\"fn\">to_be</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Converts <code>self</code> to big endian from the target’s endianness.</p>\n<p>On big endian this is a no-op. On little endian the bytes are\nswapped.</p>\n<h5 id=\"examples-16\"><a class=\"doc-anchor\" href=\"#examples-16\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1Au8</span>;\n\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(n.to_be(), n)\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(n.to_be(), n.swap_bytes())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.to_le\" class=\"fn\">to_le</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Converts <code>self</code> to little endian from the target’s endianness.</p>\n<p>On little endian this is a no-op. On big endian the bytes are\nswapped.</p>\n<h5 id=\"examples-17\"><a class=\"doc-anchor\" href=\"#examples-17\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1Au8</span>;\n\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"little\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(n.to_le(), n)\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(n.to_le(), n.swap_bytes())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer addition. Computes <code>self + rhs</code>, returning <code>None</code>\nif overflow occurred.</p>\n<h5 id=\"examples-18\"><a class=\"doc-anchor\" href=\"#examples-18\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>((u8::MAX - <span class=\"number\">2</span>).checked_add(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(u8::MAX - <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>((u8::MAX - <span class=\"number\">2</span>).checked_add(<span class=\"number\">3</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/118260\" title=\"Tracking issue for const_strict_overflow_ops\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.strict_add\" class=\"fn\">strict_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict integer addition. Computes <code>self + rhs</code>, panicking\nif overflow occurred.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5><h6 id=\"overflow-behavior\"><a class=\"doc-anchor\" href=\"#overflow-behavior\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-19\"><a class=\"doc-anchor\" href=\"#examples-19\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>((u8::MAX - <span class=\"number\">2</span>).strict_add(<span class=\"number\">1</span>), u8::MAX - <span class=\"number\">1</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= (u8::MAX - <span class=\"number\">2</span>).strict_add(<span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85122\" title=\"Tracking issue for unchecked_math\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.unchecked_add\" class=\"fn\">unchecked_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>unchecked_math</code>)</span></div></span></summary><div class=\"docblock\"><p>Unchecked integer addition. Computes <code>self + rhs</code>, assuming overflow\ncannot occur.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>This results in undefined behavior when\n<code>self + rhs &gt; u8::MAX</code> or <code>self + rhs &lt; u8::MIN</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.checked_add\" title=\"method u8::checked_add\"><code>checked_add</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.66.0, const since 1.66.0\">1.66.0 (const: 1.66.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.checked_add_signed\" class=\"fn\">checked_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked addition with a signed integer. Computes <code>self + rhs</code>,\nreturning <code>None</code> if overflow occurred.</p>\n<h5 id=\"examples-20\"><a class=\"doc-anchor\" href=\"#examples-20\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u8</span>.checked_add_signed(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u8</span>.checked_add_signed(-<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>((u8::MAX - <span class=\"number\">2</span>).checked_add_signed(<span class=\"number\">3</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_add_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/118260\" title=\"Tracking issue for const_strict_overflow_ops\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.strict_add_signed\" class=\"fn\">strict_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict addition with a signed integer. Computes <code>self + rhs</code>,\npanicking if overflow occurred.</p>\n<h5 id=\"panics-2\"><a class=\"doc-anchor\" href=\"#panics-2\">§</a>Panics</h5><h6 id=\"overflow-behavior-1\"><a class=\"doc-anchor\" href=\"#overflow-behavior-1\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-21\"><a class=\"doc-anchor\" href=\"#examples-21\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u8</span>.strict_add_signed(<span class=\"number\">2</span>), <span class=\"number\">3</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">1u8</span>.strict_add_signed(-<span class=\"number\">2</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= (u8::MAX - <span class=\"number\">2</span>).strict_add_signed(<span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer subtraction. Computes <code>self - rhs</code>, returning\n<code>None</code> if overflow occurred.</p>\n<h5 id=\"examples-22\"><a class=\"doc-anchor\" href=\"#examples-22\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u8</span>.checked_sub(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u8</span>.checked_sub(<span class=\"number\">1</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/118260\" title=\"Tracking issue for const_strict_overflow_ops\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.strict_sub\" class=\"fn\">strict_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict integer subtraction. Computes <code>self - rhs</code>, panicking if\noverflow occurred.</p>\n<h5 id=\"panics-3\"><a class=\"doc-anchor\" href=\"#panics-3\">§</a>Panics</h5><h6 id=\"overflow-behavior-2\"><a class=\"doc-anchor\" href=\"#overflow-behavior-2\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-23\"><a class=\"doc-anchor\" href=\"#examples-23\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u8</span>.strict_sub(<span class=\"number\">1</span>), <span class=\"number\">0</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">0u8</span>.strict_sub(<span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85122\" title=\"Tracking issue for unchecked_math\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.unchecked_sub\" class=\"fn\">unchecked_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>unchecked_math</code>)</span></div></span></summary><div class=\"docblock\"><p>Unchecked integer subtraction. Computes <code>self - rhs</code>, assuming overflow\ncannot occur.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>This results in undefined behavior when\n<code>self - rhs &gt; u8::MAX</code> or <code>self - rhs &lt; u8::MIN</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.checked_sub\" title=\"method u8::checked_sub\"><code>checked_sub</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer multiplication. Computes <code>self * rhs</code>, returning\n<code>None</code> if overflow occurred.</p>\n<h5 id=\"examples-24\"><a class=\"doc-anchor\" href=\"#examples-24\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u8</span>.checked_mul(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">5</span>));\n<span class=\"macro\">assert_eq!</span>(u8::MAX.checked_mul(<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/118260\" title=\"Tracking issue for const_strict_overflow_ops\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.strict_mul\" class=\"fn\">strict_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict integer multiplication. Computes <code>self * rhs</code>, panicking if\noverflow occurred.</p>\n<h5 id=\"panics-4\"><a class=\"doc-anchor\" href=\"#panics-4\">§</a>Panics</h5><h6 id=\"overflow-behavior-3\"><a class=\"doc-anchor\" href=\"#overflow-behavior-3\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-25\"><a class=\"doc-anchor\" href=\"#examples-25\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u8</span>.strict_mul(<span class=\"number\">1</span>), <span class=\"number\">5</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= u8::MAX.strict_mul(<span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85122\" title=\"Tracking issue for unchecked_math\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.unchecked_mul\" class=\"fn\">unchecked_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>unchecked_math</code>)</span></div></span></summary><div class=\"docblock\"><p>Unchecked integer multiplication. Computes <code>self * rhs</code>, assuming overflow\ncannot occur.</p>\n<h5 id=\"safety-2\"><a class=\"doc-anchor\" href=\"#safety-2\">§</a>Safety</h5>\n<p>This results in undefined behavior when\n<code>self * rhs &gt; u8::MAX</code> or <code>self * rhs &lt; u8::MIN</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.checked_mul\" title=\"method u8::checked_mul\"><code>checked_mul</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.52.0\">1.0.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.checked_div\" class=\"fn\">checked_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer division. Computes <code>self / rhs</code>, returning <code>None</code>\nif <code>rhs == 0</code>.</p>\n<h5 id=\"examples-26\"><a class=\"doc-anchor\" href=\"#examples-26\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">128u8</span>.checked_div(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">64</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u8</span>.checked_div(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_div\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/118260\" title=\"Tracking issue for const_strict_overflow_ops\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.strict_div\" class=\"fn\">strict_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict integer division. Computes <code>self / rhs</code>.\nStrict division on unsigned types is just normal division.\nThere’s no way overflow could ever happen.\nThis function exists, so that all operations\nare accounted for in the strict operations.</p>\n<h5 id=\"panics-5\"><a class=\"doc-anchor\" href=\"#panics-5\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-27\"><a class=\"doc-anchor\" href=\"#examples-27\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u8</span>.strict_div(<span class=\"number\">10</span>), <span class=\"number\">10</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.checked_div_euclid\" class=\"fn\">checked_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, returning <code>None</code>\nif <code>rhs == 0</code>.</p>\n<h5 id=\"examples-28\"><a class=\"doc-anchor\" href=\"#examples-28\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">128u8</span>.checked_div_euclid(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">64</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u8</span>.checked_div_euclid(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_div_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/118260\" title=\"Tracking issue for const_strict_overflow_ops\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.strict_div_euclid\" class=\"fn\">strict_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict Euclidean division. Computes <code>self.div_euclid(rhs)</code>.\nStrict division on unsigned types is just normal division.\nThere’s no way overflow could ever happen.\nThis function exists, so that all operations\nare accounted for in the strict operations.\nSince, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self.strict_div(rhs)</code>.</p>\n<h5 id=\"panics-6\"><a class=\"doc-anchor\" href=\"#panics-6\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-29\"><a class=\"doc-anchor\" href=\"#examples-29\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u8</span>.strict_div_euclid(<span class=\"number\">10</span>), <span class=\"number\">10</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.52.0\">1.7.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.checked_rem\" class=\"fn\">checked_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer remainder. Computes <code>self % rhs</code>, returning <code>None</code>\nif <code>rhs == 0</code>.</p>\n<h5 id=\"examples-30\"><a class=\"doc-anchor\" href=\"#examples-30\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u8</span>.checked_rem(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u8</span>.checked_rem(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_rem\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/118260\" title=\"Tracking issue for const_strict_overflow_ops\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.strict_rem\" class=\"fn\">strict_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict integer remainder. Computes <code>self % rhs</code>.\nStrict remainder calculation on unsigned types is\njust the regular remainder calculation.\nThere’s no way overflow could ever happen.\nThis function exists, so that all operations\nare accounted for in the strict operations.</p>\n<h5 id=\"panics-7\"><a class=\"doc-anchor\" href=\"#panics-7\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-31\"><a class=\"doc-anchor\" href=\"#examples-31\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u8</span>.strict_rem(<span class=\"number\">10</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.checked_rem_euclid\" class=\"fn\">checked_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked Euclidean modulo. Computes <code>self.rem_euclid(rhs)</code>, returning <code>None</code>\nif <code>rhs == 0</code>.</p>\n<h5 id=\"examples-32\"><a class=\"doc-anchor\" href=\"#examples-32\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u8</span>.checked_rem_euclid(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u8</span>.checked_rem_euclid(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_rem_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/118260\" title=\"Tracking issue for const_strict_overflow_ops\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.strict_rem_euclid\" class=\"fn\">strict_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict Euclidean modulo. Computes <code>self.rem_euclid(rhs)</code>.\nStrict modulo calculation on unsigned types is\njust the regular remainder calculation.\nThere’s no way overflow could ever happen.\nThis function exists, so that all operations\nare accounted for in the strict operations.\nSince, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self.strict_rem(rhs)</code>.</p>\n<h5 id=\"panics-8\"><a class=\"doc-anchor\" href=\"#panics-8\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-33\"><a class=\"doc-anchor\" href=\"#examples-33\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u8</span>.strict_rem_euclid(<span class=\"number\">10</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.ilog\" class=\"fn\">ilog</a>(self, base: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the logarithm of the number with respect to an arbitrary base,\nrounded down.</p>\n<p>This method might not be optimized owing to implementation details;\n<code>ilog2</code> can produce results more efficiently for base 2, and <code>ilog10</code>\ncan produce results more efficiently for base 10.</p>\n<h5 id=\"panics-9\"><a class=\"doc-anchor\" href=\"#panics-9\">§</a>Panics</h5>\n<p>This function will panic if <code>self</code> is zero, or if <code>base</code> is less than 2.</p>\n<h5 id=\"examples-34\"><a class=\"doc-anchor\" href=\"#examples-34\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u8</span>.ilog(<span class=\"number\">5</span>), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog2\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.ilog2\" class=\"fn\">ilog2</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 2 logarithm of the number, rounded down.</p>\n<h5 id=\"panics-10\"><a class=\"doc-anchor\" href=\"#panics-10\">§</a>Panics</h5>\n<p>This function will panic if <code>self</code> is zero.</p>\n<h5 id=\"examples-35\"><a class=\"doc-anchor\" href=\"#examples-35\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u8</span>.ilog2(), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog10\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.ilog10\" class=\"fn\">ilog10</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 10 logarithm of the number, rounded down.</p>\n<h5 id=\"panics-11\"><a class=\"doc-anchor\" href=\"#panics-11\">§</a>Panics</h5>\n<p>This function will panic if <code>self</code> is zero.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">10u8</span>.ilog10(), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_ilog\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.checked_ilog\" class=\"fn\">checked_ilog</a>(self, base: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the logarithm of the number with respect to an arbitrary base,\nrounded down.</p>\n<p>Returns <code>None</code> if the number is zero, or if the base is not at least 2.</p>\n<p>This method might not be optimized owing to implementation details;\n<code>checked_ilog2</code> can produce results more efficiently for base 2, and\n<code>checked_ilog10</code> can produce results more efficiently for base 10.</p>\n<h5 id=\"examples-36\"><a class=\"doc-anchor\" href=\"#examples-36\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u8</span>.checked_ilog(<span class=\"number\">5</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_ilog2\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.checked_ilog2\" class=\"fn\">checked_ilog2</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the base 2 logarithm of the number, rounded down.</p>\n<p>Returns <code>None</code> if the number is zero.</p>\n<h5 id=\"examples-37\"><a class=\"doc-anchor\" href=\"#examples-37\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u8</span>.checked_ilog2(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_ilog10\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.checked_ilog10\" class=\"fn\">checked_ilog10</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the base 10 logarithm of the number, rounded down.</p>\n<p>Returns <code>None</code> if the number is zero.</p>\n<h5 id=\"examples-38\"><a class=\"doc-anchor\" href=\"#examples-38\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">10u8</span>.checked_ilog10(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.47.0\">1.7.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked negation. Computes <code>-self</code>, returning <code>None</code> unless <code>self == 0</code>.</p>\n<p>Note that negating any positive integer will overflow.</p>\n<h5 id=\"examples-39\"><a class=\"doc-anchor\" href=\"#examples-39\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u8</span>.checked_neg(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u8</span>.checked_neg(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/118260\" title=\"Tracking issue for const_strict_overflow_ops\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.strict_neg\" class=\"fn\">strict_neg</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict negation. Computes <code>-self</code>, panicking unless <code>self == 0</code>.</p>\n<p>Note that negating any positive integer will overflow.</p>\n<h5 id=\"panics-12\"><a class=\"doc-anchor\" href=\"#panics-12\">§</a>Panics</h5><h6 id=\"overflow-behavior-4\"><a class=\"doc-anchor\" href=\"#overflow-behavior-4\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-40\"><a class=\"doc-anchor\" href=\"#examples-40\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u8</span>.strict_neg(), <span class=\"number\">0</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">1u8</span>.strict_neg();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shl\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.47.0\">1.7.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.checked_shl\" class=\"fn\">checked_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>.</p>\n<h5 id=\"examples-41\"><a class=\"doc-anchor\" href=\"#examples-41\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x1u8</span>.checked_shl(<span class=\"number\">4</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0x10</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u8</span>.checked_shl(<span class=\"number\">129</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_shl\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/118260\" title=\"Tracking issue for const_strict_overflow_ops\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.strict_shl\" class=\"fn\">strict_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict shift left. Computes <code>self &lt;&lt; rhs</code>, panicking if <code>rhs</code> is larger\nthan or equal to the number of bits in <code>self</code>.</p>\n<h5 id=\"panics-13\"><a class=\"doc-anchor\" href=\"#panics-13\">§</a>Panics</h5><h6 id=\"overflow-behavior-5\"><a class=\"doc-anchor\" href=\"#overflow-behavior-5\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-42\"><a class=\"doc-anchor\" href=\"#examples-42\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x1u8</span>.strict_shl(<span class=\"number\">4</span>), <span class=\"number\">0x10</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">0x10u8</span>.strict_shl(<span class=\"number\">129</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_shl\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85122\" title=\"Tracking issue for unchecked_shifts\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.unchecked_shl\" class=\"fn\">unchecked_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>unchecked_shifts</code>)</span></div></span></summary><div class=\"docblock\"><p>Unchecked shift left. Computes <code>self &lt;&lt; rhs</code>, assuming that\n<code>rhs</code> is less than the number of bits in <code>self</code>.</p>\n<h5 id=\"safety-3\"><a class=\"doc-anchor\" href=\"#safety-3\">§</a>Safety</h5>\n<p>This results in undefined behavior if <code>rhs</code> is larger than\nor equal to the number of bits in <code>self</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.checked_shl\" title=\"method u8::checked_shl\"><code>checked_shl</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.47.0\">1.7.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.checked_shr\" class=\"fn\">checked_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>.</p>\n<h5 id=\"examples-43\"><a class=\"doc-anchor\" href=\"#examples-43\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u8</span>.checked_shr(<span class=\"number\">4</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0x1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u8</span>.checked_shr(<span class=\"number\">129</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_shr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/118260\" title=\"Tracking issue for const_strict_overflow_ops\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.strict_shr\" class=\"fn\">strict_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict shift right. Computes <code>self &gt;&gt; rhs</code>, panicking <code>rhs</code> is\nlarger than or equal to the number of bits in <code>self</code>.</p>\n<h5 id=\"panics-14\"><a class=\"doc-anchor\" href=\"#panics-14\">§</a>Panics</h5><h6 id=\"overflow-behavior-6\"><a class=\"doc-anchor\" href=\"#overflow-behavior-6\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-44\"><a class=\"doc-anchor\" href=\"#examples-44\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u8</span>.strict_shr(<span class=\"number\">4</span>), <span class=\"number\">0x1</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">0x10u8</span>.strict_shr(<span class=\"number\">129</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_shr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85122\" title=\"Tracking issue for unchecked_shifts\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.unchecked_shr\" class=\"fn\">unchecked_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>unchecked_shifts</code>)</span></div></span></summary><div class=\"docblock\"><p>Unchecked shift right. Computes <code>self &gt;&gt; rhs</code>, assuming that\n<code>rhs</code> is less than the number of bits in <code>self</code>.</p>\n<h5 id=\"safety-4\"><a class=\"doc-anchor\" href=\"#safety-4\">§</a>Safety</h5>\n<p>This results in undefined behavior if <code>rhs</code> is larger than\nor equal to the number of bits in <code>self</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.checked_shr\" title=\"method u8::checked_shr\"><code>checked_shr</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.50.0\">1.34.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.checked_pow\" class=\"fn\">checked_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked exponentiation. Computes <code>self.pow(exp)</code>, returning <code>None</code> if\noverflow occurred.</p>\n<h5 id=\"examples-45\"><a class=\"doc-anchor\" href=\"#examples-45\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u8</span>.checked_pow(<span class=\"number\">5</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">32</span>));\n<span class=\"macro\">assert_eq!</span>(u8::MAX.checked_pow(<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/118260\" title=\"Tracking issue for const_strict_overflow_ops\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.strict_pow\" class=\"fn\">strict_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict exponentiation. Computes <code>self.pow(exp)</code>, panicking if\noverflow occurred.</p>\n<h5 id=\"panics-15\"><a class=\"doc-anchor\" href=\"#panics-15\">§</a>Panics</h5><h6 id=\"overflow-behavior-7\"><a class=\"doc-anchor\" href=\"#overflow-behavior-7\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-46\"><a class=\"doc-anchor\" href=\"#examples-46\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u8</span>.strict_pow(<span class=\"number\">5</span>), <span class=\"number\">32</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= u8::MAX.strict_pow(<span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer addition. Computes <code>self + rhs</code>, saturating at\nthe numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-47\"><a class=\"doc-anchor\" href=\"#examples-47\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u8</span>.saturating_add(<span class=\"number\">1</span>), <span class=\"number\">101</span>);\n<span class=\"macro\">assert_eq!</span>(u8::MAX.saturating_add(<span class=\"number\">127</span>), u8::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.66.0, const since 1.66.0\">1.66.0 (const: 1.66.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.saturating_add_signed\" class=\"fn\">saturating_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Saturating addition with a signed integer. Computes <code>self + rhs</code>,\nsaturating at the numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-48\"><a class=\"doc-anchor\" href=\"#examples-48\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u8</span>.saturating_add_signed(<span class=\"number\">2</span>), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u8</span>.saturating_add_signed(-<span class=\"number\">2</span>), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>((u8::MAX - <span class=\"number\">2</span>).saturating_add_signed(<span class=\"number\">4</span>), u8::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer subtraction. Computes <code>self - rhs</code>, saturating\nat the numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-49\"><a class=\"doc-anchor\" href=\"#examples-49\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u8</span>.saturating_sub(<span class=\"number\">27</span>), <span class=\"number\">73</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">13u8</span>.saturating_sub(<span class=\"number\">127</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.47.0\">1.7.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer multiplication. Computes <code>self * rhs</code>,\nsaturating at the numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-50\"><a class=\"doc-anchor\" href=\"#examples-50\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u8</span>.saturating_mul(<span class=\"number\">10</span>), <span class=\"number\">20</span>);\n<span class=\"macro\">assert_eq!</span>((u8::MAX).saturating_mul(<span class=\"number\">10</span>), u8::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_div\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.58.0, const since 1.58.0\">1.58.0 (const: 1.58.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.saturating_div\" class=\"fn\">saturating_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer division. Computes <code>self / rhs</code>, saturating at the\nnumeric bounds instead of overflowing.</p>\n<h5 id=\"panics-16\"><a class=\"doc-anchor\" href=\"#panics-16\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-51\"><a class=\"doc-anchor\" href=\"#examples-51\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u8</span>.saturating_div(<span class=\"number\">2</span>), <span class=\"number\">2</span>);\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.50.0\">1.34.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.saturating_pow\" class=\"fn\">saturating_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer exponentiation. Computes <code>self.pow(exp)</code>,\nsaturating at the numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-52\"><a class=\"doc-anchor\" href=\"#examples-52\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">4u8</span>.saturating_pow(<span class=\"number\">3</span>), <span class=\"number\">64</span>);\n<span class=\"macro\">assert_eq!</span>(u8::MAX.saturating_pow(<span class=\"number\">2</span>), u8::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.wrapping_add\" class=\"fn\">wrapping_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) addition. Computes <code>self + rhs</code>,\nwrapping around at the boundary of the type.</p>\n<h5 id=\"examples-53\"><a class=\"doc-anchor\" href=\"#examples-53\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">200u8</span>.wrapping_add(<span class=\"number\">55</span>), <span class=\"number\">255</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">200u8</span>.wrapping_add(u8::MAX), <span class=\"number\">199</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.66.0, const since 1.66.0\">1.66.0 (const: 1.66.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.wrapping_add_signed\" class=\"fn\">wrapping_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) addition with a signed integer. Computes\n<code>self + rhs</code>, wrapping around at the boundary of the type.</p>\n<h5 id=\"examples-54\"><a class=\"doc-anchor\" href=\"#examples-54\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u8</span>.wrapping_add_signed(<span class=\"number\">2</span>), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u8</span>.wrapping_add_signed(-<span class=\"number\">2</span>), u8::MAX);\n<span class=\"macro\">assert_eq!</span>((u8::MAX - <span class=\"number\">2</span>).wrapping_add_signed(<span class=\"number\">4</span>), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.wrapping_sub\" class=\"fn\">wrapping_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) subtraction. Computes <code>self - rhs</code>,\nwrapping around at the boundary of the type.</p>\n<h5 id=\"examples-55\"><a class=\"doc-anchor\" href=\"#examples-55\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u8</span>.wrapping_sub(<span class=\"number\">100</span>), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u8</span>.wrapping_sub(u8::MAX), <span class=\"number\">101</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.wrapping_mul\" class=\"fn\">wrapping_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) multiplication. Computes <code>self * rhs</code>, wrapping around at the boundary of the type.</p>\n<h5 id=\"examples-56\"><a class=\"doc-anchor\" href=\"#examples-56\">§</a>Examples</h5>\n<p>Basic usage:</p>\n<p>Please note that this example is shared between integer types.\nWhich explains why <code>u8</code> is used here.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">10u8</span>.wrapping_mul(<span class=\"number\">12</span>), <span class=\"number\">120</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">25u8</span>.wrapping_mul(<span class=\"number\">12</span>), <span class=\"number\">44</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_div\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.52.0\">1.2.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.wrapping_div\" class=\"fn\">wrapping_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) division. Computes <code>self / rhs</code>.\nWrapped division on unsigned types is just normal division.\nThere’s no way wrapping could ever happen.\nThis function exists, so that all operations\nare accounted for in the wrapping operations.</p>\n<h5 id=\"panics-17\"><a class=\"doc-anchor\" href=\"#panics-17\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-57\"><a class=\"doc-anchor\" href=\"#examples-57\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u8</span>.wrapping_div(<span class=\"number\">10</span>), <span class=\"number\">10</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_div_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.wrapping_div_euclid\" class=\"fn\">wrapping_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Wrapping Euclidean division. Computes <code>self.div_euclid(rhs)</code>.\nWrapped division on unsigned types is just normal division.\nThere’s no way wrapping could ever happen.\nThis function exists, so that all operations\nare accounted for in the wrapping operations.\nSince, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self.wrapping_div(rhs)</code>.</p>\n<h5 id=\"panics-18\"><a class=\"doc-anchor\" href=\"#panics-18\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-58\"><a class=\"doc-anchor\" href=\"#examples-58\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u8</span>.wrapping_div_euclid(<span class=\"number\">10</span>), <span class=\"number\">10</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_rem\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.52.0\">1.2.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.wrapping_rem\" class=\"fn\">wrapping_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) remainder. Computes <code>self % rhs</code>.\nWrapped remainder calculation on unsigned types is\njust the regular remainder calculation.\nThere’s no way wrapping could ever happen.\nThis function exists, so that all operations\nare accounted for in the wrapping operations.</p>\n<h5 id=\"panics-19\"><a class=\"doc-anchor\" href=\"#panics-19\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-59\"><a class=\"doc-anchor\" href=\"#examples-59\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u8</span>.wrapping_rem(<span class=\"number\">10</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_rem_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.wrapping_rem_euclid\" class=\"fn\">wrapping_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Wrapping Euclidean modulo. Computes <code>self.rem_euclid(rhs)</code>.\nWrapped modulo calculation on unsigned types is\njust the regular remainder calculation.\nThere’s no way wrapping could ever happen.\nThis function exists, so that all operations\nare accounted for in the wrapping operations.\nSince, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self.wrapping_rem(rhs)</code>.</p>\n<h5 id=\"panics-20\"><a class=\"doc-anchor\" href=\"#panics-20\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-60\"><a class=\"doc-anchor\" href=\"#examples-60\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u8</span>.wrapping_rem_euclid(<span class=\"number\">10</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.32.0\">1.2.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) negation. Computes <code>-self</code>,\nwrapping around at the boundary of the type.</p>\n<p>Since unsigned types do not have negative equivalents\nall applications of this function will wrap (except for <code>-0</code>).\nFor values smaller than the corresponding signed type’s maximum\nthe result is the same as casting the corresponding signed value.\nAny larger values are equivalent to <code>MAX + 1 - (val - MAX - 1)</code> where\n<code>MAX</code> is the corresponding signed type’s maximum.</p>\n<h5 id=\"examples-61\"><a class=\"doc-anchor\" href=\"#examples-61\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0_u8</span>.wrapping_neg(), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(u8::MAX.wrapping_neg(), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">13_u8</span>.wrapping_neg(), (!<span class=\"number\">13</span>) + <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">42_u8</span>.wrapping_neg(), !(<span class=\"number\">42 </span>- <span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shl\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.32.0\">1.2.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.wrapping_shl\" class=\"fn\">wrapping_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high-order bits of <code>rhs</code> that\nwould cause the shift to exceed the bitwidth of the type.</p>\n<p>Note that this is <em>not</em> the same as a rotate-left; the\nRHS of a wrapping shift-left is restricted to the range\nof the type, rather than the bits shifted out of the LHS\nbeing returned to the other end. The primitive integer\ntypes all implement a <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.rotate_left\" title=\"method u8::rotate_left\"><code>rotate_left</code></a> function,\nwhich may be what you want instead.</p>\n<h5 id=\"examples-62\"><a class=\"doc-anchor\" href=\"#examples-62\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u8</span>.wrapping_shl(<span class=\"number\">7</span>), <span class=\"number\">128</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u8</span>.wrapping_shl(<span class=\"number\">128</span>), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.32.0\">1.2.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.wrapping_shr\" class=\"fn\">wrapping_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high-order bits of <code>rhs</code> that\nwould cause the shift to exceed the bitwidth of the type.</p>\n<p>Note that this is <em>not</em> the same as a rotate-right; the\nRHS of a wrapping shift-right is restricted to the range\nof the type, rather than the bits shifted out of the LHS\nbeing returned to the other end. The primitive integer\ntypes all implement a <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.rotate_right\" title=\"method u8::rotate_right\"><code>rotate_right</code></a> function,\nwhich may be what you want instead.</p>\n<h5 id=\"examples-63\"><a class=\"doc-anchor\" href=\"#examples-63\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">128u8</span>.wrapping_shr(<span class=\"number\">7</span>), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">128u8</span>.wrapping_shr(<span class=\"number\">128</span>), <span class=\"number\">128</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.50.0\">1.34.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.wrapping_pow\" class=\"fn\">wrapping_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) exponentiation. Computes <code>self.pow(exp)</code>,\nwrapping around at the boundary of the type.</p>\n<h5 id=\"examples-64\"><a class=\"doc-anchor\" href=\"#examples-64\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u8</span>.wrapping_pow(<span class=\"number\">5</span>), <span class=\"number\">243</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u8</span>.wrapping_pow(<span class=\"number\">6</span>), <span class=\"number\">217</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.overflowing_add\" class=\"fn\">overflowing_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates <code>self</code> + <code>rhs</code></p>\n<p>Returns a tuple of the addition along with a boolean indicating\nwhether an arithmetic overflow would occur. If an overflow would\nhave occurred then the wrapped value is returned.</p>\n<h5 id=\"examples-65\"><a class=\"doc-anchor\" href=\"#examples-65\">§</a>Examples</h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u8</span>.overflowing_add(<span class=\"number\">2</span>), (<span class=\"number\">7</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(u8::MAX.overflowing_add(<span class=\"number\">1</span>), (<span class=\"number\">0</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.carrying_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85532\" title=\"Tracking issue for const_bigint_helper_methods\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.carrying_add\" class=\"fn\">carrying_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, carry: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bigint_helper_methods</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates <code>self</code> + <code>rhs</code> + <code>carry</code> and returns a tuple containing\nthe sum and the output carry.</p>\n<p>Performs “ternary addition” of two integer operands and a carry-in\nbit, and returns an output integer and a carry-out bit. This allows\nchaining together multiple additions to create a wider addition, and\ncan be useful for bignum addition.</p>\n<p>This can be thought of as a 8-bit “full adder”, in the electronics sense.</p>\n<p>If the input carry is false, this method is equivalent to\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.overflowing_add\" title=\"method u8::overflowing_add\"><code>overflowing_add</code></a>, and the output carry is\nequal to the overflow flag. Note that although carry and overflow\nflags are similar for unsigned integers, they are different for\nsigned integers.</p>\n<h5 id=\"examples-66\"><a class=\"doc-anchor\" href=\"#examples-66\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n\n</span><span class=\"comment\">//    3  MAX    (a = 3 × 2^8 + 2^8 - 1)\n// +  5    7    (b = 5 × 2^8 + 7)\n// ---------\n//    9    6    (sum = 9 × 2^8 + 6)\n\n</span><span class=\"kw\">let </span>(a1, a0): (u8, u8) = (<span class=\"number\">3</span>, u8::MAX);\n<span class=\"kw\">let </span>(b1, b0): (u8, u8) = (<span class=\"number\">5</span>, <span class=\"number\">7</span>);\n<span class=\"kw\">let </span>carry0 = <span class=\"bool-val\">false</span>;\n\n<span class=\"kw\">let </span>(sum0, carry1) = a0.carrying_add(b0, carry0);\n<span class=\"macro\">assert_eq!</span>(carry1, <span class=\"bool-val\">true</span>);\n<span class=\"kw\">let </span>(sum1, carry2) = a1.carrying_add(b1, carry1);\n<span class=\"macro\">assert_eq!</span>(carry2, <span class=\"bool-val\">false</span>);\n\n<span class=\"macro\">assert_eq!</span>((sum1, sum0), (<span class=\"number\">9</span>, <span class=\"number\">6</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.66.0, const since 1.66.0\">1.66.0 (const: 1.66.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.overflowing_add_signed\" class=\"fn\">overflowing_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates <code>self</code> + <code>rhs</code> with a signed <code>rhs</code></p>\n<p>Returns a tuple of the addition along with a boolean indicating\nwhether an arithmetic overflow would occur. If an overflow would\nhave occurred then the wrapped value is returned.</p>\n<h5 id=\"examples-67\"><a class=\"doc-anchor\" href=\"#examples-67\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u8</span>.overflowing_add_signed(<span class=\"number\">2</span>), (<span class=\"number\">3</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u8</span>.overflowing_add_signed(-<span class=\"number\">2</span>), (u8::MAX, <span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>((u8::MAX - <span class=\"number\">2</span>).overflowing_add_signed(<span class=\"number\">4</span>), (<span class=\"number\">1</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.overflowing_sub\" class=\"fn\">overflowing_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates <code>self</code> - <code>rhs</code></p>\n<p>Returns a tuple of the subtraction along with a boolean indicating\nwhether an arithmetic overflow would occur. If an overflow would\nhave occurred then the wrapped value is returned.</p>\n<h5 id=\"examples-68\"><a class=\"doc-anchor\" href=\"#examples-68\">§</a>Examples</h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u8</span>.overflowing_sub(<span class=\"number\">2</span>), (<span class=\"number\">3</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u8</span>.overflowing_sub(<span class=\"number\">1</span>), (u8::MAX, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrowing_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85532\" title=\"Tracking issue for const_bigint_helper_methods\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.borrowing_sub\" class=\"fn\">borrowing_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, borrow: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bigint_helper_methods</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates <code>self</code> − <code>rhs</code> − <code>borrow</code> and returns a tuple\ncontaining the difference and the output borrow.</p>\n<p>Performs “ternary subtraction” by subtracting both an integer\noperand and a borrow-in bit from <code>self</code>, and returns an output\ninteger and a borrow-out bit. This allows chaining together multiple\nsubtractions to create a wider subtraction, and can be useful for\nbignum subtraction.</p>\n<h5 id=\"examples-69\"><a class=\"doc-anchor\" href=\"#examples-69\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n\n</span><span class=\"comment\">//    9    6    (a = 9 × 2^8 + 6)\n// -  5    7    (b = 5 × 2^8 + 7)\n// ---------\n//    3  MAX    (diff = 3 × 2^8 + 2^8 - 1)\n\n</span><span class=\"kw\">let </span>(a1, a0): (u8, u8) = (<span class=\"number\">9</span>, <span class=\"number\">6</span>);\n<span class=\"kw\">let </span>(b1, b0): (u8, u8) = (<span class=\"number\">5</span>, <span class=\"number\">7</span>);\n<span class=\"kw\">let </span>borrow0 = <span class=\"bool-val\">false</span>;\n\n<span class=\"kw\">let </span>(diff0, borrow1) = a0.borrowing_sub(b0, borrow0);\n<span class=\"macro\">assert_eq!</span>(borrow1, <span class=\"bool-val\">true</span>);\n<span class=\"kw\">let </span>(diff1, borrow2) = a1.borrowing_sub(b1, borrow1);\n<span class=\"macro\">assert_eq!</span>(borrow2, <span class=\"bool-val\">false</span>);\n\n<span class=\"macro\">assert_eq!</span>((diff1, diff0), (<span class=\"number\">3</span>, u8::MAX));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.60.0, const since 1.60.0\">1.60.0 (const: 1.60.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.abs_diff\" class=\"fn\">abs_diff</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Computes the absolute difference between <code>self</code> and <code>other</code>.</p>\n<h5 id=\"examples-70\"><a class=\"doc-anchor\" href=\"#examples-70\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u8</span>.abs_diff(<span class=\"number\">80</span>), <span class=\"number\">20u8</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u8</span>.abs_diff(<span class=\"number\">110</span>), <span class=\"number\">10u8</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.overflowing_mul\" class=\"fn\">overflowing_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the multiplication of <code>self</code> and <code>rhs</code>.</p>\n<p>Returns a tuple of the multiplication along with a boolean\nindicating whether an arithmetic overflow would occur. If an\noverflow would have occurred then the wrapped value is returned.</p>\n<h5 id=\"examples-71\"><a class=\"doc-anchor\" href=\"#examples-71\">§</a>Examples</h5>\n<p>Basic usage:</p>\n<p>Please note that this example is shared between integer types.\nWhich explains why <code>u32</code> is used here.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.overflowing_mul(<span class=\"number\">2</span>), (<span class=\"number\">10</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.overflowing_mul(<span class=\"number\">10</span>), (<span class=\"number\">1410065408</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_div\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.52.0\">1.7.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.overflowing_div\" class=\"fn\">overflowing_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the divisor when <code>self</code> is divided by <code>rhs</code>.</p>\n<p>Returns a tuple of the divisor along with a boolean indicating\nwhether an arithmetic overflow would occur. Note that for unsigned\nintegers overflow never occurs, so the second value is always\n<code>false</code>.</p>\n<h5 id=\"panics-21\"><a class=\"doc-anchor\" href=\"#panics-21\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-72\"><a class=\"doc-anchor\" href=\"#examples-72\">§</a>Examples</h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u8</span>.overflowing_div(<span class=\"number\">2</span>), (<span class=\"number\">2</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_div_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.overflowing_div_euclid\" class=\"fn\">overflowing_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the quotient of Euclidean division <code>self.div_euclid(rhs)</code>.</p>\n<p>Returns a tuple of the divisor along with a boolean indicating\nwhether an arithmetic overflow would occur. Note that for unsigned\nintegers overflow never occurs, so the second value is always\n<code>false</code>.\nSince, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self.overflowing_div(rhs)</code>.</p>\n<h5 id=\"panics-22\"><a class=\"doc-anchor\" href=\"#panics-22\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-73\"><a class=\"doc-anchor\" href=\"#examples-73\">§</a>Examples</h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u8</span>.overflowing_div_euclid(<span class=\"number\">2</span>), (<span class=\"number\">2</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_rem\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.52.0\">1.7.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.overflowing_rem\" class=\"fn\">overflowing_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the remainder when <code>self</code> is divided by <code>rhs</code>.</p>\n<p>Returns a tuple of the remainder after dividing along with a boolean\nindicating whether an arithmetic overflow would occur. Note that for\nunsigned integers overflow never occurs, so the second value is\nalways <code>false</code>.</p>\n<h5 id=\"panics-23\"><a class=\"doc-anchor\" href=\"#panics-23\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-74\"><a class=\"doc-anchor\" href=\"#examples-74\">§</a>Examples</h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u8</span>.overflowing_rem(<span class=\"number\">2</span>), (<span class=\"number\">1</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_rem_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.overflowing_rem_euclid\" class=\"fn\">overflowing_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the remainder <code>self.rem_euclid(rhs)</code> as if by Euclidean division.</p>\n<p>Returns a tuple of the modulo after dividing along with a boolean\nindicating whether an arithmetic overflow would occur. Note that for\nunsigned integers overflow never occurs, so the second value is\nalways <code>false</code>.\nSince, for the positive integers, all common\ndefinitions of division are equal, this operation\nis exactly equal to <code>self.overflowing_rem(rhs)</code>.</p>\n<h5 id=\"panics-24\"><a class=\"doc-anchor\" href=\"#panics-24\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-75\"><a class=\"doc-anchor\" href=\"#examples-75\">§</a>Examples</h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u8</span>.overflowing_rem_euclid(<span class=\"number\">2</span>), (<span class=\"number\">1</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.overflowing_neg\" class=\"fn\">overflowing_neg</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Negates self in an overflowing fashion.</p>\n<p>Returns <code>!self + 1</code> using wrapping operations to return the value\nthat represents the negation of this unsigned value. Note that for\npositive unsigned values overflow always occurs, but negating 0 does\nnot overflow.</p>\n<h5 id=\"examples-76\"><a class=\"doc-anchor\" href=\"#examples-76\">§</a>Examples</h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u8</span>.overflowing_neg(), (<span class=\"number\">0</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u8</span>.overflowing_neg(), (-<span class=\"number\">2i32 </span><span class=\"kw\">as </span>u8, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_shl\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.overflowing_shl\" class=\"fn\">overflowing_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Shifts self left by <code>rhs</code> bits.</p>\n<p>Returns a tuple of the shifted version of self along with a boolean\nindicating whether the shift value was larger than or equal to the\nnumber of bits. If the shift value is too large, then value is\nmasked (N-1) where N is the number of bits, and this value is then\nused to perform the shift.</p>\n<h5 id=\"examples-77\"><a class=\"doc-anchor\" href=\"#examples-77\">§</a>Examples</h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x1u8</span>.overflowing_shl(<span class=\"number\">4</span>), (<span class=\"number\">0x10</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x1u8</span>.overflowing_shl(<span class=\"number\">132</span>), (<span class=\"number\">0x10</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_shr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.overflowing_shr\" class=\"fn\">overflowing_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Shifts self right by <code>rhs</code> bits.</p>\n<p>Returns a tuple of the shifted version of self along with a boolean\nindicating whether the shift value was larger than or equal to the\nnumber of bits. If the shift value is too large, then value is\nmasked (N-1) where N is the number of bits, and this value is then\nused to perform the shift.</p>\n<h5 id=\"examples-78\"><a class=\"doc-anchor\" href=\"#examples-78\">§</a>Examples</h5>\n<p>Basic usage</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u8</span>.overflowing_shr(<span class=\"number\">4</span>), (<span class=\"number\">0x1</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u8</span>.overflowing_shr(<span class=\"number\">132</span>), (<span class=\"number\">0x1</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.50.0\">1.34.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.overflowing_pow\" class=\"fn\">overflowing_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Raises self to the power of <code>exp</code>, using exponentiation by squaring.</p>\n<p>Returns a tuple of the exponentiation along with a bool indicating\nwhether an overflow happened.</p>\n<h5 id=\"examples-79\"><a class=\"doc-anchor\" href=\"#examples-79\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u8</span>.overflowing_pow(<span class=\"number\">5</span>), (<span class=\"number\">243</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u8</span>.overflowing_pow(<span class=\"number\">6</span>), (<span class=\"number\">217</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.50.0\">1.0.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.pow\" class=\"fn\">pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Raises self to the power of <code>exp</code>, using exponentiation by squaring.</p>\n<h5 id=\"examples-80\"><a class=\"doc-anchor\" href=\"#examples-80\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u8</span>.pow(<span class=\"number\">5</span>), <span class=\"number\">32</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.isqrt\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/116226\" title=\"Tracking issue for isqrt\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.isqrt\" class=\"fn\">isqrt</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>isqrt</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the square root of the number, rounded down.</p>\n<h5 id=\"examples-81\"><a class=\"doc-anchor\" href=\"#examples-81\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(isqrt)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">10u8</span>.isqrt(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.div_euclid\" class=\"fn\">div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Performs Euclidean division.</p>\n<p>Since, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self / rhs</code>.</p>\n<h5 id=\"panics-25\"><a class=\"doc-anchor\" href=\"#panics-25\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-82\"><a class=\"doc-anchor\" href=\"#examples-82\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">7u8</span>.div_euclid(<span class=\"number\">4</span>), <span class=\"number\">1</span>); <span class=\"comment\">// or any other integer type</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.rem_euclid\" class=\"fn\">rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Calculates the least remainder of <code>self (mod rhs)</code>.</p>\n<p>Since, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self % rhs</code>.</p>\n<h5 id=\"panics-26\"><a class=\"doc-anchor\" href=\"#panics-26\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is 0.</p>\n<h5 id=\"examples-83\"><a class=\"doc-anchor\" href=\"#examples-83\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">7u8</span>.rem_euclid(<span class=\"number\">4</span>), <span class=\"number\">3</span>); <span class=\"comment\">// or any other integer type</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_floor\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.div_floor\" class=\"fn\">div_floor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>int_roundings</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the quotient of <code>self</code> and <code>rhs</code>, rounding the result towards negative infinity.</p>\n<p>This is the same as performing <code>self / rhs</code> for all unsigned integers.</p>\n<h5 id=\"panics-27\"><a class=\"doc-anchor\" href=\"#panics-27\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-84\"><a class=\"doc-anchor\" href=\"#examples-84\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(int_roundings)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">7_u8</span>.div_floor(<span class=\"number\">4</span>), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_ceil\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.73.0, const since 1.73.0\">1.73.0 (const: 1.73.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.div_ceil\" class=\"fn\">div_ceil</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Calculates the quotient of <code>self</code> and <code>rhs</code>, rounding the result towards positive infinity.</p>\n<h5 id=\"panics-28\"><a class=\"doc-anchor\" href=\"#panics-28\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-85\"><a class=\"doc-anchor\" href=\"#examples-85\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">7_u8</span>.div_ceil(<span class=\"number\">4</span>), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_multiple_of\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.73.0, const since 1.73.0\">1.73.0 (const: 1.73.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.next_multiple_of\" class=\"fn\">next_multiple_of</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Calculates the smallest value greater than or equal to <code>self</code> that\nis a multiple of <code>rhs</code>.</p>\n<h5 id=\"panics-29\"><a class=\"doc-anchor\" href=\"#panics-29\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h6 id=\"overflow-behavior-8\"><a class=\"doc-anchor\" href=\"#overflow-behavior-8\">§</a>Overflow behavior</h6>\n<p>On overflow, this function will panic if overflow checks are enabled (default in debug\nmode) and wrap if overflow checks are disabled (default in release mode).</p>\n<h5 id=\"examples-86\"><a class=\"doc-anchor\" href=\"#examples-86\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">16_u8</span>.next_multiple_of(<span class=\"number\">8</span>), <span class=\"number\">16</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">23_u8</span>.next_multiple_of(<span class=\"number\">8</span>), <span class=\"number\">24</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_multiple_of\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.73.0, const since 1.73.0\">1.73.0 (const: 1.73.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.checked_next_multiple_of\" class=\"fn\">checked_next_multiple_of</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Calculates the smallest value greater than or equal to <code>self</code> that\nis a multiple of <code>rhs</code>. Returns <code>None</code> if <code>rhs</code> is zero or the\noperation would result in overflow.</p>\n<h5 id=\"examples-87\"><a class=\"doc-anchor\" href=\"#examples-87\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">16_u8</span>.checked_next_multiple_of(<span class=\"number\">8</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">16</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">23_u8</span>.checked_next_multiple_of(<span class=\"number\">8</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">24</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_u8</span>.checked_next_multiple_of(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(u8::MAX.checked_next_multiple_of(<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.is_power_of_two\" class=\"fn\">is_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.</p>\n<h5 id=\"examples-88\"><a class=\"doc-anchor\" href=\"#examples-88\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert!</span>(<span class=\"number\">16u8</span>.is_power_of_two());\n<span class=\"macro\">assert!</span>(!<span class=\"number\">10u8</span>.is_power_of_two());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.50.0\">1.0.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.next_power_of_two\" class=\"fn\">next_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to <code>self</code>.</p>\n<p>When return value overflows (i.e., <code>self &gt; (1 &lt;&lt; (N-1))</code> for type\n<code>uN</code>), it panics in debug mode and the return value is wrapped to 0 in\nrelease mode (the only situation in which method can return 0).</p>\n<h5 id=\"examples-89\"><a class=\"doc-anchor\" href=\"#examples-89\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u8</span>.next_power_of_two(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u8</span>.next_power_of_two(), <span class=\"number\">4</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.50.0\">1.0.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.checked_next_power_of_two\" class=\"fn\">checked_next_power_of_two</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to <code>n</code>. If\nthe next power of two is greater than the type’s maximum value,\n<code>None</code> is returned, otherwise the power of two is wrapped in <code>Some</code>.</p>\n<h5 id=\"examples-90\"><a class=\"doc-anchor\" href=\"#examples-90\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u8</span>.checked_next_power_of_two(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u8</span>.checked_next_power_of_two(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>));\n<span class=\"macro\">assert_eq!</span>(u8::MAX.checked_next_power_of_two(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_next_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/32463\" title=\"Tracking issue for wrapping_next_power_of_two\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.wrapping_next_power_of_two\" class=\"fn\">wrapping_next_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>wrapping_next_power_of_two</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to <code>n</code>. If\nthe next power of two is greater than the type’s maximum value,\nthe return value is wrapped to <code>0</code>.</p>\n<h5 id=\"examples-91\"><a class=\"doc-anchor\" href=\"#examples-91\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(wrapping_next_power_of_two)]\n\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u8</span>.wrapping_next_power_of_two(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u8</span>.wrapping_next_power_of_two(), <span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(u8::MAX.wrapping_next_power_of_two(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.to_be_bytes\" class=\"fn\">to_be_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">1</a>]</h4></section></summary><div class=\"docblock\"><p>Return the memory representation of this integer as a byte array in\nbig-endian (network) byte order.</p>\n<h5 id=\"examples-92\"><a class=\"doc-anchor\" href=\"#examples-92\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes = <span class=\"number\">0x12u8</span>.to_be_bytes();\n<span class=\"macro\">assert_eq!</span>(bytes, [<span class=\"number\">0x12</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.to_le_bytes\" class=\"fn\">to_le_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">1</a>]</h4></section></summary><div class=\"docblock\"><p>Return the memory representation of this integer as a byte array in\nlittle-endian byte order.</p>\n<h5 id=\"examples-93\"><a class=\"doc-anchor\" href=\"#examples-93\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes = <span class=\"number\">0x12u8</span>.to_le_bytes();\n<span class=\"macro\">assert_eq!</span>(bytes, [<span class=\"number\">0x12</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ne_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.to_ne_bytes\" class=\"fn\">to_ne_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">1</a>]</h4></section></summary><div class=\"docblock\"><p>Return the memory representation of this integer as a byte array in\nnative byte order.</p>\n<p>As the target platform’s native endianness is used, portable code\nshould use <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.to_be_bytes\" title=\"method u8::to_be_bytes\"><code>to_be_bytes</code></a> or <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.to_le_bytes\" title=\"method u8::to_le_bytes\"><code>to_le_bytes</code></a>, as appropriate,\ninstead.</p>\n<h5 id=\"examples-94\"><a class=\"doc-anchor\" href=\"#examples-94\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes = <span class=\"number\">0x12u8</span>.to_ne_bytes();\n<span class=\"macro\">assert_eq!</span>(\n    bytes,\n    <span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n        [<span class=\"number\">0x12</span>]\n    } <span class=\"kw\">else </span>{\n        [<span class=\"number\">0x12</span>]\n    }\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.from_be_bytes\" class=\"fn\">from_be_bytes</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">1</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Create a native endian integer value from its representation\nas a byte array in big endian.</p>\n<h5 id=\"examples-95\"><a class=\"doc-anchor\" href=\"#examples-95\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>value = u8::from_be_bytes([<span class=\"number\">0x12</span>]);\n<span class=\"macro\">assert_eq!</span>(value, <span class=\"number\">0x12</span>);</code></pre></div>\n<p>When starting from a slice rather than an array, fallible conversion APIs can be used:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>read_be_u8(input: <span class=\"kw-2\">&amp;mut &amp;</span>[u8]) -&gt; u8 {\n    <span class=\"kw\">let </span>(int_bytes, rest) = input.split_at(std::mem::size_of::&lt;u8&gt;());\n    <span class=\"kw-2\">*</span>input = rest;\n    u8::from_be_bytes(int_bytes.try_into().unwrap())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.from_le_bytes\" class=\"fn\">from_le_bytes</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">1</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Create a native endian integer value from its representation\nas a byte array in little endian.</p>\n<h5 id=\"examples-96\"><a class=\"doc-anchor\" href=\"#examples-96\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>value = u8::from_le_bytes([<span class=\"number\">0x12</span>]);\n<span class=\"macro\">assert_eq!</span>(value, <span class=\"number\">0x12</span>);</code></pre></div>\n<p>When starting from a slice rather than an array, fallible conversion APIs can be used:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>read_le_u8(input: <span class=\"kw-2\">&amp;mut &amp;</span>[u8]) -&gt; u8 {\n    <span class=\"kw\">let </span>(int_bytes, rest) = input.split_at(std::mem::size_of::&lt;u8&gt;());\n    <span class=\"kw-2\">*</span>input = rest;\n    u8::from_le_bytes(int_bytes.try_into().unwrap())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ne_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.from_ne_bytes\" class=\"fn\">from_ne_bytes</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">1</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Create a native endian integer value from its memory representation\nas a byte array in native endianness.</p>\n<p>As the target platform’s native endianness is used, portable code\nlikely wants to use <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.from_be_bytes\" title=\"associated function u8::from_be_bytes\"><code>from_be_bytes</code></a> or <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.from_le_bytes\" title=\"associated function u8::from_le_bytes\"><code>from_le_bytes</code></a>, as\nappropriate instead.</p>\n<h5 id=\"examples-97\"><a class=\"doc-anchor\" href=\"#examples-97\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>value = u8::from_ne_bytes(<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n    [<span class=\"number\">0x12</span>]\n} <span class=\"kw\">else </span>{\n    [<span class=\"number\">0x12</span>]\n});\n<span class=\"macro\">assert_eq!</span>(value, <span class=\"number\">0x12</span>);</code></pre></div>\n<p>When starting from a slice rather than an array, fallible conversion APIs can be used:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>read_ne_u8(input: <span class=\"kw-2\">&amp;mut &amp;</span>[u8]) -&gt; u8 {\n    <span class=\"kw\">let </span>(int_bytes, rest) = input.split_at(std::mem::size_of::&lt;u8&gt;());\n    <span class=\"kw-2\">*</span>input = rest;\n    u8::from_ne_bytes(int_bytes.try_into().unwrap())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecating in a future version: replaced by the <code>MIN</code> associated constant on this type</span></div></span></summary><div class=\"docblock\"><p>New code should prefer to use\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#associatedconstant.MIN\" title=\"associated constant u8::MIN\"><code>u8::MIN</code></a> instead.</p>\n<p>Returns the smallest value that can be represented by this integer type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#493-511\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecating in a future version: replaced by the <code>MAX</code> associated constant on this type</span></div></span></summary><div class=\"docblock\"><p>New code should prefer to use\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#associatedconstant.MAX\" title=\"associated constant u8::MAX\"><code>u8::MAX</code></a> instead.</p>\n<p>Returns the largest value that can be represented by this integer type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.widening_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85532\" title=\"Tracking issue for const_bigint_helper_methods\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#512\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.widening_mul\" class=\"fn\">widening_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bigint_helper_methods</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the complete product <code>self * rhs</code> without the possibility to overflow.</p>\n<p>This returns the low-order (wrapping) bits and the high-order (overflow) bits\nof the result as two separate values, in that order.</p>\n<p>If you also need to add a carry to the wide result, then you want\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.carrying_mul\" title=\"method u8::carrying_mul\"><code>Self::carrying_mul</code></a> instead.</p>\n<h5 id=\"examples-98\"><a class=\"doc-anchor\" href=\"#examples-98\">§</a>Examples</h5>\n<p>Basic usage:</p>\n<p>Please note that this example is shared between integer types.\nWhich explains why <code>u32</code> is used here.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.widening_mul(<span class=\"number\">2</span>), (<span class=\"number\">10</span>, <span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.widening_mul(<span class=\"number\">10</span>), (<span class=\"number\">1410065408</span>, <span class=\"number\">2</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.carrying_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/85532\" title=\"Tracking issue for bigint_helper_methods\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#512\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.carrying_mul\" class=\"fn\">carrying_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, carry: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bigint_helper_methods</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the “full multiplication” <code>self * rhs + carry</code>\nwithout the possibility to overflow.</p>\n<p>This returns the low-order (wrapping) bits and the high-order (overflow) bits\nof the result as two separate values, in that order.</p>\n<p>Performs “long multiplication” which takes in an extra amount to add, and may return an\nadditional amount of overflow. This allows for chaining together multiple\nmultiplications to create “big integers” which represent larger values.</p>\n<p>If you don’t need the <code>carry</code>, then you can use <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.widening_mul\" title=\"method u8::widening_mul\"><code>Self::widening_mul</code></a> instead.</p>\n<h5 id=\"examples-99\"><a class=\"doc-anchor\" href=\"#examples-99\">§</a>Examples</h5>\n<p>Basic usage:</p>\n<p>Please note that this example is shared between integer types.\nWhich explains why <code>u32</code> is used here.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.carrying_mul(<span class=\"number\">2</span>, <span class=\"number\">0</span>), (<span class=\"number\">10</span>, <span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.carrying_mul(<span class=\"number\">2</span>, <span class=\"number\">10</span>), (<span class=\"number\">20</span>, <span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.carrying_mul(<span class=\"number\">10</span>, <span class=\"number\">0</span>), (<span class=\"number\">1410065408</span>, <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.carrying_mul(<span class=\"number\">10</span>, <span class=\"number\">10</span>), (<span class=\"number\">1410065418</span>, <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(u8::MAX.carrying_mul(u8::MAX, u8::MAX), (<span class=\"number\">0</span>, u8::MAX));</code></pre></div>\n<p>This is the core operation needed for scalar multiplication when\nimplementing it for wider-than-native types.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"kw\">fn </span>scalar_mul_eq(little_endian_digits: <span class=\"kw-2\">&amp;mut </span>Vec&lt;u16&gt;, multiplicand: u16) {\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>carry = <span class=\"number\">0</span>;\n    <span class=\"kw\">for </span>d <span class=\"kw\">in </span>little_endian_digits.iter_mut() {\n        (<span class=\"kw-2\">*</span>d, carry) = d.carrying_mul(multiplicand, carry);\n    }\n    <span class=\"kw\">if </span>carry != <span class=\"number\">0 </span>{\n        little_endian_digits.push(carry);\n    }\n}\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = <span class=\"macro\">vec!</span>[<span class=\"number\">10</span>, <span class=\"number\">20</span>];\nscalar_mul_eq(<span class=\"kw-2\">&amp;mut </span>v, <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(v, [<span class=\"number\">30</span>, <span class=\"number\">60</span>]);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x87654321_u64 </span>* <span class=\"number\">0xFEED</span>, <span class=\"number\">0x86D3D159E38D</span>);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = <span class=\"macro\">vec!</span>[<span class=\"number\">0x4321</span>, <span class=\"number\">0x8765</span>];\nscalar_mul_eq(<span class=\"kw-2\">&amp;mut </span>v, <span class=\"number\">0xFEED</span>);\n<span class=\"macro\">assert_eq!</span>(v, [<span class=\"number\">0xE38D</span>, <span class=\"number\">0xD159</span>, <span class=\"number\">0x86D3</span>]);</code></pre></div>\n<p>If <code>carry</code> is zero, this is similar to <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.overflowing_mul\" title=\"method u8::overflowing_mul\"><code>overflowing_mul</code></a>,\nexcept that it gives the value of the overflow instead of just whether one happened:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"kw\">let </span>r = u8::carrying_mul(<span class=\"number\">7</span>, <span class=\"number\">13</span>, <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>((r.<span class=\"number\">0</span>, r.<span class=\"number\">1 </span>!= <span class=\"number\">0</span>), u8::overflowing_mul(<span class=\"number\">7</span>, <span class=\"number\">13</span>));\n<span class=\"kw\">let </span>r = u8::carrying_mul(<span class=\"number\">13</span>, <span class=\"number\">42</span>, <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>((r.<span class=\"number\">0</span>, r.<span class=\"number\">1 </span>!= <span class=\"number\">0</span>), u8::overflowing_mul(<span class=\"number\">13</span>, <span class=\"number\">42</span>));</code></pre></div>\n<p>The value of the first field in the returned tuple matches what you’d get\nby combining the <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.wrapping_mul\" title=\"method u8::wrapping_mul\"><code>wrapping_mul</code></a> and\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.wrapping_add\" title=\"method u8::wrapping_add\"><code>wrapping_add</code></a> methods:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"macro\">assert_eq!</span>(\n    <span class=\"number\">789_u16</span>.carrying_mul(<span class=\"number\">456</span>, <span class=\"number\">123</span>).<span class=\"number\">0</span>,\n    <span class=\"number\">789_u16</span>.wrapping_mul(<span class=\"number\">456</span>).wrapping_add(<span class=\"number\">123</span>),\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.midpoint\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/110840\" title=\"Tracking issue for const_num_midpoint\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#513\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.midpoint\" class=\"fn\">midpoint</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>num_midpoint</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the middle point of <code>self</code> and <code>rhs</code>.</p>\n<p><code>midpoint(a, b)</code> is <code>(a + b) &gt;&gt; 1</code> as if it were performed in a\nsufficiently-large signed integral type. This implies that the result is\nalways rounded towards negative infinity and that no overflow will ever occur.</p>\n<h5 id=\"examples-100\"><a class=\"doc-anchor\" href=\"#examples-100\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(num_midpoint)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u8</span>.midpoint(<span class=\"number\">4</span>), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u8</span>.midpoint(<span class=\"number\">4</span>), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_ascii\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.23.0, const since 1.43.0\">1.23.0 (const: 1.43.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#530\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.is_ascii\" class=\"fn\">is_ascii</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks if the value is within the ASCII range.</p>\n<h5 id=\"examples-101\"><a class=\"doc-anchor\" href=\"#examples-101\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>ascii = <span class=\"number\">97u8</span>;\n<span class=\"kw\">let </span>non_ascii = <span class=\"number\">150u8</span>;\n\n<span class=\"macro\">assert!</span>(ascii.is_ascii());\n<span class=\"macro\">assert!</span>(!non_ascii.is_ascii());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ascii\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#539\">source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.as_ascii\" class=\"fn\">as_ascii</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ascii/ascii_char/enum.AsciiChar.html\" title=\"enum core::ascii::ascii_char::AsciiChar\">AsciiChar</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>ascii_char</code>)</span></div></span></summary><div class=\"docblock\"><p>If the value of this byte is within the ASCII range, returns it as an\n<a href=\"https://doc.rust-lang.org/nightly/core/ascii/ascii_char/enum.AsciiChar.html\" title=\"enum core::ascii::ascii_char::AsciiChar\">ASCII character</a>.  Otherwise, returns <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ascii_uppercase\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.23.0, const since 1.52.0\">1.23.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#563\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.to_ascii_uppercase\" class=\"fn\">to_ascii_uppercase</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Makes a copy of the value in its ASCII upper case equivalent.</p>\n<p>ASCII letters ‘a’ to ‘z’ are mapped to ‘A’ to ‘Z’,\nbut non-ASCII letters are unchanged.</p>\n<p>To uppercase the value in-place, use <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.make_ascii_uppercase\" title=\"method u8::make_ascii_uppercase\"><code>make_ascii_uppercase</code></a>.</p>\n<h5 id=\"examples-102\"><a class=\"doc-anchor\" href=\"#examples-102\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>lowercase_a = <span class=\"number\">97u8</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">65</span>, lowercase_a.to_ascii_uppercase());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ascii_lowercase\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.23.0, const since 1.52.0\">1.23.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#588\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.to_ascii_lowercase\" class=\"fn\">to_ascii_lowercase</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Makes a copy of the value in its ASCII lower case equivalent.</p>\n<p>ASCII letters ‘A’ to ‘Z’ are mapped to ‘a’ to ‘z’,\nbut non-ASCII letters are unchanged.</p>\n<p>To lowercase the value in-place, use <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.make_ascii_lowercase\" title=\"method u8::make_ascii_lowercase\"><code>make_ascii_lowercase</code></a>.</p>\n<h5 id=\"examples-103\"><a class=\"doc-anchor\" href=\"#examples-103\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>uppercase_a = <span class=\"number\">65u8</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">97</span>, uppercase_a.to_ascii_lowercase());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq_ignore_ascii_case\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.23.0, const since 1.52.0\">1.23.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#614\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.eq_ignore_ascii_case\" class=\"fn\">eq_ignore_ascii_case</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks that two values are an ASCII case-insensitive match.</p>\n<p>This is equivalent to <code>to_ascii_lowercase(a) == to_ascii_lowercase(b)</code>.</p>\n<h5 id=\"examples-104\"><a class=\"doc-anchor\" href=\"#examples-104\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>lowercase_a = <span class=\"number\">97u8</span>;\n<span class=\"kw\">let </span>uppercase_a = <span class=\"number\">65u8</span>;\n\n<span class=\"macro\">assert!</span>(lowercase_a.eq_ignore_ascii_case(<span class=\"kw-2\">&amp;</span>uppercase_a));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.make_ascii_uppercase\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.23.0\">1.23.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#639\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.make_ascii_uppercase\" class=\"fn\">make_ascii_uppercase</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Converts this value to its ASCII upper case equivalent in-place.</p>\n<p>ASCII letters ‘a’ to ‘z’ are mapped to ‘A’ to ‘Z’,\nbut non-ASCII letters are unchanged.</p>\n<p>To return a new uppercased value without modifying the existing one, use\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.to_ascii_uppercase\" title=\"method u8::to_ascii_uppercase\"><code>to_ascii_uppercase</code></a>.</p>\n<h5 id=\"examples-105\"><a class=\"doc-anchor\" href=\"#examples-105\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>byte = <span class=\"string\">b'a'</span>;\n\nbyte.make_ascii_uppercase();\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">b'A'</span>, byte);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.make_ascii_lowercase\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.23.0\">1.23.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#664\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.make_ascii_lowercase\" class=\"fn\">make_ascii_lowercase</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Converts this value to its ASCII lower case equivalent in-place.</p>\n<p>ASCII letters ‘A’ to ‘Z’ are mapped to ‘a’ to ‘z’,\nbut non-ASCII letters are unchanged.</p>\n<p>To return a new lowercased value without modifying the existing one, use\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.to_ascii_lowercase\" title=\"method u8::to_ascii_lowercase\"><code>to_ascii_lowercase</code></a>.</p>\n<h5 id=\"examples-106\"><a class=\"doc-anchor\" href=\"#examples-106\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>byte = <span class=\"string\">b'A'</span>;\n\nbyte.make_ascii_lowercase();\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">b'a'</span>, byte);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_ascii_alphabetic\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.24.0, const since 1.47.0\">1.24.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#700\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.is_ascii_alphabetic\" class=\"fn\">is_ascii_alphabetic</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks if the value is an ASCII alphabetic character:</p>\n<ul>\n<li>U+0041 ‘A’ ..= U+005A ‘Z’, or</li>\n<li>U+0061 ‘a’ ..= U+007A ‘z’.</li>\n</ul>\n<h5 id=\"examples-107\"><a class=\"doc-anchor\" href=\"#examples-107\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>uppercase_a = <span class=\"string\">b'A'</span>;\n<span class=\"kw\">let </span>uppercase_g = <span class=\"string\">b'G'</span>;\n<span class=\"kw\">let </span>a = <span class=\"string\">b'a'</span>;\n<span class=\"kw\">let </span>g = <span class=\"string\">b'g'</span>;\n<span class=\"kw\">let </span>zero = <span class=\"string\">b'0'</span>;\n<span class=\"kw\">let </span>percent = <span class=\"string\">b'%'</span>;\n<span class=\"kw\">let </span>space = <span class=\"string\">b' '</span>;\n<span class=\"kw\">let </span>lf = <span class=\"string\">b'\\n'</span>;\n<span class=\"kw\">let </span>esc = <span class=\"string\">b'\\x1b'</span>;\n\n<span class=\"macro\">assert!</span>(uppercase_a.is_ascii_alphabetic());\n<span class=\"macro\">assert!</span>(uppercase_g.is_ascii_alphabetic());\n<span class=\"macro\">assert!</span>(a.is_ascii_alphabetic());\n<span class=\"macro\">assert!</span>(g.is_ascii_alphabetic());\n<span class=\"macro\">assert!</span>(!zero.is_ascii_alphabetic());\n<span class=\"macro\">assert!</span>(!percent.is_ascii_alphabetic());\n<span class=\"macro\">assert!</span>(!space.is_ascii_alphabetic());\n<span class=\"macro\">assert!</span>(!lf.is_ascii_alphabetic());\n<span class=\"macro\">assert!</span>(!esc.is_ascii_alphabetic());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_ascii_uppercase\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.24.0, const since 1.47.0\">1.24.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#734\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.is_ascii_uppercase\" class=\"fn\">is_ascii_uppercase</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks if the value is an ASCII uppercase character:\nU+0041 ‘A’ ..= U+005A ‘Z’.</p>\n<h5 id=\"examples-108\"><a class=\"doc-anchor\" href=\"#examples-108\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>uppercase_a = <span class=\"string\">b'A'</span>;\n<span class=\"kw\">let </span>uppercase_g = <span class=\"string\">b'G'</span>;\n<span class=\"kw\">let </span>a = <span class=\"string\">b'a'</span>;\n<span class=\"kw\">let </span>g = <span class=\"string\">b'g'</span>;\n<span class=\"kw\">let </span>zero = <span class=\"string\">b'0'</span>;\n<span class=\"kw\">let </span>percent = <span class=\"string\">b'%'</span>;\n<span class=\"kw\">let </span>space = <span class=\"string\">b' '</span>;\n<span class=\"kw\">let </span>lf = <span class=\"string\">b'\\n'</span>;\n<span class=\"kw\">let </span>esc = <span class=\"string\">b'\\x1b'</span>;\n\n<span class=\"macro\">assert!</span>(uppercase_a.is_ascii_uppercase());\n<span class=\"macro\">assert!</span>(uppercase_g.is_ascii_uppercase());\n<span class=\"macro\">assert!</span>(!a.is_ascii_uppercase());\n<span class=\"macro\">assert!</span>(!g.is_ascii_uppercase());\n<span class=\"macro\">assert!</span>(!zero.is_ascii_uppercase());\n<span class=\"macro\">assert!</span>(!percent.is_ascii_uppercase());\n<span class=\"macro\">assert!</span>(!space.is_ascii_uppercase());\n<span class=\"macro\">assert!</span>(!lf.is_ascii_uppercase());\n<span class=\"macro\">assert!</span>(!esc.is_ascii_uppercase());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_ascii_lowercase\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.24.0, const since 1.47.0\">1.24.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#768\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.is_ascii_lowercase\" class=\"fn\">is_ascii_lowercase</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks if the value is an ASCII lowercase character:\nU+0061 ‘a’ ..= U+007A ‘z’.</p>\n<h5 id=\"examples-109\"><a class=\"doc-anchor\" href=\"#examples-109\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>uppercase_a = <span class=\"string\">b'A'</span>;\n<span class=\"kw\">let </span>uppercase_g = <span class=\"string\">b'G'</span>;\n<span class=\"kw\">let </span>a = <span class=\"string\">b'a'</span>;\n<span class=\"kw\">let </span>g = <span class=\"string\">b'g'</span>;\n<span class=\"kw\">let </span>zero = <span class=\"string\">b'0'</span>;\n<span class=\"kw\">let </span>percent = <span class=\"string\">b'%'</span>;\n<span class=\"kw\">let </span>space = <span class=\"string\">b' '</span>;\n<span class=\"kw\">let </span>lf = <span class=\"string\">b'\\n'</span>;\n<span class=\"kw\">let </span>esc = <span class=\"string\">b'\\x1b'</span>;\n\n<span class=\"macro\">assert!</span>(!uppercase_a.is_ascii_lowercase());\n<span class=\"macro\">assert!</span>(!uppercase_g.is_ascii_lowercase());\n<span class=\"macro\">assert!</span>(a.is_ascii_lowercase());\n<span class=\"macro\">assert!</span>(g.is_ascii_lowercase());\n<span class=\"macro\">assert!</span>(!zero.is_ascii_lowercase());\n<span class=\"macro\">assert!</span>(!percent.is_ascii_lowercase());\n<span class=\"macro\">assert!</span>(!space.is_ascii_lowercase());\n<span class=\"macro\">assert!</span>(!lf.is_ascii_lowercase());\n<span class=\"macro\">assert!</span>(!esc.is_ascii_lowercase());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_ascii_alphanumeric\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.24.0, const since 1.47.0\">1.24.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#805\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.is_ascii_alphanumeric\" class=\"fn\">is_ascii_alphanumeric</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks if the value is an ASCII alphanumeric character:</p>\n<ul>\n<li>U+0041 ‘A’ ..= U+005A ‘Z’, or</li>\n<li>U+0061 ‘a’ ..= U+007A ‘z’, or</li>\n<li>U+0030 ‘0’ ..= U+0039 ‘9’.</li>\n</ul>\n<h5 id=\"examples-110\"><a class=\"doc-anchor\" href=\"#examples-110\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>uppercase_a = <span class=\"string\">b'A'</span>;\n<span class=\"kw\">let </span>uppercase_g = <span class=\"string\">b'G'</span>;\n<span class=\"kw\">let </span>a = <span class=\"string\">b'a'</span>;\n<span class=\"kw\">let </span>g = <span class=\"string\">b'g'</span>;\n<span class=\"kw\">let </span>zero = <span class=\"string\">b'0'</span>;\n<span class=\"kw\">let </span>percent = <span class=\"string\">b'%'</span>;\n<span class=\"kw\">let </span>space = <span class=\"string\">b' '</span>;\n<span class=\"kw\">let </span>lf = <span class=\"string\">b'\\n'</span>;\n<span class=\"kw\">let </span>esc = <span class=\"string\">b'\\x1b'</span>;\n\n<span class=\"macro\">assert!</span>(uppercase_a.is_ascii_alphanumeric());\n<span class=\"macro\">assert!</span>(uppercase_g.is_ascii_alphanumeric());\n<span class=\"macro\">assert!</span>(a.is_ascii_alphanumeric());\n<span class=\"macro\">assert!</span>(g.is_ascii_alphanumeric());\n<span class=\"macro\">assert!</span>(zero.is_ascii_alphanumeric());\n<span class=\"macro\">assert!</span>(!percent.is_ascii_alphanumeric());\n<span class=\"macro\">assert!</span>(!space.is_ascii_alphanumeric());\n<span class=\"macro\">assert!</span>(!lf.is_ascii_alphanumeric());\n<span class=\"macro\">assert!</span>(!esc.is_ascii_alphanumeric());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_ascii_digit\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.24.0, const since 1.47.0\">1.24.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#839\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.is_ascii_digit\" class=\"fn\">is_ascii_digit</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks if the value is an ASCII decimal digit:\nU+0030 ‘0’ ..= U+0039 ‘9’.</p>\n<h5 id=\"examples-111\"><a class=\"doc-anchor\" href=\"#examples-111\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>uppercase_a = <span class=\"string\">b'A'</span>;\n<span class=\"kw\">let </span>uppercase_g = <span class=\"string\">b'G'</span>;\n<span class=\"kw\">let </span>a = <span class=\"string\">b'a'</span>;\n<span class=\"kw\">let </span>g = <span class=\"string\">b'g'</span>;\n<span class=\"kw\">let </span>zero = <span class=\"string\">b'0'</span>;\n<span class=\"kw\">let </span>percent = <span class=\"string\">b'%'</span>;\n<span class=\"kw\">let </span>space = <span class=\"string\">b' '</span>;\n<span class=\"kw\">let </span>lf = <span class=\"string\">b'\\n'</span>;\n<span class=\"kw\">let </span>esc = <span class=\"string\">b'\\x1b'</span>;\n\n<span class=\"macro\">assert!</span>(!uppercase_a.is_ascii_digit());\n<span class=\"macro\">assert!</span>(!uppercase_g.is_ascii_digit());\n<span class=\"macro\">assert!</span>(!a.is_ascii_digit());\n<span class=\"macro\">assert!</span>(!g.is_ascii_digit());\n<span class=\"macro\">assert!</span>(zero.is_ascii_digit());\n<span class=\"macro\">assert!</span>(!percent.is_ascii_digit());\n<span class=\"macro\">assert!</span>(!space.is_ascii_digit());\n<span class=\"macro\">assert!</span>(!lf.is_ascii_digit());\n<span class=\"macro\">assert!</span>(!esc.is_ascii_digit());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_ascii_octdigit\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/101288\" title=\"Tracking issue for is_ascii_octdigit\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#871\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.is_ascii_octdigit\" class=\"fn\">is_ascii_octdigit</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>is_ascii_octdigit</code>)</span></div></span></summary><div class=\"docblock\"><p>Checks if the value is an ASCII octal digit:\nU+0030 ‘0’ ..= U+0037 ‘7’.</p>\n<h5 id=\"examples-112\"><a class=\"doc-anchor\" href=\"#examples-112\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(is_ascii_octdigit)]\n\n</span><span class=\"kw\">let </span>uppercase_a = <span class=\"string\">b'A'</span>;\n<span class=\"kw\">let </span>a = <span class=\"string\">b'a'</span>;\n<span class=\"kw\">let </span>zero = <span class=\"string\">b'0'</span>;\n<span class=\"kw\">let </span>seven = <span class=\"string\">b'7'</span>;\n<span class=\"kw\">let </span>nine = <span class=\"string\">b'9'</span>;\n<span class=\"kw\">let </span>percent = <span class=\"string\">b'%'</span>;\n<span class=\"kw\">let </span>lf = <span class=\"string\">b'\\n'</span>;\n\n<span class=\"macro\">assert!</span>(!uppercase_a.is_ascii_octdigit());\n<span class=\"macro\">assert!</span>(!a.is_ascii_octdigit());\n<span class=\"macro\">assert!</span>(zero.is_ascii_octdigit());\n<span class=\"macro\">assert!</span>(seven.is_ascii_octdigit());\n<span class=\"macro\">assert!</span>(!nine.is_ascii_octdigit());\n<span class=\"macro\">assert!</span>(!percent.is_ascii_octdigit());\n<span class=\"macro\">assert!</span>(!lf.is_ascii_octdigit());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_ascii_hexdigit\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.24.0, const since 1.47.0\">1.24.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#908\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.is_ascii_hexdigit\" class=\"fn\">is_ascii_hexdigit</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks if the value is an ASCII hexadecimal digit:</p>\n<ul>\n<li>U+0030 ‘0’ ..= U+0039 ‘9’, or</li>\n<li>U+0041 ‘A’ ..= U+0046 ‘F’, or</li>\n<li>U+0061 ‘a’ ..= U+0066 ‘f’.</li>\n</ul>\n<h5 id=\"examples-113\"><a class=\"doc-anchor\" href=\"#examples-113\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>uppercase_a = <span class=\"string\">b'A'</span>;\n<span class=\"kw\">let </span>uppercase_g = <span class=\"string\">b'G'</span>;\n<span class=\"kw\">let </span>a = <span class=\"string\">b'a'</span>;\n<span class=\"kw\">let </span>g = <span class=\"string\">b'g'</span>;\n<span class=\"kw\">let </span>zero = <span class=\"string\">b'0'</span>;\n<span class=\"kw\">let </span>percent = <span class=\"string\">b'%'</span>;\n<span class=\"kw\">let </span>space = <span class=\"string\">b' '</span>;\n<span class=\"kw\">let </span>lf = <span class=\"string\">b'\\n'</span>;\n<span class=\"kw\">let </span>esc = <span class=\"string\">b'\\x1b'</span>;\n\n<span class=\"macro\">assert!</span>(uppercase_a.is_ascii_hexdigit());\n<span class=\"macro\">assert!</span>(!uppercase_g.is_ascii_hexdigit());\n<span class=\"macro\">assert!</span>(a.is_ascii_hexdigit());\n<span class=\"macro\">assert!</span>(!g.is_ascii_hexdigit());\n<span class=\"macro\">assert!</span>(zero.is_ascii_hexdigit());\n<span class=\"macro\">assert!</span>(!percent.is_ascii_hexdigit());\n<span class=\"macro\">assert!</span>(!space.is_ascii_hexdigit());\n<span class=\"macro\">assert!</span>(!lf.is_ascii_hexdigit());\n<span class=\"macro\">assert!</span>(!esc.is_ascii_hexdigit());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_ascii_punctuation\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.24.0, const since 1.47.0\">1.24.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#946\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.is_ascii_punctuation\" class=\"fn\">is_ascii_punctuation</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks if the value is an ASCII punctuation character:</p>\n<ul>\n<li>U+0021 ..= U+002F <code>! &quot; # $ % &amp; ' ( ) * + , - . /</code>, or</li>\n<li>U+003A ..= U+0040 <code>: ; &lt; = &gt; ? @</code>, or</li>\n<li>U+005B ..= U+0060 <code>[ \\ ] ^ _ `</code>, or</li>\n<li>U+007B ..= U+007E <code>{ | } ~</code></li>\n</ul>\n<h5 id=\"examples-114\"><a class=\"doc-anchor\" href=\"#examples-114\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>uppercase_a = <span class=\"string\">b'A'</span>;\n<span class=\"kw\">let </span>uppercase_g = <span class=\"string\">b'G'</span>;\n<span class=\"kw\">let </span>a = <span class=\"string\">b'a'</span>;\n<span class=\"kw\">let </span>g = <span class=\"string\">b'g'</span>;\n<span class=\"kw\">let </span>zero = <span class=\"string\">b'0'</span>;\n<span class=\"kw\">let </span>percent = <span class=\"string\">b'%'</span>;\n<span class=\"kw\">let </span>space = <span class=\"string\">b' '</span>;\n<span class=\"kw\">let </span>lf = <span class=\"string\">b'\\n'</span>;\n<span class=\"kw\">let </span>esc = <span class=\"string\">b'\\x1b'</span>;\n\n<span class=\"macro\">assert!</span>(!uppercase_a.is_ascii_punctuation());\n<span class=\"macro\">assert!</span>(!uppercase_g.is_ascii_punctuation());\n<span class=\"macro\">assert!</span>(!a.is_ascii_punctuation());\n<span class=\"macro\">assert!</span>(!g.is_ascii_punctuation());\n<span class=\"macro\">assert!</span>(!zero.is_ascii_punctuation());\n<span class=\"macro\">assert!</span>(percent.is_ascii_punctuation());\n<span class=\"macro\">assert!</span>(!space.is_ascii_punctuation());\n<span class=\"macro\">assert!</span>(!lf.is_ascii_punctuation());\n<span class=\"macro\">assert!</span>(!esc.is_ascii_punctuation());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_ascii_graphic\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.24.0, const since 1.47.0\">1.24.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#983\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.is_ascii_graphic\" class=\"fn\">is_ascii_graphic</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks if the value is an ASCII graphic character:\nU+0021 ‘!’ ..= U+007E ‘~’.</p>\n<h5 id=\"examples-115\"><a class=\"doc-anchor\" href=\"#examples-115\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>uppercase_a = <span class=\"string\">b'A'</span>;\n<span class=\"kw\">let </span>uppercase_g = <span class=\"string\">b'G'</span>;\n<span class=\"kw\">let </span>a = <span class=\"string\">b'a'</span>;\n<span class=\"kw\">let </span>g = <span class=\"string\">b'g'</span>;\n<span class=\"kw\">let </span>zero = <span class=\"string\">b'0'</span>;\n<span class=\"kw\">let </span>percent = <span class=\"string\">b'%'</span>;\n<span class=\"kw\">let </span>space = <span class=\"string\">b' '</span>;\n<span class=\"kw\">let </span>lf = <span class=\"string\">b'\\n'</span>;\n<span class=\"kw\">let </span>esc = <span class=\"string\">b'\\x1b'</span>;\n\n<span class=\"macro\">assert!</span>(uppercase_a.is_ascii_graphic());\n<span class=\"macro\">assert!</span>(uppercase_g.is_ascii_graphic());\n<span class=\"macro\">assert!</span>(a.is_ascii_graphic());\n<span class=\"macro\">assert!</span>(g.is_ascii_graphic());\n<span class=\"macro\">assert!</span>(zero.is_ascii_graphic());\n<span class=\"macro\">assert!</span>(percent.is_ascii_graphic());\n<span class=\"macro\">assert!</span>(!space.is_ascii_graphic());\n<span class=\"macro\">assert!</span>(!lf.is_ascii_graphic());\n<span class=\"macro\">assert!</span>(!esc.is_ascii_graphic());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_ascii_whitespace\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.24.0, const since 1.47.0\">1.24.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#1034\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.is_ascii_whitespace\" class=\"fn\">is_ascii_whitespace</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks if the value is an ASCII whitespace character:\nU+0020 SPACE, U+0009 HORIZONTAL TAB, U+000A LINE FEED,\nU+000C FORM FEED, or U+000D CARRIAGE RETURN.</p>\n<p>Rust uses the WhatWG Infra Standard’s <a href=\"https://infra.spec.whatwg.org/#ascii-whitespace\">definition of ASCII\nwhitespace</a>. There are several other definitions in\nwide use. For instance, <a href=\"https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap07.html#tag_07_03_01\">the POSIX locale</a> includes\nU+000B VERTICAL TAB as well as all the above characters,\nbut—from the very same specification—<a href=\"https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_05\">the default rule for\n“field splitting” in the Bourne shell</a> considers <em>only</em>\nSPACE, HORIZONTAL TAB, and LINE FEED as whitespace.</p>\n<p>If you are writing a program that will process an existing\nfile format, check what that format’s definition of whitespace is\nbefore using this function.</p>\n<h5 id=\"examples-116\"><a class=\"doc-anchor\" href=\"#examples-116\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>uppercase_a = <span class=\"string\">b'A'</span>;\n<span class=\"kw\">let </span>uppercase_g = <span class=\"string\">b'G'</span>;\n<span class=\"kw\">let </span>a = <span class=\"string\">b'a'</span>;\n<span class=\"kw\">let </span>g = <span class=\"string\">b'g'</span>;\n<span class=\"kw\">let </span>zero = <span class=\"string\">b'0'</span>;\n<span class=\"kw\">let </span>percent = <span class=\"string\">b'%'</span>;\n<span class=\"kw\">let </span>space = <span class=\"string\">b' '</span>;\n<span class=\"kw\">let </span>lf = <span class=\"string\">b'\\n'</span>;\n<span class=\"kw\">let </span>esc = <span class=\"string\">b'\\x1b'</span>;\n\n<span class=\"macro\">assert!</span>(!uppercase_a.is_ascii_whitespace());\n<span class=\"macro\">assert!</span>(!uppercase_g.is_ascii_whitespace());\n<span class=\"macro\">assert!</span>(!a.is_ascii_whitespace());\n<span class=\"macro\">assert!</span>(!g.is_ascii_whitespace());\n<span class=\"macro\">assert!</span>(!zero.is_ascii_whitespace());\n<span class=\"macro\">assert!</span>(!percent.is_ascii_whitespace());\n<span class=\"macro\">assert!</span>(space.is_ascii_whitespace());\n<span class=\"macro\">assert!</span>(lf.is_ascii_whitespace());\n<span class=\"macro\">assert!</span>(!esc.is_ascii_whitespace());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_ascii_control\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.24.0, const since 1.47.0\">1.24.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#1070\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.is_ascii_control\" class=\"fn\">is_ascii_control</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks if the value is an ASCII control character:\nU+0000 NUL ..= U+001F UNIT SEPARATOR, or U+007F DELETE.\nNote that most ASCII whitespace characters are control\ncharacters, but SPACE is not.</p>\n<h5 id=\"examples-117\"><a class=\"doc-anchor\" href=\"#examples-117\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>uppercase_a = <span class=\"string\">b'A'</span>;\n<span class=\"kw\">let </span>uppercase_g = <span class=\"string\">b'G'</span>;\n<span class=\"kw\">let </span>a = <span class=\"string\">b'a'</span>;\n<span class=\"kw\">let </span>g = <span class=\"string\">b'g'</span>;\n<span class=\"kw\">let </span>zero = <span class=\"string\">b'0'</span>;\n<span class=\"kw\">let </span>percent = <span class=\"string\">b'%'</span>;\n<span class=\"kw\">let </span>space = <span class=\"string\">b' '</span>;\n<span class=\"kw\">let </span>lf = <span class=\"string\">b'\\n'</span>;\n<span class=\"kw\">let </span>esc = <span class=\"string\">b'\\x1b'</span>;\n\n<span class=\"macro\">assert!</span>(!uppercase_a.is_ascii_control());\n<span class=\"macro\">assert!</span>(!uppercase_g.is_ascii_control());\n<span class=\"macro\">assert!</span>(!a.is_ascii_control());\n<span class=\"macro\">assert!</span>(!g.is_ascii_control());\n<span class=\"macro\">assert!</span>(!zero.is_ascii_control());\n<span class=\"macro\">assert!</span>(!percent.is_ascii_control());\n<span class=\"macro\">assert!</span>(!space.is_ascii_control());\n<span class=\"macro\">assert!</span>(lf.is_ascii_control());\n<span class=\"macro\">assert!</span>(esc.is_ascii_control());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.escape_ascii\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.60.0\">1.60.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#1096\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#tymethod.escape_ascii\" class=\"fn\">escape_ascii</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ascii/struct.EscapeDefault.html\" title=\"struct core::ascii::EscapeDefault\">EscapeDefault</a></h4></section></summary><div class=\"docblock\"><p>Returns an iterator that produces an escaped version of a <code>u8</code>,\ntreating it as an ASCII character.</p>\n<p>The behavior is identical to <a href=\"https://doc.rust-lang.org/nightly/core/ascii/fn.escape_default.html\" title=\"fn core::ascii::escape_default\"><code>ascii::escape_default</code></a>.</p>\n<h5 id=\"examples-118\"><a class=\"doc-anchor\" href=\"#examples-118\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"0\"</span>, <span class=\"string\">b'0'</span>.escape_ascii().to_string());\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"\\\\t\"</span>, <span class=\"string\">b'\\t'</span>.escape_ascii().to_string());\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"\\\\r\"</span>, <span class=\"string\">b'\\r'</span>.escape_ascii().to_string());\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"\\\\n\"</span>, <span class=\"string\">b'\\n'</span>.escape_ascii().to_string());\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"\\\\'\"</span>, <span class=\"string\">b'\\''</span>.escape_ascii().to_string());\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"\\\\\\\"\"</span>, <span class=\"string\">b'\"'</span>.escape_ascii().to_string());\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"\\\\\\\\\"</span>, <span class=\"string\">b'\\\\'</span>.escape_ascii().to_string());\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"\\\\x9d\"</span>, <span class=\"string\">b'\\x9d'</span>.escape_ascii().to_string());</code></pre></div>\n</div></details></div></details>",0,"network::HandlerWorkType"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()