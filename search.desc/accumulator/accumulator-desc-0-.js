searchState.loadedDescShard("accumulator", 0, "This module provides algorithms for accessing and updating …\nDefines the interface between <code>MerkleAccumulator</code> and …\nIn this live Merkle Accumulator algorithms.\nGiven an existing Merkle Accumulator (represented by …\nReturns the argument unchanged.\nReturn <code>HashValue</code> carried by the node at <code>Position</code>.\nGets a proof that shows the full accumulator is consistent …\nFrom left to right, gets frozen subtree root hashes of the …\nGet proof of inclusion of the leaf at <code>leaf_index</code> in this …\nGets a proof that shows a range of leaves are part of the …\nSee <code>get_range_proof</code>. This is the version of it that returns\nGet root hash at a specific version (hence num_leaves).\nCalls <code>U::from(self)</code>.")