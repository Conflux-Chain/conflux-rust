searchState.loadedDescShard("cfx_internal_common", 0, "The parameters needed to determine the chain_id based on …\nPreconfigured chain_id.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe function return the chain_id with given parameters\nThe function return the chain_id with given parameters\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nreceipts_root and logs_bloom got after an epoch is …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis function will set a new lower boundary height of …\nTry to update <code>upper_bound</code> according to a new executed …\nCheck if the state can be accessed for reading.\nReturns the argument unchanged.\n<code>None</code> means both spaces are kept. This field is not used if …\nAll states of <code>full_state_space</code> are available for reading …\nCalls <code>U::from(self)</code>.\nThis is the lower boundary height of available state where …\nThis is the hash of blocks in pivot chain based on current …\nThis function will record the most recent …\nThis is the upper boundary height of available state.\nAuxiliary information for deferred state root, which is …\nThis struct is stored as state execution result and is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")