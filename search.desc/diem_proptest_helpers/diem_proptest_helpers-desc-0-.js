searchState.loadedDescShard("diem_proptest_helpers", 0, "A set of elements, each with an associated key, that grows …\nWrapper for <code>proptest</code>’s <code>Index</code> that allows <code>AsRef</code> to work.\nAn efficient representation of a vector with repeated …\nContext for generating single values out of strategies.\nAdvances the valid subset to the provided index. After the …\nReturns a slice containing the items in the <em>current subset</em>.\nCreates a new value generator with a deterministic RNG.\nExtends this <code>RepeatVec</code> by logically adding <code>size</code> copies of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerates a single value for this strategy.\nReturns the item at location <code>at</code>. The return value is a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the <em>current subset</em> contains no elements.\nReturns <code>true</code> if this <code>RepeatVec</code> has no <em>logical</em> elements.\nReturns the number of elements in the <em>current subset</em>.\nReturns the <em>logical</em> number of elements in this <code>RepeatVec</code>.\nCreates a new, empty <code>RepeatVec</code>.\nCreates a new value generator with the default RNG.\nCreates a new value generator with provided RNG\nGiven a maximum value <code>max</code> and a list of <code>Index</code> instances, …\nChooses an (index, value) pair from the <em>current subset</em> …\nGiven a maximum value <code>max</code> and a slice of <code>Index</code> instances, …\nPicks out elements uniformly randomly from this <code>RepeatVec</code>, …\nPicks out indexes uniformly randomly from this <code>RepeatVec</code>, …\nChooses a value from the <em>current subset</em> using the provided …\nRemoves the item specified by the given <em>logical</em> index, …\nRemoves the items specified by the given <em>logical</em> indexes, …\nReturns the total number of elements in the universal set.\nCreates a new, empty <code>RepeatVec</code> with the specified capacity …\nCreates a new thread with a larger stack size.")