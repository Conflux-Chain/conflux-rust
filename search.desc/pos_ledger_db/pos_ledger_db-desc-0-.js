searchState.loadedDescShard("pos_ledger_db", 0, "This crate provides <code>PosLedgerDB</code> which represents physical …\nThis holds a handle to the underlying DB responsible for …\nThis module defines error types used by <code>PosLedgerDB</code>.\nReturns the argument unchanged.\nGets an instance of <code>BackupHandler</code> for data backup purpose.\nGets ledger info at specified version and ensures it’s …\nGets an instance of <code>RestoreHandler</code> for data restore …\nGets a batch of transactions for the purpose of …\nReturns a transaction that is the <code>seq_num</code>-th one …\nCalls <code>U::from(self)</code>.\n<code>first_version</code> is the version of the first transaction in …\nThis module defines representation of Diem core data …\nThis force the db to update rocksdb properties immediately.\n<code>BackupHandler</code> provides functionalities for DiemDB data …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets an iterator which can yield all accounts in the state …\nGets the proof that proves a range of accounts.\nGets the epoch, committed version, and synced version of …\nGets the proof of the state root at specified version. …\nGets an iterator that yields a range of transactions.\nGets the proof for a transaction chunk. N.B. the <code>LedgerInfo</code>…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProvides functionalities for DiemDB data restore.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis enum defines errors commonly used among <code>PosLedgerDB</code> …\nA requested item is not found.\nRequested too many items.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRocksdb metrics")