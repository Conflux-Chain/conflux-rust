searchState.loadedDescShard("cfx_rpc_eth_types", 0, "<code>AccessListResult</code> for handling errors from …\nAccess list with gas used appended.\nAction\n-1 means all transactions\nBlock representation\nRepresents rpc api block number param.\nBlockOverrides is a set of header fields to override.\nBundle of transactions\nWrapper structure around vector of bytes.\nCREATE\nCREATE2\nCall response\nCall\nCall\nCall\nCall code\nCall Result\nCall type.\nCreate response\nCreate\nCreate\nCraete Result\nThe type of the create-like instruction.\nDelegate call\nEarliest block (genesis)\nEmpty result\nOther errors with error message encoded.\nCallResponse for eth_callMany\nFilter\nHelper type that bundles various overrides for EVM …\nCall failure\nCreation failure\nFilter Address\nResults of the filter_changes RPC.\nFinalized block\nHash\nNew hashes (block or transactions)\nBlock header representation.\nTransaction index\nInfo when syncing\nLatest block\nTrace\nLog\nNew logs.\nThe maximum number of blocks that can be simulated in a …\nList\nList\nNot a create\nNone\nNone\nNot syncing\nNone\nNone\nNumber\nPending block (being mined)\nReceipt\nResponse\nExecution has been reverted with REVERT instruction.\nCustom account override used in rpc call\nA set of account overrides\nCompatibility tag support for ethereum “safe” tag. …\nRepresents a batch of calls to be simulated sequentially …\nCaptures the outcome of a transaction simulation. It …\nThe error response returned by the <code>eth_simulateV1</code> method.\nSimulation options for executing multiple blocks and …\nRepresents the result of simulating a block.\nSingle\nSingle\nState context for callMany\nStatic call\nSync info\nSync status\nTopic\nTrace\nTransaction\nRepresents a transaction index where -1 means all …\nCall request\nTransaction Pool Content From\nTransaction Pool Inspect\nTransaction summary as found in the Txpool Inspection …\nList with accounts accessed during transaction.\nList with accounts accessed during transaction.\nOptional access list\nAccess list\nAction\nAddress\nH160\nAuthors address\nAuthors address\nFake balance to set for the account before executing the …\nOverrides the basefee of the block.\nBase fee\nBase fee\nCreates a new instance with the given block overrides.\nApplies overrides to the block before execution.\nA dictionary that maps blockNumber to a user-defined hash. …\nBlock hash\nBlock Hash\nBlock hash\nBlock Hash\nBlock hash\nBlock Number\nBlock Number\nBlock number\nBlock Number\nBlock number\nBlock overrides to apply\nModifications to the default block characteristics.\nArray of block state calls to be executed at specific, …\nAdds a call to the block.\nA vector of transactions to be simulated.\nA vector of results for each call in the block.\nThe network id of the transaction, if any.\nCode error -3200: Execution reverted -32015: VM execution …\nFake EVM bytecode to inject into the account before …\nOverrides the coinbase address of the block.\nContract address\nCreates contract\nCumulative gas used\nCurrent block\nData\nDifficulty\nDifficulty\nOverrides the difficulty of the block.\nEffective gas price\nEnsures the result is OK, returning <code>AccessListWithGasUsed</code> …\nReturns the value if present, otherwise returns the error.\nOptional error message if the transaction failed.\neth_call output (if error)\nError in case the call failed\nConflux espace gas limit, this is the real gas limit of …\nPub-Sub types.\nAdds a block to the simulation payload.\nAdds multiple blocks to the simulation payload.\nAdds multiple calls to the block.\nExtra data\nExtra data\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>TransactionRequest</code> into a <code>Bundle</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSender\nSender\nFrom\nFrom Block\nConvert <code>SignedTransaction</code> into RPC Transaction.\nExtracts the <code>TxpoolInspectSummary</code> from a transaction.\nGas\nGas\nGas amount\nThe gas fee charged in the execution of the transaction.\nGas Limit\nGas Limit\nOverrides the gas limit of the block.\nGas Price\nGas Price\nGas Price\nEstimated gas used with access list.\nEstimated gas used with access list.\nGas Used\nGas Used\nGas used\nThe amount of gas used by the transaction.\nReturns <code>true</code> if the overrides contain block overrides.\nReturns <code>true</code> if the overrides contain state overrides.\nHash of the block\nHash of the block\nHash\nHighest block seen so far\nReturns the index if this is the index variant\nThe simulated block.\nData\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator that consumes and yields all pending …\nReturns an iterator that consumes and yields all pending …\nReturns an iterator that consumes and yields all queued …\nReturns an iterator that consumes and yields all queued …\nConvert back to vector\nReturns true if this is the all variant\nChecks if there is an error in the result.\nReturns true if this is the index variant\nLog Index in Block\nLogs\nLogs generated during the execution of the transaction.\nLogs bloom\nLogs bloom\nLogs bloom\nMax fee per gas\nMax fee per gas\nminer bribe\nMessage error\nAlias of <code>author</code>\nAlias of <code>author</code>\nMix hash\nMoves addresses precompile into the specified address. …\nSimple constructor.\nCreates a new instance with the given overrides\nNonce\nFake nonce to set for the account before executing the …\nNonce\nNonce\nBlock number\nBlock number\nOverrides the block number.\nHash of the parent\nHash of the parent\npending tx\npending tx\npending tx\nReturns an iterator over references to all pending …\nReturns an iterator over references to all pending …\nPublic key of the signer.\nqueued tx\nqueued tx\nqueued tx\nReturns an iterator over references to all queued …\nReturns an iterator over references to all queued …\nThe R field of the signature.\nOverrides the prevrandao of the block.\nRaw transaction data\nTransactions receipts root hash\nTransactions receipts root hash\nRemoves the transactions from the given sender\nWhether Log Type is Removed (Geth Compatibility Field)\nResult\nThe raw bytes returned by the transaction.\nFlag to decide if full transactions should be returned …\nThe S field of the signature.\nSize in bytes\nSize in bytes\nThe standardised V field of the signature (0 or 1). Used …\nStarting block\nCreates a new instance with the given state overrides.\nFake key-value mapping to override all slots in the …\nApplies overrides to the state before execution.\nFake key-value mapping to override individual slots in the …\nState modifications to apply before executing the …\nState root hash\nState root hash\nThe final status of the transaction, typically indicating …\nStatus code\nSubtraces\nOverrides the timestamp of the block.\nTimestamp\nTimestamp\nRecipient\nRecipient\nTo\nRecipient (None when contract creation)\nTo Block\nConvert block number to min block target.\nTopics\nTopics\nTotal difficulty\nTrace address\nTrace filter deserialization.\nFlag to determine whether to trace ERC20/ERC721 token …\nTransaction Hash\nTransaction Hash\nTransaction hash\nInclusive number of tx to replay in block. -1 means replay …\nTransaction Index\nTransaction index\nTransaction Index\nLog Index in Transaction\nTransaction position\ntransaction type\nTransactions\nAll transactions to execute\nTransactions root hash\nTransactions root hash\nDetailed error message if tx execution is unsuccessful. …\nUncles’ hashes\nHash of the uncles\nHash of the uncles\nThe standardised V field of the signature.\nValid\nFlag to enable or disable validation of the transaction …\neth_call output (if no error)\nTransfered value\nValue\nTransferred value\nWarp sync snapshot chunks total.\nWarp sync snpashot chunks processed.\nAdds block overrides to an existing instance.\nEnables block overrides\nEnables returning full transactions.\nAdds state overrides to an existing instance.\nEnables state overrides\nEnables tracing of token transfers.\nEnables validation of the transaction sequence.\nblock hash\nonly return blocks part of the canon chain\nNew block header.\nSubscription kind.\nLog\nLogs subscription.\nLog parameters.\nNew block headers subscription.\nNew Pending Transactions subscription.\nNo parameters passed.\nSubscription kind.\nSubscription result.\nNode syncing status subscription.\nTransaction hash\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrace filter\nOutput offset\nOutput amount\nReturns the argument unchanged.\nFrom address\nFrom block\nCalls <code>U::from(self)</code>.\nTo address\nTo block")