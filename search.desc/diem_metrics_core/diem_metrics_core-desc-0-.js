searchState.loadedDescShard("diem_metrics_core", 0, "An interface for encoding metric families into an …\nA <code>Metric</code> counts individual observations from an event or …\nTimer to measure and record the duration of an event.\nA <code>Collector</code> that bundles a set of Histograms that all …\nThe integer version of <code>Counter</code>. Provides better …\nThe integer version of <code>CounterVec</code>. Provides better …\nThe integer version of <code>Gauge</code>. Provides better performance …\nThe integer version of <code>GaugeVec</code>. Provides better …\nAn implementation of an <code>Encoder</code> that converts a …\n<code>encode</code> converts a slice of MetricFamily proto messages …\n<code>format_type</code> returns target format.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn all <code>MetricFamily</code> of <code>DEFAULT_REGISTRY</code>.\nReturn count of all samples.\nReturn accumulated sum of all samples.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn a <code>LocalHistogram</code> for single thread usage.\nCreate a new text encoder.\nAdd a single observation to the <code>Histogram</code>.\nObserve execution time of a closure, in second.\nObserve and record timer duration (in seconds).\nCreate a [<code>Histogram</code>] and registers to default registry.\nCreate a [<code>HistogramVec</code>] and registers to default registry.\nCreate an [<code>IntCounter</code>] and registers to default registry.\nCreate an [<code>IntCounterVec</code>] and registers to default …\nCreate an [<code>IntGauge</code>] and registers to default registry.\nCreate an [<code>IntGaugeVec</code>] and registers to default registry.\nReturn a <code>HistogramTimer</code> to track a duration.\nObserve and return timer duration (in seconds).\nObserve, record and return timer duration (in seconds).\n<code>with_opts</code> creates a <code>Histogram</code> with the <code>opts</code> options.")