searchState.loadedDescShard("cfx_parameters", 0, "Returns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAbout 2020.12.11-15:30 for both the height and the block …\nThis is the cap of the size of the anticone barrier. If we …\nThis is the cap of the size of …\nThe initial storage point proportion after CIP107 is …\nThe initial base price share proportion after CIP137 is …\nThe minimum timer diff value for the adaptive test in …\nThe maximum value of adaptive block generation risk that a …\nThe maximum number of epochs that the confirmation meter …\nThis is the minimum risk that the confirmation meter tries …\nThe batch step in the confirmation meter to do the …\nThis controls how often the confirmation meter updates. …\nThe maximum number of blocks to be executed in each epoch\nThe initial and minimum base price\nHere is the delay for us to recycle those orphaned blocks …\n<code>REWARD_EPOCH_COUNT</code> needs to be larger than …\nUsed in Ethereum replay e2e test.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDuring syncing, we might transiently have enough malicious …\nItems not accessed for this amount of time are removed …\nThe threshold controlling whether a node is in catch-up …\nFrequency of checking request timeouts.\n(Maximum) number of items requested in a single request.\nRequest timeouts.\nFrequency of sending StatusPing message to peers.\nDuring log filtering, we stream a set of items (blooms, …\nMax number of epochs/headers/txs to send to a light peer …\nMaximum number of in-flight items at any given time. If we …\nMaximum number of in-flight epoch requests at any given …\nMaximum time period we wait for a response for an …\nNumber of epochs to request in one round (in possibly …\nMinimum number of missing items in the sync pipeline. If …\nFrequency of re-triggering sync.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is the scale factor for accumulated interest rate: …\nThis is the number of blocks per day.\nThis is the number of blocks per hour.\nThis is the number of blocks per second.\nThis is the number of blocks per year.\nThis is the storage collateral units for each KiB of code, …\nThe collaterals in drips for one key/value pair in storage.\nThis is the storage collateral units to deposit for one …\nThis is the unit of storage collateral to deposit\nThis is the initial interest rate per block with scale: …\nThe initial annual interest is 4%, which means the initial …\nThe inverse of interest rate\nThis controls the tokens required for one PoS vote\nThis is the service charge rate for withdraw, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMeasured block propagation delay in <em>seconds</em>. This will …\nThe threshold controlling whether a node is in catch-up …\nThe threshold controlling whether we should query …\nThe max number of blocks that are to be sent for compact …\nThe max number of epochs whose hashes are to be responded …\nThe max number of headers that are to be sent for header …\nThis threshold controlling whether a node should request …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")