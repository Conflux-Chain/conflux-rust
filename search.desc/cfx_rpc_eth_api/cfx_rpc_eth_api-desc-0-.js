searchState.loadedDescShard("cfx_rpc_eth_api", 0, "Server trait implementation for the <code>DebugApi</code> RPC API.\nServer trait implementation for the <code>EthApi</code> RPC API.\nServer trait implementation for the <code>EthFilterApi</code> RPC API.\nServer trait implementation for the <code>EthPubSubApi</code> RPC API.\nServer trait implementation for the <code>NetApi</code> RPC API.\nServer trait implementation for the <code>ParityApi</code> RPC API.\nServer trait implementation for the <code>RpcApi</code> RPC API.\nServer trait implementation for the <code>TraceApi</code> RPC API.\nServer trait implementation for the <code>TxPoolApi</code> RPC API.\nServer trait implementation for the <code>Web3Api</code> RPC API.\nReturns a list of addresses owned by client.\nReturns the client coinbase address.\nReturns the balance of the account of given address.\nReturns information about a block by hash.\nReturns information about a block by number.\nReturns the number of most recent block.\nReturns all transaction receipts for a given block.\nReturns all transaction receipts for a given block.\nReturns all traces produced at the given block.\nReturns the number of transactions in a block from a block …\nReturns the number of transactions in a block matching the …\nReturns the number of uncles in a block from a block …\nReturns the number of uncles in a block with given block …\nExecutes a new message call immediately without creating a …\nSimulate arbitrary number of transactions at an arbitrary …\nReturns the chain ID of the current network.\nReturns current client version.\nGenerates an access list for a transaction.\nThe <code>debug_traceTransaction</code> debugging method will attempt …\nGenerates and returns an estimate of how much gas is …\nIntroduced in EIP-4844, returns the current blob base fee …\nReturns all filter changes since last poll.\nReturns all logs matching given filter (in a range ‘from…\nReturns all traces matching the provided filter.\nReturns the current price per gas in wei.\nReturns code at a given address at given block number.\nReturns the number of hashes per second that the node is …\nReturns the block’s header at given hash.\nReturns the block’s header at given number.\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nCollects all the methods and subscriptions defined in the …\nReturns true if client is actively listening for network …\nReturns whether the client is actively mining new blocks.\nReturns logs matching given filter object.\nReturns the account details by specifying an address and a …\nCreates a new block filter and returns its id.\nCreates anew filter and returns its id.\nCreates a pending transaction filter and returns its id.\nReturns number of peers connected to node.\nReturns the protocol version encoded as a string.\nReturns information about a raw transaction by block hash …\nReturns information about a raw transaction by block …\nReturns the EIP-2718 encoded transaction if it exists.\nLists enabled APIs and the version of each.\nSends signed transaction, returning its hash.\nSends transaction; will block waiting for signer to return …\nReturns sha3 of the given data.\nReturns an Ethereum specific signature with: …\nSigns a transaction that can be submitted to the network …\n<code>eth_simulateV1</code> executes an arbitrary number of …\nReturns the value from a storage position at a given …\nReturns the hash of the current block, the seedHash, and …\n@alias of <code>eth_sendRawTransaction</code>.\nUsed for submitting a proof-of-work solution.\nCreate an ethereum subscription for the given params\nReturns an object with data about the sync status or false.\nReturns information about a transaction by block hash and …\nReturns information about a transaction by block number …\nReturns the information about a transaction requested by …\nReturns information about a transaction by sender and …\nReturns the number of transactions sent from an address at …\nReturns the receipt of a transaction by transaction hash.\nReturns all traces produced at the given transaction.\nReturns the details of all transactions currently pending …\nRetrieves the transactions contained within the txpool, …\nReturns a summary of all the transactions currently …\nReturns the number of transactions currently pending for …\nReturns an uncle block of the given block and index.\nReturns an uncle block of the given block and index.\nUninstalls filter.\nReturns the network ID.")