searchState.loadedDescShard("cfx_addr", 0, "The address type specified in option doesn’t match the …\nChecksum failed (checksum).\nStruct containing the raw bytes and metadata of a Conflux …\nError concerning decoding of cfx_base32_addr.\nError concerning encoding of cfx_base32_addr.\nSpecific Network Id.\nThe address type is invalid.\nUnexpected character (char).\nInvalid length (length).\nFailed to match known options.\nPadding is invalid. Either padding_bits &gt; from_bits or …\nFailed to match known prefixes (prefix).\nMain network.\nUpper and lowercase address string.\nZero or multiple prefixes.\nThe option string isn’t in a valid format.\nTest network.\nVersion byte was not recognized.\nThe checksum calculation includes the lower 5 bits of each …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe parsed address in H160 format.\nBase32 address. This is included for debugging purposes.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNetwork\nAddress bytes")