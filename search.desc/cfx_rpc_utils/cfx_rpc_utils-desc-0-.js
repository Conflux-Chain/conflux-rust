searchState.loadedDescShard("cfx_rpc_utils", 0, "Helper traits to wrap generic l1 errors, in network …\nRPC Error codes and error objects\nHelper trait to access wrapped core error.\nHelper trait to wrap core <code>EthApiError</code>.\nHelper trait to wrap core <code>EthApiError</code>.\nReturns reference to <code>EthApiError</code>, if this an error variant …\nConverts from error via <code>EthApiError</code>.\nConverts into error via <code>EthApiError</code>.\nReturns <code>true</code> if error is […\nReturns <code>true</code> if error is […\nCall() execution error. This is clearly an application …\nThe requested feature is deprecated.\nEncoding error happened in signing structured data. …\nAny exception happened while processing the transaction. …\nThe requested feature is experimental.\nThe node is not able to serve the request due to …\nNo peers are currently connected or there is insufficient …\nNo connection to trusted peers.\nThe error can be given to a request about a previous …\nWhen the node is still in catch up mode, it is not capable …\nWhen the request is considered too much for the rpc …\nWhen there are too many rpc requests. We limit the number …\nThe node see a suspicious total mining power or block rate.\nThe request is not supported (yet) at this version.\nThe transitions is before Berlin and has access list\nCustom pool error Eip-4844 related error Thrown if a …\nWhen the transaction is already known\nGas limit was exceeded during execution. Contains the gas …\nBlock <code>blob_base_fee</code> is greater than tx-specified …\nBlob transaction has a versioned hash with an invalid blob\nBlob transaction is a create transaction\nBlob transaction has no versioned hashes\n<code>blob_hashes</code>/<code>blob_versioned_hashes</code> is not supported for …\nThrown when constructing an RPC block from primitive block …\nThrown when a call or transaction request (<code>eth_call</code>, …\nWhen a raw transaction is empty\nContains the error value\nErrors that can occur when interacting with the <code>eth_</code> …\nResult alias\nEvm generic purpose error.\nUnspecific EVM halt error.\nWhen the transaction exceeds the block gas limit\nWhen the max initcode size is exceeded\n<code>excess_blob_gas</code> is not set for Cancun and above\nError thrown when a (tracing) call exceeds the configured …\nWhen decoding a signed transaction fails\nThrown post London if the transaction’s fee is less than …\nA sanity error to avoid huge numbers specified in the fee …\nThrown if the transaction gas exceeds the limit\nThrown if the transaction is specified to use less gas …\nThrown when calculating gas usage\nRepresents the inability to cover max cost + value …\nthrown if the transaction sender doesn’t have enough …\nError thrown when a spawned blocking task failed to …\nError thrown when a spawned blocking task failed to …\nInternal Error thrown by the javascript tracer\nErrors related to invalid transactions\nWhen an invalid block range is provided\nInvalid chain id set for the transaction.\nAn operand to an opcode was invalid or out of range. …\nGeneral purpose error for invalid params\nWhen the percentile array is invalid\nWhen the sender is invalid\nWhen the tracer config does not match the tracer\nErrors related to invalid transactions\nWhen the transaction signature is invalid\n<code>max_fee_per_blob_gas</code> is not supported for blocks before …\nthrown if creation transaction provides the init code …\nGas limit was exceeded during memory expansion. Contains …\nWhen a negative value is encountered\nReturned if the nonce of a transaction is too high …\nreturned if the nonce of a transaction is higher than the …\nreturned if the nonce of a transaction is lower than the …\nContains the success value\nThe transaction is before Spurious Dragon and has a chain …\nError thrown when tracing with a muxTracer fails Any other …\nOther unspecified error\nWhen oversized data is encountered\nErrors related to the transaction pool\nGas limit was exceeded during precompile execution. …\nAn internal error where prevrandao is not set in the evm’…\nWhen the replacement transaction is underpriced\nThrown if executing a transaction failed during …\nRepresents a reverted transaction and its output data.\nAn error due to invalid transaction.\nA helper error type that’s mainly used to mirror <code>geth</code> …\nThrown if the sender of a transaction is a contract.\nThrown to ensure no one is able to specify a transaction …\nA sanity error to avoid huge numbers specified in the tip …\nBlob transaction has too many blobs\nError encountered when converting a transaction type\nError thrown when both <code>data</code> and <code>input</code> fields are set and …\nCall Input error when both <code>data</code> and <code>input</code> fields are set …\nOther internal error Error related to signing Thrown when …\nWhen the transaction pool is full\nThrown if a transaction is not supported in the current …\nWhen the transaction is underpriced\nWhen an unknown block number is encountered\nThrown when an unknown block or transaction index is …\nThrown when querying for <code>finalized</code> or <code>safe</code> block before …\nSome feature is unsupported\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWraps the output bytes\nThe number of blobs in the transaction.\nThe maximum number of blobs allowed.\nConstructs an internal JSON-RPC error.\nConstructs an internal JSON-RPC error with data\nConstructs an invalid params JSON-RPC error.\nConstructs a JSON-RPC error, consisting of <code>code</code>, <code>message</code> …\nConstructs an internal JSON-RPC error.\nConstructs an internal JSON-RPC error with data\nConstructs a JSON-RPC error, consisting of <code>code</code>, <code>message</code> …\nConstructs an internal JSON-RPC error with code and message\nSpawns a blocking task. CPU heavy tasks are executed with …\nExecutes code on a blocking thread.\nReturns a handle for spawning IO heavy blocking tasks.\nExecutes the future on a new blocking task.")