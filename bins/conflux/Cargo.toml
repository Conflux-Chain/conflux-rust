[package]
name = "conflux"
build = "build.rs"
edition = "2021"
version.workspace = true
authors.workspace = true
description.workspace = true
documentation.workspace = true
license-file.workspace = true

[dependencies]
clap = { workspace = true, features = ["derive", "cargo"] }
serde_json = { workspace = true }
parking_lot = { workspace = true }
cfxstore = { workspace = true }
rpassword = { workspace = true }
jsonrpsee = { workspace = true, features = ["http-client"] }
log = { workspace = true }
cfxcore = { workspace = true }
network = { workspace = true }
db = { workspace = true }
primitives = { workspace = true }
log4rs = { workspace = true, features = ["background_rotation", "gzip"] }
rlp = { workspace = true }
rand_08 = { workspace = true }
client = { workspace = true }
cfx-types = { workspace = true }
cfxkey = { workspace = true }
rustc-hex = { workspace = true }
env_logger = { workspace = true }
malloc_size_of = { workspace = true }
diem-crypto = { workspace = true }
diem-types = { workspace = true }
pos-ledger-db = { workspace = true }
executor = { workspace = true }                                           # used by pos-genesis-tool
storage-interface = { workspace = true }
bcs = { workspace = true }
tempfile = { workspace = true }
parity-version = { workspace = true }
tokio = { workspace = true, features = ["rt"] }
bls-signatures = { workspace = true }
cfx-executor = { workspace = true }
cfx-execute-helper = { workspace = true }
cfx-mallocator-utils = { workspace = true }

[target.'cfg(not(target_env = "msvc"))'.dependencies]
tikv-jemallocator = { workspace = true }

[features]
default = ["jemalloc-global"]
deadlock-detection = ["parking_lot/deadlock_detection"]
u64-mpt-db-key = ["client/u64_mpt_db_key"]
# According to Rust's feature unification, when a feature is enabled for a dependency in the root package,
# it will be enabled across all paths depending on that package. 
# (https://doc.rust-lang.org/cargo/reference/features.html#feature-unification)
blst-portable = ["bls-signatures/blst-portable"]
align_evm = ["cfx-executor/align_evm", "cfx-execute-helper/align_evm"]
# mallocator related features
jemalloc-global = ["malloc_size_of/jemalloc", "cfx-mallocator-utils/jemalloc"]
jemalloc-prof = ["cfx-mallocator-utils/jemalloc", "cfx-mallocator-utils/jemalloc-prof"]
tracy-allocator = ["cfx-mallocator-utils/tracy-allocator"]
# Because jemalloc is default and preferred over snmalloc when both features are
# enabled, `--no-default-features` should be used when enabling snmalloc or
# snmalloc-native.
snmalloc = ["cfx-mallocator-utils/snmalloc"]
snmalloc-native = ["cfx-mallocator-utils/snmalloc-native"]

[dev-dependencies]
tokio = { workspace = true, features = ["full"] }
mockito = { workspace = true }